{
    "cluster_role_binding": {
        "cluster-admin": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "cluster-admin",
                "namespace": null,
                "owner_references": null,
                "resource_version": "156",
                "self_link": null,
                "uid": "a78a0adf-c0df-450b-b5b5-452c4907f1a3"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "cluster-admin"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:masters",
                    "namespace": null
                }
            ]
        },
        "kindnet": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:49+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kubectl-create",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:49+00:00"
                    }
                ],
                "name": "kindnet",
                "namespace": null,
                "owner_references": null,
                "resource_version": "292",
                "self_link": null,
                "uid": "7e23c7eb-78ed-4c2b-97df-e6921d4436fa"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "kindnet"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "kindnet",
                    "namespace": "kube-system"
                }
            ]
        },
        "kubeadm:get-nodes": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:47+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kubeadm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:47+00:00"
                    }
                ],
                "name": "kubeadm:get-nodes",
                "namespace": null,
                "owner_references": null,
                "resource_version": "248",
                "self_link": null,
                "uid": "42af4cc8-eb2c-45a1-a929-8f353f2fcfb0"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "kubeadm:get-nodes"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:bootstrappers:kubeadm:default-node-token",
                    "namespace": null
                }
            ]
        },
        "kubeadm:kubelet-bootstrap": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:47+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kubeadm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:47+00:00"
                    }
                ],
                "name": "kubeadm:kubelet-bootstrap",
                "namespace": null,
                "owner_references": null,
                "resource_version": "249",
                "self_link": null,
                "uid": "11369705-becf-48ab-b8ce-077d31f7ab3b"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node-bootstrapper"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:bootstrappers:kubeadm:default-node-token",
                    "namespace": null
                }
            ]
        },
        "kubeadm:node-autoapprove-bootstrap": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:47+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kubeadm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:47+00:00"
                    }
                ],
                "name": "kubeadm:node-autoapprove-bootstrap",
                "namespace": null,
                "owner_references": null,
                "resource_version": "250",
                "self_link": null,
                "uid": "25faebdb-7848-415a-b769-3c036e7157ab"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:bootstrappers:kubeadm:default-node-token",
                    "namespace": null
                }
            ]
        },
        "kubeadm:node-autoapprove-certificate-rotation": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:47+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kubeadm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:47+00:00"
                    }
                ],
                "name": "kubeadm:node-autoapprove-certificate-rotation",
                "namespace": null,
                "owner_references": null,
                "resource_version": "251",
                "self_link": null,
                "uid": "3399431b-d591-4cc2-a435-cb075da3784f"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:nodes",
                    "namespace": null
                }
            ]
        },
        "kubeadm:node-proxier": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:48+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kubeadm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:48+00:00"
                    }
                ],
                "name": "kubeadm:node-proxier",
                "namespace": null,
                "owner_references": null,
                "resource_version": "270",
                "self_link": null,
                "uid": "e4760ab9-51a9-4949-9ea5-3c2f73d8f736"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node-proxier"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "kube-proxy",
                    "namespace": "kube-system"
                }
            ]
        },
        "local-path-provisioner-bind": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"annotations\":{},\"name\":\"local-path-provisioner-bind\"},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"local-path-provisioner-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"local-path-provisioner-service-account\",\"namespace\":\"local-path-storage\"}]}\n"
                },
                "creation_timestamp": "2024-02-06T19:13:51+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kubectl-client-side-apply",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:51+00:00"
                    }
                ],
                "name": "local-path-provisioner-bind",
                "namespace": null,
                "owner_references": null,
                "resource_version": "300",
                "self_link": null,
                "uid": "c620f0c1-1666-4cf0-8e08-9a112c298746"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "local-path-provisioner-role"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "local-path-provisioner-service-account",
                    "namespace": "local-path-storage"
                }
            ]
        },
        "stackgres-operator": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    }
                ],
                "name": "stackgres-operator",
                "namespace": null,
                "owner_references": null,
                "resource_version": "1004",
                "self_link": null,
                "uid": "c8279fbe-8f0a-4a98-b829-2f50463c0b17"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "stackgres-operator"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "stackgres-operator",
                    "namespace": "default"
                }
            ]
        },
        "stackgres-restapi": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    }
                ],
                "name": "stackgres-restapi",
                "namespace": null,
                "owner_references": null,
                "resource_version": "1003",
                "self_link": null,
                "uid": "ab8f3022-d0e1-4ea1-b02e-ec881dd83241"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "stackgres-restapi"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "stackgres-restapi",
                    "namespace": "default"
                }
            ]
        },
        "stackgres-restapi-admin": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    }
                ],
                "name": "stackgres-restapi-admin",
                "namespace": null,
                "owner_references": null,
                "resource_version": "1002",
                "self_link": null,
                "uid": "d4e70f21-2307-489e-bcd7-94106ab1ca77"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "stackgres-restapi-admin"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "admin",
                    "namespace": null
                }
            ]
        },
        "system:basic-user": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:basic-user",
                "namespace": null,
                "owner_references": null,
                "resource_version": "162",
                "self_link": null,
                "uid": "5be6b063-74a5-43ab-94f5-a0973427eae4"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:basic-user"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:authenticated",
                    "namespace": null
                }
            ]
        },
        "system:controller:attachdetach-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:attachdetach-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "180",
                "self_link": null,
                "uid": "717fd22d-8704-411f-b31d-a98b3fe0a1c8"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:attachdetach-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "attachdetach-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:certificate-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:certificate-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "210",
                "self_link": null,
                "uid": "eb0474b6-7aba-4600-9465-cc28dd3eacf0"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:certificate-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "certificate-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:clusterrole-aggregation-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:clusterrole-aggregation-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "182",
                "self_link": null,
                "uid": "cd1228d2-383f-4ffc-8795-1aee10828d03"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:clusterrole-aggregation-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "clusterrole-aggregation-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:cronjob-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:cronjob-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "184",
                "self_link": null,
                "uid": "ce5ad1df-055f-4e57-a964-16eb269f67ab"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:cronjob-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "cronjob-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:daemon-set-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:daemon-set-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "186",
                "self_link": null,
                "uid": "6903723c-702d-4f01-baff-120f974dffc2"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:daemon-set-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "daemon-set-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:deployment-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:deployment-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "188",
                "self_link": null,
                "uid": "75f44b83-bc25-48f3-bf15-f855020e347c"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:deployment-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "deployment-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:disruption-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:disruption-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "189",
                "self_link": null,
                "uid": "a7ff924d-304e-4894-a8c7-5d1e686e62a9"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:disruption-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "disruption-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:endpoint-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:endpoint-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "190",
                "self_link": null,
                "uid": "65e0b2a8-4b2e-4d8a-8825-2b9dbc466567"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:endpoint-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "endpoint-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:endpointslice-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:endpointslice-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "191",
                "self_link": null,
                "uid": "646773b3-f84e-43e1-8970-07e0b427cf2c"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:endpointslice-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "endpointslice-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:endpointslicemirroring-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:endpointslicemirroring-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "192",
                "self_link": null,
                "uid": "1dae91a6-5d19-49f6-a82e-a05a8d2c0c46"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:endpointslicemirroring-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "endpointslicemirroring-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:ephemeral-volume-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:ephemeral-volume-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "194",
                "self_link": null,
                "uid": "c0379176-653a-4d67-8db2-1d9dae7c3bf6"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:ephemeral-volume-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "ephemeral-volume-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:expand-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:expand-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "193",
                "self_link": null,
                "uid": "d700bfc6-e689-4a5f-b3b0-406c019e6489"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:expand-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "expand-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:generic-garbage-collector": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:generic-garbage-collector",
                "namespace": null,
                "owner_references": null,
                "resource_version": "195",
                "self_link": null,
                "uid": "b3d7b714-0f2a-44d1-bd4b-c74ce046c845"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:generic-garbage-collector"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "generic-garbage-collector",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:horizontal-pod-autoscaler": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:horizontal-pod-autoscaler",
                "namespace": null,
                "owner_references": null,
                "resource_version": "196",
                "self_link": null,
                "uid": "c64a5331-15a2-49d8-8f81-e977416a3bd7"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:horizontal-pod-autoscaler"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "horizontal-pod-autoscaler",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:job-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:job-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "197",
                "self_link": null,
                "uid": "fa3db4ff-a67f-4d64-bd91-5436a11b39f5"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:job-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "job-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:namespace-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:namespace-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "198",
                "self_link": null,
                "uid": "aea372f3-9e48-4a4d-a28f-86283971c533"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:namespace-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "namespace-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:node-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:node-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "199",
                "self_link": null,
                "uid": "d63a18e6-d9d9-4ce1-85c7-541e71a73557"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:node-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "node-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:persistent-volume-binder": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:persistent-volume-binder",
                "namespace": null,
                "owner_references": null,
                "resource_version": "200",
                "self_link": null,
                "uid": "d53e635c-904a-46e2-a77e-7c814d145335"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:persistent-volume-binder"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "persistent-volume-binder",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:pod-garbage-collector": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:pod-garbage-collector",
                "namespace": null,
                "owner_references": null,
                "resource_version": "201",
                "self_link": null,
                "uid": "55cb9859-bbb2-4fea-a816-16a34d44df3c"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:pod-garbage-collector"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "pod-garbage-collector",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:pv-protection-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:46+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:46+00:00"
                    }
                ],
                "name": "system:controller:pv-protection-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "212",
                "self_link": null,
                "uid": "828b9f07-e26f-43be-b06e-15af315285a8"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:pv-protection-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "pv-protection-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:pvc-protection-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:pvc-protection-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "211",
                "self_link": null,
                "uid": "37439827-5daf-4b98-bf74-aeccd98ce3f0"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:pvc-protection-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "pvc-protection-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:replicaset-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:replicaset-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "202",
                "self_link": null,
                "uid": "92d6cc1d-54ad-4a57-b30f-a93b0dc14d8f"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:replicaset-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "replicaset-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:replication-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:replication-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "203",
                "self_link": null,
                "uid": "ff85fe0f-c9b4-433c-86c8-aa0869823035"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:replication-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "replication-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:resourcequota-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:resourcequota-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "204",
                "self_link": null,
                "uid": "ee043d3a-8579-4fcf-8f8e-7fb20eb8a1d4"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:resourcequota-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "resourcequota-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:root-ca-cert-publisher": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:46+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:46+00:00"
                    }
                ],
                "name": "system:controller:root-ca-cert-publisher",
                "namespace": null,
                "owner_references": null,
                "resource_version": "214",
                "self_link": null,
                "uid": "16f15830-dfad-45df-80a6-8dfe0e387b86"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:root-ca-cert-publisher"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "root-ca-cert-publisher",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:route-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:route-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "205",
                "self_link": null,
                "uid": "2dc90406-10ca-4ab4-9a3d-56ba5a83b5f4"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:route-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "route-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:service-account-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:service-account-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "206",
                "self_link": null,
                "uid": "40150d5e-d6f4-4a07-ba94-e0d77ee95f0c"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:service-account-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "service-account-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:service-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:service-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "207",
                "self_link": null,
                "uid": "febab914-fe35-4bd9-abfc-d0f5ec6cb720"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:service-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "service-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:statefulset-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:statefulset-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "208",
                "self_link": null,
                "uid": "743a5419-a053-4da8-b3a7-3f6a39402a96"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:statefulset-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "statefulset-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:ttl-after-finished-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:46+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:46+00:00"
                    }
                ],
                "name": "system:controller:ttl-after-finished-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "213",
                "self_link": null,
                "uid": "52b102f8-b280-4260-bb6d-68610694caf7"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:ttl-after-finished-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "ttl-after-finished-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:controller:ttl-controller": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:ttl-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "209",
                "self_link": null,
                "uid": "23147b8f-49db-4279-9c7b-a13218ff2382"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:controller:ttl-controller"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "ttl-controller",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:coredns": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:48+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kubeadm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:48+00:00"
                    }
                ],
                "name": "system:coredns",
                "namespace": null,
                "owner_references": null,
                "resource_version": "260",
                "self_link": null,
                "uid": "70dadb4a-55ee-407f-9edc-586eb33de161"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:coredns"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "coredns",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:discovery": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:discovery",
                "namespace": null,
                "owner_references": null,
                "resource_version": "160",
                "self_link": null,
                "uid": "08985e66-447e-47ab-8542-374b3b58dcbb"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:discovery"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:authenticated",
                    "namespace": null
                }
            ]
        },
        "system:kube-controller-manager": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:kube-controller-manager",
                "namespace": null,
                "owner_references": null,
                "resource_version": "168",
                "self_link": null,
                "uid": "e3c4f40a-07f2-4413-a3b3-73b6d1ddb595"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:kube-controller-manager"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-controller-manager",
                    "namespace": null
                }
            ]
        },
        "system:kube-dns": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:kube-dns",
                "namespace": null,
                "owner_references": null,
                "resource_version": "170",
                "self_link": null,
                "uid": "1abc7a4b-158e-4d4a-9b11-8eaccc3096e5"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:kube-dns"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "kube-dns",
                    "namespace": "kube-system"
                }
            ]
        },
        "system:kube-scheduler": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:kube-scheduler",
                "namespace": null,
                "owner_references": null,
                "resource_version": "172",
                "self_link": null,
                "uid": "b54ca3ee-122f-48f0-9c13-20f743b64595"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:kube-scheduler"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-scheduler",
                    "namespace": null
                }
            ]
        },
        "system:monitoring": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:monitoring",
                "namespace": null,
                "owner_references": null,
                "resource_version": "158",
                "self_link": null,
                "uid": "4d171786-7db0-49b1-9c55-00e00456655f"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:monitoring"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:monitoring",
                    "namespace": null
                }
            ]
        },
        "system:node": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:node",
                "namespace": null,
                "owner_references": null,
                "resource_version": "176",
                "self_link": null,
                "uid": "a0103820-922a-43b6-94c7-b5749877f9bd"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node"
            },
            "subjects": null
        },
        "system:node-proxier": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:node-proxier",
                "namespace": null,
                "owner_references": null,
                "resource_version": "166",
                "self_link": null,
                "uid": "b5e90b46-36e6-418c-a733-59183eeeb236"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:node-proxier"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-proxy",
                    "namespace": null
                }
            ]
        },
        "system:public-info-viewer": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:public-info-viewer",
                "namespace": null,
                "owner_references": null,
                "resource_version": "164",
                "self_link": null,
                "uid": "086d293b-63e8-4f1c-96fc-c3c0630f0919"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:public-info-viewer"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:authenticated",
                    "namespace": null
                },
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:unauthenticated",
                    "namespace": null
                }
            ]
        },
        "system:service-account-issuer-discovery": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:service-account-issuer-discovery",
                "namespace": null,
                "owner_references": null,
                "resource_version": "178",
                "self_link": null,
                "uid": "08763720-008f-46c3-9fe6-62a665995bce"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:service-account-issuer-discovery"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "Group",
                    "name": "system:serviceaccounts",
                    "namespace": null
                }
            ]
        },
        "system:volume-scheduler": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:volume-scheduler",
                "namespace": null,
                "owner_references": null,
                "resource_version": "174",
                "self_link": null,
                "uid": "cde541c3-0e96-4b14-a5b6-e46ba4a5d048"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "ClusterRole",
                "name": "system:volume-scheduler"
            },
            "subjects": [
                {
                    "api_group": "rbac.authorization.k8s.io",
                    "kind": "User",
                    "name": "system:kube-scheduler",
                    "namespace": null
                }
            ]
        }
    },
    "cluster_role": {
        "admin": {
            "aggregation_rule": {
                "cluster_role_selectors": [
                    {
                        "match_expressions": null,
                        "match_labels": {
                            "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                        }
                    }
                ]
            },
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:rules": {}
                        },
                        "manager": "clusterrole-aggregation-controller",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:14:00+00:00"
                    },
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:aggregationRule": {
                                ".": {},
                                "f:clusterRoleSelectors": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            }
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "admin",
                "namespace": null,
                "owner_references": null,
                "resource_version": "363",
                "self_link": null,
                "uid": "b92bcc5f-b121-49a8-adec-417e446d844b"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy",
                        "secrets",
                        "services/proxy"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "impersonate"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods",
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/eviction"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "events",
                        "persistentvolumeclaims",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "secrets",
                        "serviceaccounts",
                        "services",
                        "services/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "serviceaccounts/token"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "replicasets",
                        "replicasets/scale",
                        "statefulsets",
                        "statefulsets/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "autoscaling"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "horizontalpodautoscalers"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "cronjobs",
                        "jobs"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "ingresses",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "poddisruptionbudgets"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "networking.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "ingresses",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "coordination.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "persistentvolumeclaims/status",
                        "pods",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "serviceaccounts",
                        "services",
                        "services/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "bindings",
                        "events",
                        "limitranges",
                        "namespaces/status",
                        "pods/log",
                        "pods/status",
                        "replicationcontrollers/status",
                        "resourcequotas",
                        "resourcequotas/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "discovery.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "controllerrevisions",
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "statefulsets",
                        "statefulsets/scale",
                        "statefulsets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "autoscaling"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "horizontalpodautoscalers",
                        "horizontalpodautoscalers/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "cronjobs",
                        "cronjobs/status",
                        "jobs",
                        "jobs/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "poddisruptionbudgets",
                        "poddisruptionbudgets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "networking.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "localsubjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "rbac.authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "rolebindings",
                        "roles"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                }
            ]
        },
        "cluster-admin": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "cluster-admin",
                "namespace": null,
                "owner_references": null,
                "resource_version": "73",
                "self_link": null,
                "uid": "5e5fa670-738b-4dd0-a150-1487778504c6"
            },
            "rules": [
                {
                    "api_groups": [
                        "*"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "api_groups": null,
                    "non_resource_ur_ls": [
                        "*"
                    ],
                    "resource_names": null,
                    "resources": null,
                    "verbs": [
                        "*"
                    ]
                }
            ]
        },
        "edit": {
            "aggregation_rule": {
                "cluster_role_selectors": [
                    {
                        "match_expressions": null,
                        "match_labels": {
                            "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                        }
                    }
                ]
            },
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults",
                    "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:rules": {}
                        },
                        "manager": "clusterrole-aggregation-controller",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:14:00+00:00"
                    },
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:aggregationRule": {
                                ".": {},
                                "f:clusterRoleSelectors": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {},
                                    "f:rbac.authorization.k8s.io/aggregate-to-admin": {}
                                }
                            }
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "edit",
                "namespace": null,
                "owner_references": null,
                "resource_version": "362",
                "self_link": null,
                "uid": "a5996554-e02b-4b09-8dd7-848ebb526a83"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy",
                        "secrets",
                        "services/proxy"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "impersonate"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods",
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/eviction"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "events",
                        "persistentvolumeclaims",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "secrets",
                        "serviceaccounts",
                        "services",
                        "services/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "serviceaccounts/token"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "replicasets",
                        "replicasets/scale",
                        "statefulsets",
                        "statefulsets/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "autoscaling"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "horizontalpodautoscalers"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "cronjobs",
                        "jobs"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "ingresses",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "poddisruptionbudgets"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "networking.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "ingresses",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "coordination.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "persistentvolumeclaims/status",
                        "pods",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "serviceaccounts",
                        "services",
                        "services/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "bindings",
                        "events",
                        "limitranges",
                        "namespaces/status",
                        "pods/log",
                        "pods/status",
                        "replicationcontrollers/status",
                        "resourcequotas",
                        "resourcequotas/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "discovery.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "controllerrevisions",
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "statefulsets",
                        "statefulsets/scale",
                        "statefulsets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "autoscaling"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "horizontalpodautoscalers",
                        "horizontalpodautoscalers/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "cronjobs",
                        "cronjobs/status",
                        "jobs",
                        "jobs/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "poddisruptionbudgets",
                        "poddisruptionbudgets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "networking.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "kindnet": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:49+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:rules": {}
                        },
                        "manager": "kubectl-create",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:49+00:00"
                    }
                ],
                "name": "kindnet",
                "namespace": null,
                "owner_references": null,
                "resource_version": "290",
                "self_link": null,
                "uid": "db097ead-e655-4399-b4a0-84394301638b"
            },
            "rules": [
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kindnet"
                    ],
                    "resources": [
                        "podsecuritypolicies"
                    ],
                    "verbs": [
                        "use"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "kubeadm:get-nodes": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:47+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:rules": {}
                        },
                        "manager": "kubeadm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:47+00:00"
                    }
                ],
                "name": "kubeadm:get-nodes",
                "namespace": null,
                "owner_references": null,
                "resource_version": "247",
                "self_link": null,
                "uid": "d2300350-1240-42aa-a1f6-ab98a2ae83d3"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        "local-path-provisioner-role": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"annotations\":{},\"name\":\"local-path-provisioner-role\"},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"persistentvolumeclaims\",\"configmaps\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"endpoints\",\"persistentvolumes\",\"pods\"],\"verbs\":[\"*\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"storage.k8s.io\"],\"resources\":[\"storageclasses\"],\"verbs\":[\"get\",\"list\",\"watch\"]}]}\n"
                },
                "creation_timestamp": "2024-02-06T19:13:51+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kubectl-client-side-apply",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:51+00:00"
                    }
                ],
                "name": "local-path-provisioner-role",
                "namespace": null,
                "owner_references": null,
                "resource_version": "299",
                "self_link": null,
                "uid": "8040d2d0-ccda-49c9-b05d-7447582c8415"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes",
                        "persistentvolumeclaims",
                        "configmaps"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints",
                        "persistentvolumes",
                        "pods"
                    ],
                    "verbs": [
                        "*"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "storageclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "stackgres-operator": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    }
                ],
                "name": "stackgres-operator",
                "namespace": null,
                "owner_references": null,
                "resource_version": "999",
                "self_link": null,
                "uid": "baed75f5-4643-4f8d-9958-8536ea8b3e43"
            },
            "rules": [
                {
                    "api_groups": [
                        "",
                        "apps",
                        "extensions",
                        "rbac.authorization.k8s.io",
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods",
                        "pods/exec",
                        "pods/log",
                        "services",
                        "endpoints",
                        "endpoints/restricted",
                        "persistentvolumeclaims",
                        "configmaps",
                        "secrets",
                        "deployments",
                        "statefulsets",
                        "serviceaccounts",
                        "namespaces",
                        "roles",
                        "rolebindings",
                        "events",
                        "cronjobs",
                        "jobs"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "update",
                        "create",
                        "delete",
                        "patch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "storageclasses"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgclusters",
                        "sgpgconfigs",
                        "sginstanceprofiles",
                        "sgpoolconfigs",
                        "sgbackupconfigs",
                        "sgbackups",
                        "sgdistributedlogs",
                        "sgdbops",
                        "sgobjectstorages",
                        "sgscripts",
                        "sgshardedclusters",
                        "sgshardedbackups",
                        "sgshardeddbops",
                        "sgconfigs"
                    ],
                    "verbs": [
                        "create",
                        "watch",
                        "list",
                        "get",
                        "update",
                        "patch",
                        "delete"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgconfigs/status",
                        "sgclusters/status",
                        "sgdistributedlogs/status",
                        "sgclusters/finalizers",
                        "sgpgconfigs/finalizers",
                        "sginstanceprofiles/finalizers",
                        "sgpoolconfigs/finalizers",
                        "sgbackupconfigs/finalizers",
                        "sgbackups/finalizers",
                        "sgdistributedlogs/finalizers",
                        "sgdbops/finalizers",
                        "sgobjectstorages/finalizers",
                        "sgscripts/finalizers",
                        "sgshardedclusters/finalizers",
                        "sgshardedbackups/finalizers",
                        "sgshardeddbops/finalizers",
                        "sgconfigs/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "apps",
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "statefulsets/finalizers",
                        "persistentvolumeclaims/finalizers",
                        "deployments/finalizers",
                        "services/finalizers",
                        "endpoints/finalizers",
                        "cronjobs/finalizers",
                        "jobs/finalizers",
                        "pods/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "sgconfigs.stackgres.io",
                        "sgclusters.stackgres.io",
                        "sginstanceprofiles.stackgres.io",
                        "sgpgconfigs.stackgres.io",
                        "sgpoolconfigs.stackgres.io",
                        "sgbackups.stackgres.io",
                        "sgbackupconfigs.stackgres.io",
                        "sgobjectstorages.stackgres.io",
                        "sgdbops.stackgres.io",
                        "sgdistributedlogs.stackgres.io",
                        "sgshardedclusters.stackgres.io",
                        "sgshardedbackups.stackgres.io",
                        "sgshardeddbops.stackgres.io",
                        "sgscripts.stackgres.io"
                    ],
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        "snapshot.storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "volumesnapshots"
                    ],
                    "verbs": [
                        "list",
                        "get",
                        "watch",
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "prometheuses.monitoring.coreos.com"
                    ],
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        "monitoring.coreos.com"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "servicemonitors",
                        "podmonitors"
                    ],
                    "verbs": [
                        "list",
                        "get",
                        "create",
                        "delete",
                        "update",
                        "patch"
                    ]
                },
                {
                    "api_groups": [
                        "monitoring.coreos.com"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "prometheus",
                        "prometheuses",
                        "podmonitors"
                    ],
                    "verbs": [
                        "list",
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "admissionregistration.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "stackgres-operator"
                    ],
                    "resources": [
                        "mutatingwebhookconfigurations",
                        "validatingwebhookconfigurations"
                    ],
                    "verbs": [
                        "get",
                        "patch"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "sgconfigs.stackgres.io",
                        "sgclusters.stackgres.io",
                        "sginstanceprofiles.stackgres.io",
                        "sgpgconfigs.stackgres.io",
                        "sgpoolconfigs.stackgres.io",
                        "sgbackups.stackgres.io",
                        "sgbackupconfigs.stackgres.io",
                        "sgobjectstorages.stackgres.io",
                        "sgdbops.stackgres.io",
                        "sgdistributedlogs.stackgres.io",
                        "sgshardedclusters.stackgres.io",
                        "sgshardedbackups.stackgres.io",
                        "sgshardeddbops.stackgres.io",
                        "sgscripts.stackgres.io"
                    ],
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "shardingsphere.apache.org"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "computenodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "update",
                        "create",
                        "delete",
                        "patch"
                    ]
                }
            ]
        },
        "stackgres-restapi": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    }
                ],
                "name": "stackgres-restapi",
                "namespace": null,
                "owner_references": null,
                "resource_version": "997",
                "self_link": null,
                "uid": "0571b24c-dec3-4987-a171-85ebfc750417"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "users",
                        "groups",
                        "serviceaccount"
                    ],
                    "verbs": [
                        "impersonate"
                    ]
                },
                {
                    "api_groups": [
                        "authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "secrets"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                }
            ]
        },
        "stackgres-restapi-admin": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "api.stackgres.io/auth": "user",
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:api.stackgres.io/auth": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    }
                ],
                "name": "stackgres-restapi-admin",
                "namespace": null,
                "owner_references": null,
                "resource_version": "1001",
                "self_link": null,
                "uid": "20f6c183-90c8-4cbe-bc6f-f3cfcffa085a"
            },
            "rules": [
                {
                    "api_groups": [
                        "",
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/exec",
                        "configmaps",
                        "secrets",
                        "jobs"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/exec"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "secrets",
                        "jobs"
                    ],
                    "verbs": [
                        "delete"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "secrets"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "batch",
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "namespaces",
                        "storageclasses",
                        "pods",
                        "services",
                        "configmaps",
                        "secrets",
                        "persistentvolumes",
                        "persistentvolumeclaims",
                        "events",
                        "jobs"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgclusters",
                        "sgpgconfigs",
                        "sginstanceprofiles",
                        "sgpoolconfigs",
                        "sgbackupconfigs",
                        "sgbackups",
                        "sgdistributedlogs",
                        "sgdbops",
                        "sgobjectstorages",
                        "sgscripts",
                        "sgshardedclusters"
                    ],
                    "verbs": [
                        "create",
                        "watch",
                        "list",
                        "get",
                        "update",
                        "patch",
                        "delete"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgconfigs"
                    ],
                    "verbs": [
                        "watch",
                        "list",
                        "get",
                        "update",
                        "patch"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "sgconfigs.stackgres.io",
                        "sgclusters.stackgres.io",
                        "sginstanceprofiles.stackgres.io",
                        "sgpgconfigs.stackgres.io",
                        "sgpoolconfigs.stackgres.io",
                        "sgbackups.stackgres.io",
                        "sgbackupconfigs.stackgres.io",
                        "sgobjectstorages.stackgres.io",
                        "sgdbops.stackgres.io",
                        "sgdistributedlogs.stackgres.io",
                        "sgshardedclusters.stackgres.io",
                        "sgscripts.stackgres.io"
                    ],
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        "rbac.authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "roles",
                        "rolebindings",
                        "clusterroles",
                        "clusterrolebindings"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "create",
                        "update",
                        "patch",
                        "delete"
                    ]
                }
            ]
        },
        "stackgres-restapi-reader": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "api.stackgres.io/auth": "user",
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:api.stackgres.io/auth": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    }
                ],
                "name": "stackgres-restapi-reader",
                "namespace": null,
                "owner_references": null,
                "resource_version": "998",
                "self_link": null,
                "uid": "4071ee98-e089-4786-94d2-7d643e5901c8"
            },
            "rules": [
                {
                    "api_groups": [
                        "",
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/exec"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/exec"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "batch",
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "namespaces",
                        "storageclasses",
                        "pods",
                        "services",
                        "configmaps",
                        "secrets",
                        "persistentvolumes",
                        "persistentvolumeclaims",
                        "events",
                        "jobs"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgclusters",
                        "sgpgconfigs",
                        "sginstanceprofiles",
                        "sgpoolconfigs",
                        "sgbackupconfigs",
                        "sgbackups",
                        "sgdistributedlogs",
                        "sgdbops",
                        "sgobjectstorages",
                        "sgscripts",
                        "sgshardedclusters"
                    ],
                    "verbs": [
                        "watch",
                        "list",
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgconfigs"
                    ],
                    "verbs": [
                        "watch",
                        "list",
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "sgconfigs.stackgres.io",
                        "sgclusters.stackgres.io",
                        "sginstanceprofiles.stackgres.io",
                        "sgpgconfigs.stackgres.io",
                        "sgpoolconfigs.stackgres.io",
                        "sgbackups.stackgres.io",
                        "sgbackupconfigs.stackgres.io",
                        "sgobjectstorages.stackgres.io",
                        "sgdbops.stackgres.io",
                        "sgdistributedlogs.stackgres.io",
                        "sgshardedclusters.stackgres.io",
                        "sgscripts.stackgres.io"
                    ],
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "list"
                    ]
                }
            ]
        },
        "stackgres-restapi-writer": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "api.stackgres.io/auth": "user",
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:api.stackgres.io/auth": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    }
                ],
                "name": "stackgres-restapi-writer",
                "namespace": null,
                "owner_references": null,
                "resource_version": "1000",
                "self_link": null,
                "uid": "1c5713f0-bc5d-42b8-9a6c-a63f78686c79"
            },
            "rules": [
                {
                    "api_groups": [
                        "",
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/exec",
                        "configmaps",
                        "secrets",
                        "jobs"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/exec"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "secrets",
                        "jobs"
                    ],
                    "verbs": [
                        "delete"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "secrets"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "batch",
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "namespaces",
                        "storageclasses",
                        "pods",
                        "services",
                        "configmaps",
                        "secrets",
                        "persistentvolumes",
                        "persistentvolumeclaims",
                        "events",
                        "jobs"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgclusters",
                        "sgpgconfigs",
                        "sginstanceprofiles",
                        "sgpoolconfigs",
                        "sgbackupconfigs",
                        "sgbackups",
                        "sgdistributedlogs",
                        "sgdbops",
                        "sgobjectstorages",
                        "sgscripts",
                        "sgshardedclusters"
                    ],
                    "verbs": [
                        "create",
                        "watch",
                        "list",
                        "get",
                        "update",
                        "patch",
                        "delete"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgconfigs"
                    ],
                    "verbs": [
                        "watch",
                        "list",
                        "get",
                        "update",
                        "patch"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "sgconfigs.stackgres.io",
                        "sgclusters.stackgres.io",
                        "sginstanceprofiles.stackgres.io",
                        "sgpgconfigs.stackgres.io",
                        "sgpoolconfigs.stackgres.io",
                        "sgbackups.stackgres.io",
                        "sgbackupconfigs.stackgres.io",
                        "sgobjectstorages.stackgres.io",
                        "sgdbops.stackgres.io",
                        "sgdistributedlogs.stackgres.io",
                        "sgshardedclusters.stackgres.io",
                        "sgscripts.stackgres.io"
                    ],
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "apiextensions.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "customresourcedefinitions"
                    ],
                    "verbs": [
                        "list"
                    ]
                }
            ]
        },
        "system:aggregate-to-admin": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults",
                    "rbac.authorization.k8s.io/aggregate-to-admin": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {},
                                    "f:rbac.authorization.k8s.io/aggregate-to-admin": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:aggregate-to-admin",
                "namespace": null,
                "owner_references": null,
                "resource_version": "81",
                "self_link": null,
                "uid": "51ecc445-96d1-4e3c-8b24-2d4f5a8de2de"
            },
            "rules": [
                {
                    "api_groups": [
                        "authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "localsubjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "rbac.authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "rolebindings",
                        "roles"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                }
            ]
        },
        "system:aggregate-to-edit": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults",
                    "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {},
                                    "f:rbac.authorization.k8s.io/aggregate-to-edit": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:aggregate-to-edit",
                "namespace": null,
                "owner_references": null,
                "resource_version": "82",
                "self_link": null,
                "uid": "ed1bc337-2be8-421a-8e8d-c0c64f726de4"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy",
                        "secrets",
                        "services/proxy"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "impersonate"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods",
                        "pods/attach",
                        "pods/exec",
                        "pods/portforward",
                        "pods/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/eviction"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "events",
                        "persistentvolumeclaims",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "secrets",
                        "serviceaccounts",
                        "services",
                        "services/proxy"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "serviceaccounts/token"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "replicasets",
                        "replicasets/scale",
                        "statefulsets",
                        "statefulsets/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "autoscaling"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "horizontalpodautoscalers"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "cronjobs",
                        "jobs"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets",
                        "deployments",
                        "deployments/rollback",
                        "deployments/scale",
                        "ingresses",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "poddisruptionbudgets"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "networking.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "ingresses",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "coordination.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "deletecollection",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                }
            ]
        },
        "system:aggregate-to-view": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults",
                    "rbac.authorization.k8s.io/aggregate-to-view": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {},
                                    "f:rbac.authorization.k8s.io/aggregate-to-view": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:aggregate-to-view",
                "namespace": null,
                "owner_references": null,
                "resource_version": "83",
                "self_link": null,
                "uid": "ec6af75d-1b35-4302-8636-25af747eed0b"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "persistentvolumeclaims/status",
                        "pods",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "serviceaccounts",
                        "services",
                        "services/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "bindings",
                        "events",
                        "limitranges",
                        "namespaces/status",
                        "pods/log",
                        "pods/status",
                        "replicationcontrollers/status",
                        "resourcequotas",
                        "resourcequotas/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "discovery.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "controllerrevisions",
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "statefulsets",
                        "statefulsets/scale",
                        "statefulsets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "autoscaling"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "horizontalpodautoscalers",
                        "horizontalpodautoscalers/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "cronjobs",
                        "cronjobs/status",
                        "jobs",
                        "jobs/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "poddisruptionbudgets",
                        "poddisruptionbudgets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "networking.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "system:auth-delegator": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:auth-delegator",
                "namespace": null,
                "owner_references": null,
                "resource_version": "89",
                "self_link": null,
                "uid": "e034e909-88dc-4052-81f5-7c82d1891d21"
            },
            "rules": [
                {
                    "api_groups": [
                        "authentication.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "tokenreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        "system:basic-user": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:basic-user",
                "namespace": null,
                "owner_references": null,
                "resource_version": "76",
                "self_link": null,
                "uid": "bb8df082-e98b-481b-aa8d-c99dcca04644"
            },
            "rules": [
                {
                    "api_groups": [
                        "authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "selfsubjectaccessreviews",
                        "selfsubjectrulesreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "authentication.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "selfsubjectreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        "system:certificates.k8s.io:certificatesigningrequests:nodeclient": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:certificates.k8s.io:certificatesigningrequests:nodeclient",
                "namespace": null,
                "owner_references": null,
                "resource_version": "94",
                "self_link": null,
                "uid": "b5c617b3-d2c1-460d-bddf-11faadf8f079"
            },
            "rules": [
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "certificatesigningrequests/nodeclient"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:certificates.k8s.io:certificatesigningrequests:selfnodeclient",
                "namespace": null,
                "owner_references": null,
                "resource_version": "95",
                "self_link": null,
                "uid": "5589f359-07d7-4acd-a614-1780ee53e32d"
            },
            "rules": [
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "certificatesigningrequests/selfnodeclient"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        "system:certificates.k8s.io:kube-apiserver-client-approver": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:certificates.k8s.io:kube-apiserver-client-approver",
                "namespace": null,
                "owner_references": null,
                "resource_version": "99",
                "self_link": null,
                "uid": "4661a0c1-f6fe-4074-b4cc-d9d546dfe4bd"
            },
            "rules": [
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kubernetes.io/kube-apiserver-client"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "approve"
                    ]
                }
            ]
        },
        "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:certificates.k8s.io:kube-apiserver-client-kubelet-approver",
                "namespace": null,
                "owner_references": null,
                "resource_version": "100",
                "self_link": null,
                "uid": "518e62b3-11f7-4807-8532-b59314c903cd"
            },
            "rules": [
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kubernetes.io/kube-apiserver-client-kubelet"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "approve"
                    ]
                }
            ]
        },
        "system:certificates.k8s.io:kubelet-serving-approver": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:certificates.k8s.io:kubelet-serving-approver",
                "namespace": null,
                "owner_references": null,
                "resource_version": "98",
                "self_link": null,
                "uid": "b05865ec-a4b8-4a02-9563-8653d45d0725"
            },
            "rules": [
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kubernetes.io/kubelet-serving"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "approve"
                    ]
                }
            ]
        },
        "system:certificates.k8s.io:legacy-unknown-approver": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:certificates.k8s.io:legacy-unknown-approver",
                "namespace": null,
                "owner_references": null,
                "resource_version": "97",
                "self_link": null,
                "uid": "d31e6cc3-66ba-4742-b0af-a300c5f12197"
            },
            "rules": [
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kubernetes.io/legacy-unknown"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "approve"
                    ]
                }
            ]
        },
        "system:controller:attachdetach-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:attachdetach-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "104",
                "self_link": null,
                "uid": "3850217a-b374-49c7-bb94-2e7b81040cee"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims",
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "volumeattachments"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "csidrivers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "csinodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "system:controller:certificate-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:certificate-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "146",
                "self_link": null,
                "uid": "c13077f7-f12d-42f5-b6cf-94c5f7dc1008"
            },
            "rules": [
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "certificatesigningrequests"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "certificatesigningrequests/approval",
                        "certificatesigningrequests/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kubernetes.io/kube-apiserver-client-kubelet"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "approve"
                    ]
                },
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kubernetes.io/kube-apiserver-client",
                        "kubernetes.io/kube-apiserver-client-kubelet",
                        "kubernetes.io/kubelet-serving",
                        "kubernetes.io/legacy-unknown"
                    ],
                    "resources": [
                        "signers"
                    ],
                    "verbs": [
                        "sign"
                    ]
                },
                {
                    "api_groups": [
                        "authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:clusterrole-aggregation-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:clusterrole-aggregation-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "105",
                "self_link": null,
                "uid": "e58cca07-00e5-4fa9-b871-c808f5a2e58f"
            },
            "rules": [
                {
                    "api_groups": [
                        "rbac.authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "clusterroles"
                    ],
                    "verbs": [
                        "escalate",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                }
            ]
        },
        "system:controller:cronjob-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:cronjob-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "106",
                "self_link": null,
                "uid": "a6340c3b-b6ab-4f4c-b58a-ffa53f0ccea5"
            },
            "rules": [
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "cronjobs"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "jobs"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "cronjobs/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "cronjobs/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "delete",
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:daemon-set-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:daemon-set-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "107",
                "self_link": null,
                "uid": "12d4f610-1d2f-4cd5-9c7a-253b295e7566"
            },
            "rules": [
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "list",
                        "patch",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/binding"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "controllerrevisions"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:deployment-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:deployment-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "108",
                "self_link": null,
                "uid": "ed2136e5-92e1-4ac2-859e-92ec93df8368"
            },
            "rules": [
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "deployments"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "deployments/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "deployments/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicasets"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:disruption-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:disruption-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "109",
                "self_link": null,
                "uid": "644228cd-8cd1-427a-b42e-2ad242bb5051"
            },
            "rules": [
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "deployments"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicasets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicationcontrollers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "poddisruptionbudgets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "statefulsets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "poddisruptionbudgets/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "*"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "*/scale"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/status"
                    ],
                    "verbs": [
                        "patch"
                    ]
                }
            ]
        },
        "system:controller:endpoint-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:endpoint-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "110",
                "self_link": null,
                "uid": "cf51d606-0f24-4983-8194-81a553c4d7db"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints/restricted"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:endpointslice-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:endpointslice-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "111",
                "self_link": null,
                "uid": "a8c7745b-7b1a-4256-b730-7236056a1453"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes",
                        "pods",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "services/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "discovery.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:endpointslicemirroring-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:endpointslicemirroring-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "112",
                "self_link": null,
                "uid": "134a55f2-0b49-44a1-827d-f20fd719064a"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "services/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "discovery.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:ephemeral-volume-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:ephemeral-volume-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "114",
                "self_link": null,
                "uid": "252f7836-e931-43c0-893b-6ded5fb7c3fd"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:expand-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:expand-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "113",
                "self_link": null,
                "uid": "734a0ff9-2043-46b1-b5bb-96e8ccbfb3fd"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "storageclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "secrets"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:generic-garbage-collector": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:generic-garbage-collector",
                "namespace": null,
                "owner_references": null,
                "resource_version": "116",
                "self_link": null,
                "uid": "1c95a57c-e230-4626-a9f7-d82377422bbf"
            },
            "rules": [
                {
                    "api_groups": [
                        "*"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:horizontal-pod-autoscaler": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:horizontal-pod-autoscaler",
                "namespace": null,
                "owner_references": null,
                "resource_version": "118",
                "self_link": null,
                "uid": "dceacbd0-1726-4ef0-a913-2471bf4f9cc8"
            },
            "rules": [
                {
                    "api_groups": [
                        "autoscaling"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "horizontalpodautoscalers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "autoscaling"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "horizontalpodautoscalers/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "*"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "*/scale"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        "metrics.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        "custom.metrics.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        "external.metrics.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:job-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:job-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "120",
                "self_link": null,
                "uid": "78d14073-7f81-4c1a-a99e-1599bfb15b95"
            },
            "rules": [
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "jobs"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "jobs/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "jobs/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "list",
                        "patch",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:namespace-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:namespace-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "122",
                "self_link": null,
                "uid": "9bbc5c0e-fa8e-481f-86a2-744f91231a8b"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "namespaces/finalize",
                        "namespaces/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "*"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "delete",
                        "deletecollection",
                        "get",
                        "list"
                    ]
                }
            ]
        },
        "system:controller:node-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:node-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "124",
                "self_link": null,
                "uid": "17cb74ac-4e36-41f5-8a4e-ef84d5487ec9"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "delete",
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        "networking.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "clustercidrs"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        "system:controller:persistent-volume-binder": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:controller:persistent-volume-binder",
                "namespace": null,
                "owner_references": null,
                "resource_version": "126",
                "self_link": null,
                "uid": "9ded3fb0-ab03-46ed-88cc-14c8d2451f2f"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumes/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "storageclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "services"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "secrets"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:pod-garbage-collector": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:pod-garbage-collector",
                "namespace": null,
                "owner_references": null,
                "resource_version": "128",
                "self_link": null,
                "uid": "a1fcd6aa-29fb-41f9-8378-a8ec15ee244b"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "delete",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/status"
                    ],
                    "verbs": [
                        "patch"
                    ]
                }
            ]
        },
        "system:controller:pv-protection-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:pv-protection-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "150",
                "self_link": null,
                "uid": "fc3ab376-e8dd-4ac1-b468-6c599b7a6a3d"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:pvc-protection-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:pvc-protection-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "148",
                "self_link": null,
                "uid": "a38fea5f-9959-42a0-a980-dcb1b58e43c8"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:replicaset-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:replicaset-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "130",
                "self_link": null,
                "uid": "ce70ebfc-f8b3-4fb6-a894-c4acb57aacf1"
            },
            "rules": [
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicasets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicasets/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicasets/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "list",
                        "patch",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:replication-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:replication-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "132",
                "self_link": null,
                "uid": "07064465-5996-46fe-8837-f2b5f14a37df"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicationcontrollers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicationcontrollers/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicationcontrollers/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "list",
                        "patch",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:resourcequota-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:resourcequota-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "134",
                "self_link": null,
                "uid": "09aae9dd-f92c-42e6-9477-df6e3388ba4d"
            },
            "rules": [
                {
                    "api_groups": [
                        "*"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "resourcequotas/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:root-ca-cert-publisher": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:root-ca-cert-publisher",
                "namespace": null,
                "owner_references": null,
                "resource_version": "154",
                "self_link": null,
                "uid": "366b4b55-aa3c-473e-8de5-b0a8b549e179"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "create",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:route-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:route-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "136",
                "self_link": null,
                "uid": "2562f97d-6956-4d79-95e2-e1df1c740a36"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes/status"
                    ],
                    "verbs": [
                        "patch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:service-account-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:service-account-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "138",
                "self_link": null,
                "uid": "6ed42ae6-0d3f-4e8b-9da6-1a852bc39ac1"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:service-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:service-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "140",
                "self_link": null,
                "uid": "8ce1993d-196a-4d30-b597-37e5fea09100"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "services/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:statefulset-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:statefulset-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "142",
                "self_link": null,
                "uid": "ab8e1add-2e0c-44db-998e-f9bae78b3203"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "statefulsets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "statefulsets/status"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "statefulsets/finalizers"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "controllerrevisions"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "create",
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "delete",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:ttl-after-finished-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:ttl-after-finished-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "152",
                "self_link": null,
                "uid": "8fcf645a-fc61-4b6c-83cb-ec2eaa363719"
            },
            "rules": [
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "jobs"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:controller:ttl-controller": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:45+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:45+00:00"
                    }
                ],
                "name": "system:controller:ttl-controller",
                "namespace": null,
                "owner_references": null,
                "resource_version": "144",
                "self_link": null,
                "uid": "2d38cf81-629f-466c-a1a7-7c873c9cc35e"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:coredns": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:48+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:rules": {}
                        },
                        "manager": "kubeadm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:48+00:00"
                    }
                ],
                "name": "system:coredns",
                "namespace": null,
                "owner_references": null,
                "resource_version": "259",
                "self_link": null,
                "uid": "d48f3c8f-d28e-407c-8095-71c0a00f91bd"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints",
                        "services",
                        "pods",
                        "namespaces"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "discovery.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "system:discovery": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:discovery",
                "namespace": null,
                "owner_references": null,
                "resource_version": "74",
                "self_link": null,
                "uid": "ef544312-c78e-48ad-a8ed-61e32f2649f8"
            },
            "rules": [
                {
                    "api_groups": null,
                    "non_resource_ur_ls": [
                        "/api",
                        "/api/*",
                        "/apis",
                        "/apis/*",
                        "/healthz",
                        "/livez",
                        "/openapi",
                        "/openapi/*",
                        "/readyz",
                        "/version",
                        "/version/"
                    ],
                    "resource_names": null,
                    "resources": null,
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        "system:heapster": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:heapster",
                "namespace": null,
                "owner_references": null,
                "resource_version": "84",
                "self_link": null,
                "uid": "bafbaa6d-5e4e-40d3-aa98-c011abae78e4"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events",
                        "namespaces",
                        "nodes",
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "deployments"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "system:kube-aggregator": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:kube-aggregator",
                "namespace": null,
                "owner_references": null,
                "resource_version": "90",
                "self_link": null,
                "uid": "b7fb4956-f161-4ecf-b705-46c5591e6984"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "system:kube-controller-manager": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:kube-controller-manager",
                "namespace": null,
                "owner_references": null,
                "resource_version": "91",
                "self_link": null,
                "uid": "15ad547a-3f1b-4686-b436-94616f560275"
            },
            "rules": [
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "coordination.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "coordination.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kube-controller-manager"
                    ],
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kube-controller-manager"
                    ],
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "secrets",
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "secrets"
                    ],
                    "verbs": [
                        "delete"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "namespaces",
                        "secrets",
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "secrets",
                        "serviceaccounts"
                    ],
                    "verbs": [
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "authentication.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "tokenreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "*"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "*"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "serviceaccounts/token"
                    ],
                    "verbs": [
                        "create"
                    ]
                }
            ]
        },
        "system:kube-dns": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:kube-dns",
                "namespace": null,
                "owner_references": null,
                "resource_version": "92",
                "self_link": null,
                "uid": "6aac4712-fa11-4e19-806a-1ae040220726"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "system:kube-scheduler": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:kube-scheduler",
                "namespace": null,
                "owner_references": null,
                "resource_version": "103",
                "self_link": null,
                "uid": "8931a827-5b7d-45b4-8d4d-1bb167de2899"
            },
            "rules": [
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "coordination.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "coordination.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kube-scheduler"
                    ],
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": [
                        "kube-scheduler"
                    ],
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "get",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "bindings",
                        "pods/binding"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicationcontrollers",
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps",
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "replicasets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "statefulsets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "poddisruptionbudgets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims",
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "authentication.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "tokenreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "csinodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "csidrivers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "csistoragecapacities"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "system:kubelet-api-admin": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:kubelet-api-admin",
                "namespace": null,
                "owner_references": null,
                "resource_version": "87",
                "self_link": null,
                "uid": "5dfd9767-730b-4c21-8641-f179ecc7b611"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "proxy"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes/log",
                        "nodes/metrics",
                        "nodes/proxy",
                        "nodes/stats"
                    ],
                    "verbs": [
                        "*"
                    ]
                }
            ]
        },
        "system:monitoring": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:monitoring",
                "namespace": null,
                "owner_references": null,
                "resource_version": "75",
                "self_link": null,
                "uid": "001d00c5-42ff-4ebc-8ab1-1303c06c2b12"
            },
            "rules": [
                {
                    "api_groups": null,
                    "non_resource_ur_ls": [
                        "/healthz",
                        "/healthz/*",
                        "/livez",
                        "/livez/*",
                        "/metrics",
                        "/metrics/slis",
                        "/readyz",
                        "/readyz/*"
                    ],
                    "resource_names": null,
                    "resources": null,
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        "system:node": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:node",
                "namespace": null,
                "owner_references": null,
                "resource_version": "85",
                "self_link": null,
                "uid": "eeee80e7-b3c5-4fb8-9833-dff2d06295d2"
            },
            "rules": [
                {
                    "api_groups": [
                        "authentication.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "tokenreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "authorization.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "localsubjectaccessreviews",
                        "subjectaccessreviews"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "services"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "create",
                        "delete"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/status"
                    ],
                    "verbs": [
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/eviction"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "secrets"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims",
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "certificatesigningrequests"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "coordination.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "leases"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "volumeattachments"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "serviceaccounts/token"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims/status"
                    ],
                    "verbs": [
                        "get",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "csidrivers"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "csinodes"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "node.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "runtimeclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "system:node-bootstrapper": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:node-bootstrapper",
                "namespace": null,
                "owner_references": null,
                "resource_version": "88",
                "self_link": null,
                "uid": "e4397575-fabb-421c-b948-4d7ecbca1035"
            },
            "rules": [
                {
                    "api_groups": [
                        "certificates.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "certificatesigningrequests"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "system:node-problem-detector": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:node-problem-detector",
                "namespace": null,
                "owner_references": null,
                "resource_version": "86",
                "self_link": null,
                "uid": "b67abb9e-d174-482d-89fe-a084094d5116"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes/status"
                    ],
                    "verbs": [
                        "patch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:node-proxier": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:node-proxier",
                "namespace": null,
                "owner_references": null,
                "resource_version": "102",
                "self_link": null,
                "uid": "47dc65e2-f5ba-4ee2-bf20-96766a83ffa7"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints",
                        "services"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "nodes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "discovery.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "system:persistent-volume-provisioner": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:persistent-volume-provisioner",
                "namespace": null,
                "owner_references": null,
                "resource_version": "93",
                "self_link": null,
                "uid": "ec883b7f-01f9-4c2c-9703-b6b2eecde738"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "create",
                        "delete",
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "storageclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "",
                        "events.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "create",
                        "patch",
                        "update"
                    ]
                }
            ]
        },
        "system:public-info-viewer": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:public-info-viewer",
                "namespace": null,
                "owner_references": null,
                "resource_version": "77",
                "self_link": null,
                "uid": "45cc831b-0429-4c51-90b4-6d1bb6539a4f"
            },
            "rules": [
                {
                    "api_groups": null,
                    "non_resource_ur_ls": [
                        "/healthz",
                        "/livez",
                        "/readyz",
                        "/version",
                        "/version/"
                    ],
                    "resource_names": null,
                    "resources": null,
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        "system:service-account-issuer-discovery": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:service-account-issuer-discovery",
                "namespace": null,
                "owner_references": null,
                "resource_version": "101",
                "self_link": null,
                "uid": "03289bec-cbdf-487f-b425-844c9ef7e541"
            },
            "rules": [
                {
                    "api_groups": null,
                    "non_resource_ur_ls": [
                        "/.well-known/openid-configuration",
                        "/openid/v1/jwks"
                    ],
                    "resource_names": null,
                    "resources": null,
                    "verbs": [
                        "get"
                    ]
                }
            ]
        },
        "system:volume-scheduler": {
            "aggregation_rule": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "system:volume-scheduler",
                "namespace": null,
                "owner_references": null,
                "resource_version": "96",
                "self_link": null,
                "uid": "6bcdab8d-16b6-4688-899a-47909e8fa442"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumes"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "storageclasses"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                }
            ]
        },
        "view": {
            "aggregation_rule": {
                "cluster_role_selectors": [
                    {
                        "match_expressions": null,
                        "match_labels": {
                            "rbac.authorization.k8s.io/aggregate-to-view": "true"
                        }
                    }
                ]
            },
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "rbac.authorization.kubernetes.io/autoupdate": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:44+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "kubernetes.io/bootstrapping": "rbac-defaults",
                    "rbac.authorization.k8s.io/aggregate-to-edit": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:rules": {}
                        },
                        "manager": "clusterrole-aggregation-controller",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:14:00+00:00"
                    },
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:aggregationRule": {
                                ".": {},
                                "f:clusterRoleSelectors": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:rbac.authorization.kubernetes.io/autoupdate": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:kubernetes.io/bootstrapping": {},
                                    "f:rbac.authorization.k8s.io/aggregate-to-edit": {}
                                }
                            }
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:44+00:00"
                    }
                ],
                "name": "view",
                "namespace": null,
                "owner_references": null,
                "resource_version": "359",
                "self_link": null,
                "uid": "c771b27d-3eb3-4c49-95a4-2b8d1117f8df"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps",
                        "endpoints",
                        "persistentvolumeclaims",
                        "persistentvolumeclaims/status",
                        "pods",
                        "replicationcontrollers",
                        "replicationcontrollers/scale",
                        "serviceaccounts",
                        "services",
                        "services/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "bindings",
                        "events",
                        "limitranges",
                        "namespaces/status",
                        "pods/log",
                        "pods/status",
                        "replicationcontrollers/status",
                        "resourcequotas",
                        "resourcequotas/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "namespaces"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "discovery.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpointslices"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "controllerrevisions",
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "statefulsets",
                        "statefulsets/scale",
                        "statefulsets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "autoscaling"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "horizontalpodautoscalers",
                        "horizontalpodautoscalers/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "batch"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "cronjobs",
                        "cronjobs/status",
                        "jobs",
                        "jobs/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "extensions"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "daemonsets",
                        "daemonsets/status",
                        "deployments",
                        "deployments/scale",
                        "deployments/status",
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies",
                        "replicasets",
                        "replicasets/scale",
                        "replicasets/status",
                        "replicationcontrollers/scale"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "policy"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "poddisruptionbudgets",
                        "poddisruptionbudgets/status"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        "networking.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "ingresses",
                        "ingresses/status",
                        "networkpolicies"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        }
    },
    "config_map": {
        "kube-root-ca.crt": {
            "api_version": null,
            "binary_data": null,
            "data": {
                "ca.crt": "-----BEGIN CERTIFICATE-----\nMIIC/jCCAeagAwIBAgIBADANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDEwprdWJl\ncm5ldGVzMB4XDTI0MDIwNjE5MTMyMloXDTM0MDIwMzE5MTMyMlowFTETMBEGA1UE\nAxMKa3ViZXJuZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBANTT\nu23OjfNW5NMTsP1zy+uNq2vVHlj9o11xdqV84CjQBO17kOjZJfPqcEAxHYSZqDKy\no49Qvb7La7e5Y9rdo8ugunFf+Zg+U/6ZiFusWlU0MRdiuXVxxZDY/NPc3PdI/Gbq\nsEXe3yLloxfJoowBuIUV4E/YsLREqz9luw4iYtsFnBdxA7fQrkj7VSxXg8fIRvX8\ntFCDk/Yvq+Y0z4YFcEIVhAAJ7gML7Hc4jV9BZTrvJPxsjzpnef7Wuz+3fsK9nqKg\n6T5E3ZOF7vlr5H6sSdDtHnMyeUor7hBan8JtKkuvX3huWhH8TI6L1m26CzEEifnd\nIkCCKm6FPTC1118YnHUCAwEAAaNZMFcwDgYDVR0PAQH/BAQDAgKkMA8GA1UdEwEB\n/wQFMAMBAf8wHQYDVR0OBBYEFPeACLwIqBsk4r1+/C8SS4p/c4ryMBUGA1UdEQQO\nMAyCCmt1YmVybmV0ZXMwDQYJKoZIhvcNAQELBQADggEBALGqFNMpTdjRjEoXot4v\n+2LDDrd2s5cNCrZdHmBZUW2OxbI2Cl+aRhqkyDP0XDBs/NTDXfHSCamiD0hH6I2j\nStbM8oBVr6a8mLDDMqEje9ibTK3hdH1EBjUsYyVauO4P4dxtQAVdZZR2pZbfYgum\nGQ4/Py2zMkrFlIiQtZcVfw83d13r2UDFgsHMUpMtfRx1MauuXPR864yGtR1TL5f7\n4APZBbKiidEniRaojfISBnwqckBp1BmZgLsbFGVh1v08KH5dJHEUiEXUqbgRgV48\nBO92AC7WW2ClxWdBvJfxD0tAhXGVHYBrhoZ0xVkObeWOF+eweAF2/vIl6xNUkSIT\nWQ8=\n-----END CERTIFICATE-----\n"
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "kubernetes.io/description": "Contains a CA bundle that can be used to verify the kube-apiserver when using internal endpoints such as the internal service IP or kubernetes.default.svc. No other usage is guaranteed across distributions of Kubernetes clusters."
                },
                "creation_timestamp": "2024-02-06T19:14:01+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                ".": {},
                                "f:ca.crt": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubernetes.io/description": {}
                                }
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:14:01+00:00"
                    }
                ],
                "name": "kube-root-ca.crt",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "387",
                "self_link": null,
                "uid": "a160ba58-fa31-4be8-86e3-8ac22d9798a6"
            }
        },
        "stackgres": {
            "api_version": null,
            "binary_data": null,
            "data": {
                "MD5SUM": "FE2D4E880481C9786F5195115F883839",
                "PATRONI_CONFIG_FILE": "/etc/patroni/config.yml",
                "PATRONI_INITIAL_CONFIG": "",
                "PATRONI_KUBERNETES_LABELS": "{\"app\":\"StackGresCluster\",\"stackgres.io/cluster\":\"true\",\"stackgres.io/cluster-scope\":\"stackgres\"}",
                "PATRONI_KUBERNETES_PORTS": "[{\"name\":\"pgport\",\"port\":7432,\"protocol\":\"TCP\"},{\"name\":\"pgreplication\",\"port\":7433,\"protocol\":\"TCP\"}]",
                "PATRONI_KUBERNETES_SCOPE_LABEL": "stackgres.io/cluster-scope",
                "PATRONI_KUBERNETES_USE_ENDPOINTS": "true",
                "PATRONI_POSTGRESQL_BIN_DIR": "/usr/lib/postgresql/12.17/bin",
                "PATRONI_POSTGRESQL_CONNECT_ADDRESS": "${PATRONI_KUBERNETES_POD_IP}:7433",
                "PATRONI_POSTGRESQL_DATA_DIR": "/var/lib/postgresql/data",
                "PATRONI_POSTGRESQL_LISTEN": "127.0.0.1:5432",
                "PATRONI_POSTGRES_UNIX_SOCKET_DIRECTORY": "/var/run/postgresql",
                "PATRONI_RESTAPI_LISTEN": "0.0.0.0:8009",
                "PATRONI_SCOPE": "stackgres",
                "PATRONI_SCRIPTS": "0"
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:MD5SUM": {},
                                "f:PATRONI_CONFIG_FILE": {},
                                "f:PATRONI_INITIAL_CONFIG": {},
                                "f:PATRONI_KUBERNETES_LABELS": {},
                                "f:PATRONI_KUBERNETES_PORTS": {},
                                "f:PATRONI_KUBERNETES_SCOPE_LABEL": {},
                                "f:PATRONI_KUBERNETES_USE_ENDPOINTS": {},
                                "f:PATRONI_POSTGRESQL_BIN_DIR": {},
                                "f:PATRONI_POSTGRESQL_CONNECT_ADDRESS": {},
                                "f:PATRONI_POSTGRESQL_DATA_DIR": {},
                                "f:PATRONI_POSTGRESQL_LISTEN": {},
                                "f:PATRONI_POSTGRES_UNIX_SOCKET_DIRECTORY": {},
                                "f:PATRONI_RESTAPI_LISTEN": {},
                                "f:PATRONI_SCOPE": {},
                                "f:PATRONI_SCRIPTS": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1594",
                "self_link": null,
                "uid": "6ddf93b3-8acf-46fd-ba98-74fcf0ef4d83"
            }
        },
        "stackgres-backup": {
            "api_version": null,
            "binary_data": null,
            "data": {
                "MD5SUM": "D41D8CD98F00B204E9800998ECF8427E"
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:MD5SUM": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-backup",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1595",
                "self_link": null,
                "uid": "0fb3f6cb-4f8a-44e5-ae53-b0c69e24f99f"
            }
        },
        "stackgres-connection-pooling-config": {
            "api_version": null,
            "binary_data": null,
            "data": {
                "pgbouncer.ini": "[databases]\n\n* = port=5432\n\n[pgbouncer]\nadmin_users = pgbouncer_admin\napplication_name_add_host = 1\nauth_file = /etc/pgbouncer/auth/users.txt\nauth_query = SELECT usename, passwd FROM pg_shadow WHERE usename=$1\nauth_type = md5\nauth_user = authenticator\ndefault_pool_size = 80\nignore_startup_parameters = extra_float_digits\nlisten_addr = 127.0.0.1\nlisten_port = 6432\nmax_client_conn = 1000\nmax_db_connections = 0\nmax_user_connections = 0\npool_mode = transaction\nserver_check_query = ;\nstats_users = pgbouncer_stats\nunix_socket_dir = /var/run/postgresql\n"
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:pgbouncer.ini": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-connection-pooling-config",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1599",
                "self_link": null,
                "uid": "36becb46-712d-412e-9d6b-6eb4ed96264c"
            }
        },
        "stackgres-envoy-config": {
            "api_version": null,
            "binary_data": null,
            "data": {
                "envoy-cds.json": "{\"resources\":[{\"@type\":\"type.googleapis.com/envoy.config.cluster.v3.Cluster\",\"name\":\"patroni_cluster\",\"connect_timeout\":\"1s\",\"load_assignment\":{\"cluster_name\":\"patroni_cluster\",\"endpoints\":[{\"lb_endpoints\":[{\"endpoint\":{\"address\":{\"socket_address\":{\"address\":\"127.0.0.1\",\"port_value\":8009}}}}]}]}},{\"@type\":\"type.googleapis.com/envoy.config.cluster.v3.Cluster\",\"name\":\"postgres_cluster_pool\",\"type\":\"STATIC\",\"connect_timeout\":\"1s\",\"per_connection_buffer_limit_bytes\":1048576,\"circuit_breakers\":{\"thresholds\":[{\"max_connections\":65536,\"max_requests\":65536,\"track_remaining\":true}]},\"load_assignment\":{\"cluster_name\":\"postgres_cluster_pool\",\"endpoints\":[{\"lb_endpoints\":[{\"endpoint\":{\"address\":{\"socket_address\":{\"protocol\":\"TCP\",\"address\":\"127.0.0.1\",\"port_value\":6432}}}}]}]}},{\"@type\":\"type.googleapis.com/envoy.config.cluster.v3.Cluster\",\"name\":\"postgres_cluster\",\"type\":\"STATIC\",\"connect_timeout\":\"1s\",\"per_connection_buffer_limit_bytes\":1048576,\"circuit_breakers\":{\"thresholds\":[{\"max_connections\":65536,\"max_requests\":65536,\"track_remaining\":true}]},\"load_assignment\":{\"cluster_name\":\"postgres_cluster\",\"endpoints\":[{\"lb_endpoints\":[{\"endpoint\":{\"address\":{\"socket_address\":{\"protocol\":\"TCP\",\"address\":\"127.0.0.1\",\"port_value\":5432}}}}]}]}}]}",
                "envoy-lds.json": "{\"resources\":[{\"@type\":\"type.googleapis.com/envoy.config.listener.v3.Listener\",\"name\":\"patroni_listener\",\"address\":{\"socket_address\":{\"address\":\"0.0.0.0\",\"port_value\":8008}},\"filter_chains\":[{\"filters\":[{\"name\":\"envoy.filters.network.http_connection_manager\",\"typed_config\":{\"@type\":\"type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager\",\"stat_prefix\":\"ingress_patroni_rest\",\"codec_type\":\"AUTO\",\"route_config\":{\"name\":\"local_route\",\"virtual_hosts\":[{\"name\":\"patroni\",\"domains\":[\"*\"],\"routes\":[{\"match\":{\"prefix\":\"/\"},\"route\":{\"cluster\":\"patroni_cluster\"}}]}]},\"http_filters\":[{\"name\":\"envoy.filters.http.router\",\"typed_config\":{\"@type\":\"type.googleapis.com/envoy.extensions.filters.http.router.v3.Router\"}}]}}]}]},{\"@type\":\"type.googleapis.com/envoy.config.listener.v3.Listener\",\"name\":\"postgres_entry_listener\",\"per_connection_buffer_limit_bytes\":1048576,\"address\":{\"socket_address\":{\"address\":\"0.0.0.0\",\"port_value\":7432}},\"filter_chains\":[{\"filters\":[{\"name\":\"envoy.filters.network.postgres_proxy\",\"typed_config\":{\"@type\":\"type.googleapis.com/envoy.extensions.filters.network.postgres_proxy.v3alpha.PostgresProxy\",\"stat_prefix\":\"ingress_postgres\",\"enable_sql_parsing\":false,\"terminate_ssl\":false}},{\"name\":\"envoy.tcp_proxy\",\"typed_config\":{\"@type\":\"type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy\",\"stat_prefix\":\"ingress_tcp\",\"cluster\":\"postgres_cluster_pool\",\"idle_timeout\":\"0s\"}}]}]},{\"@type\":\"type.googleapis.com/envoy.config.listener.v3.Listener\",\"name\":\"postgres_repl_entry_listener\",\"per_connection_buffer_limit_bytes\":1048576,\"address\":{\"socket_address\":{\"address\":\"0.0.0.0\",\"port_value\":7433}},\"filter_chains\":[{\"filters\":[{\"name\":\"envoy.tcp_proxy\",\"typed_config\":{\"@type\":\"type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy\",\"stat_prefix\":\"ingress_raw_tcp\",\"cluster\":\"postgres_cluster\",\"idle_timeout\":\"0s\"}}]}]},{\"@type\":\"type.googleapis.com/envoy.config.listener.v3.Listener\",\"name\":\"babelfish_entry_listener\",\"per_connection_buffer_limit_bytes\":1048576,\"address\":{\"socket_address\":{\"address\":\"0.0.0.0\",\"port_value\":7434}},\"filter_chains\":[{\"filters\":[{\"name\":\"envoy.tcp_proxy\",\"typed_config\":{\"@type\":\"type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy\",\"stat_prefix\":\"ingress_tcp\",\"cluster\":\"babelfish_cluster\",\"idle_timeout\":\"0s\"}}]}]}]}",
                "envoy.json": "{\"node\":{\"cluster\":\"stackgres\",\"id\":\"stackgres\"},\"dynamic_resources\":{\"cds_config\":{\"path_config_source\":{\"path\":\"/etc/envoy/envoy-cds.json\",\"watched_directory\":{\"path\":\"/etc/envoy\"}}},\"lds_config\":{\"path_config_source\":{\"path\":\"/etc/envoy/envoy-lds.json\",\"watched_directory\":{\"path\":\"/etc/envoy\"}}}},\"admin\":{\"access_log_path\":\"/dev/null\",\"address\":{\"socket_address\":{\"address\":\"0.0.0.0\",\"port_value\":8001}}}}"
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:envoy-cds.json": {},
                                "f:envoy-lds.json": {},
                                "f:envoy.json": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-envoy-config",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1597",
                "self_link": null,
                "uid": "5c683012-ba77-4631-abed-492cca381955"
            }
        },
        "stackgres-prometheus-postgres-exporter-config": {
            "api_version": null,
            "binary_data": null,
            "data": {
                "queries.yaml": "pg_replication:\n  master: true\n  query: |\n    SELECT\n    CASE\n      WHEN pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() THEN 0\n      ELSE extract (EPOCH FROM now() - pg_last_xact_replay_timestamp())::integer\n    END AS lag,\n    CASE\n      WHEN pg_is_in_recovery() THEN 1\n      ELSE 0\n    END AS is_replica;\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\"\n    - is_replica:\n        usage: \"GAUGE\"\n        description: \"Indicates if this host is a replica\"\n\npg_postmaster:\n  master: true\n  query: \"SELECT pg_postmaster_start_time as start_time_seconds from pg_postmaster_start_time()\"\n  metrics:\n    - start_time_seconds:\n        usage: \"GAUGE\"\n        description: \"Time at which postmaster started\"\n\npg_stat_user_tables:\n  master: true\n  query: |\n    SET max_parallel_workers_per_gather = 0;\n    WITH databases AS (\n      SELECT datname FROM pg_database\n      WHERE datname NOT IN ('template0', 'template1')\n    )\n    SELECT datname, _.* FROM databases,\n      LATERAL (SELECT * FROM dblink(\n        'host=/var/run/postgresql port=5432 user=' || CURRENT_USER || ' sslmode=disable dbname=''' || regexp_replace(datname, '([.\\\\])', '\\\\\\1', 'g') || '''',\n        'SELECT schemaname, relname, seq_scan, seq_tup_read, idx_scan, idx_tup_fetch, n_tup_ins, n_tup_upd, n_tup_del, n_tup_hot_upd, n_live_tup, n_dead_tup, n_mod_since_analyze, '\n          || CASE WHEN (SELECT setting FROM pg_settings WHERE name = 'server_version_num')::bigint >= 130000 THEN 'n_ins_since_vacuum' ELSE 'NULL::bigint AS n_ins_since_vacuum' END || ', '\n          || 'COALESCE(last_vacuum, ''1970-01-01Z'') as last_vacuum, COALESCE(last_autovacuum, ''1970-01-01Z'') as last_autovacuum, COALESCE(last_analyze, ''1970-01-01Z'') as last_analyze, COALESCE(last_autoanalyze, ''1970-01-01Z'') as last_autoanalyze, vacuum_count, autovacuum_count, analyze_count, autoanalyze_count FROM pg_catalog.pg_stat_user_tables')\n        AS (schemaname name, relname name, seq_scan bigint, seq_tup_read bigint, idx_scan bigint, idx_tup_fetch bigint, n_tup_ins bigint, n_tup_upd bigint, n_tup_del bigint, n_tup_hot_upd bigint, n_live_tup bigint, n_dead_tup bigint, n_mod_since_analyze bigint, n_ins_since_vacuum bigint, last_vacuum timestamp with time zone, last_autovacuum timestamp with time zone, last_analyze timestamp with time zone, last_autoanalyze timestamp with time zone, vacuum_count bigint, autovacuum_count bigint, analyze_count bigint, autoanalyze_count bigint)) AS _;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Name of current database\"\n    - schemaname:\n        usage: \"LABEL\"\n        description: \"Name of the schema that this table is in\"\n    - relname:\n        usage: \"LABEL\"\n        description: \"Name of this table\"\n    - seq_scan:\n        usage: \"COUNTER\"\n        description: \"Number of sequential scans initiated on this table\"\n    - seq_tup_read:\n        usage: \"COUNTER\"\n        description: \"Number of live rows fetched by sequential scans\"\n    - idx_scan:\n        usage: \"COUNTER\"\n        description: \"Number of index scans initiated on this table\"\n    - idx_tup_fetch:\n        usage: \"COUNTER\"\n        description: \"Number of live rows fetched by index scans\"\n    - n_tup_ins:\n        usage: \"COUNTER\"\n        description: \"Number of rows inserted\"\n    - n_tup_upd:\n        usage: \"COUNTER\"\n        description: \"Number of rows updated\"\n    - n_tup_del:\n        usage: \"COUNTER\"\n        description: \"Number of rows deleted\"\n    - n_tup_hot_upd:\n        usage: \"COUNTER\"\n        description: \"Number of rows HOT updated (i.e., with no separate index update required)\"\n    - n_live_tup:\n        usage: \"GAUGE\"\n        description: \"Estimated number of live rows\"\n    - n_dead_tup:\n        usage: \"GAUGE\"\n        description: \"Estimated number of dead rows\"\n    - n_mod_since_analyze:\n        usage: \"GAUGE\"\n        description: \"Estimated number of rows changed since last analyze\"\n    - last_vacuum:\n        usage: \"GAUGE\"\n        description: \"Last time at which this table was manually vacuumed (not counting VACUUM FULL)\"\n    - last_autovacuum:\n        usage: \"GAUGE\"\n        description: \"Last time at which this table was vacuumed by the autovacuum daemon\"\n    - last_analyze:\n        usage: \"GAUGE\"\n        description: \"Last time at which this table was manually analyzed\"\n    - last_autoanalyze:\n        usage: \"GAUGE\"\n        description: \"Last time at which this table was analyzed by the autovacuum daemon\"\n    - vacuum_count:\n        usage: \"COUNTER\"\n        description: \"Number of times this table has been manually vacuumed (not counting VACUUM FULL)\"\n    - autovacuum_count:\n        usage: \"COUNTER\"\n        description: \"Number of times this table has been vacuumed by the autovacuum daemon\"\n    - analyze_count:\n        usage: \"COUNTER\"\n        description: \"Number of times this table has been manually analyzed\"\n    - autoanalyze_count:\n        usage: \"COUNTER\"\n        description: \"Number of times this table has been analyzed by the autovacuum daemon\"\n\npg_statio_user_tables:\n  master: true\n  query: |\n    SET max_parallel_workers_per_gather = 0;\n    WITH databases AS (\n      SELECT datname FROM pg_database\n      WHERE datname NOT IN ('template0', 'template1')\n    )\n    SELECT datname, _.* FROM databases,\n      LATERAL (SELECT * FROM dblink(\n        'host=/var/run/postgresql port=5432 user=' || CURRENT_USER || ' sslmode=disable dbname=''' || regexp_replace(datname, '([.\\\\])', '\\\\\\1', 'g') || '''',\n        'SELECT schemaname, relname, heap_blks_read, heap_blks_hit, idx_blks_read, idx_blks_hit, toast_blks_read, toast_blks_hit, tidx_blks_read, tidx_blks_hit FROM pg_catalog.pg_statio_user_tables')\n        AS (schemaname name, relname name, heap_blks_read bigint, heap_blks_hit bigint, idx_blks_read bigint, idx_blks_hit bigint, toast_blks_read bigint, toast_blks_hit bigint, tidx_blks_read bigint, tidx_blks_hit bigint)) AS _;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Name of current database\"\n    - schemaname:\n        usage: \"LABEL\"\n        description: \"Name of the schema that this table is in\"\n    - relname:\n        usage: \"LABEL\"\n        description: \"Name of this table\"\n    - heap_blks_read:\n        usage: \"COUNTER\"\n        description: \"Number of disk blocks read from this table\"\n    - heap_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Number of buffer hits in this table\"\n    - idx_blks_read:\n        usage: \"COUNTER\"\n        description: \"Number of disk blocks read from all indexes on this table\"\n    - idx_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Number of buffer hits in all indexes on this table\"\n    - toast_blks_read:\n        usage: \"COUNTER\"\n        description: \"Number of disk blocks read from this table's TOAST table (if any)\"\n    - toast_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Number of buffer hits in this table's TOAST table (if any)\"\n    - tidx_blks_read:\n        usage: \"COUNTER\"\n        description: \"Number of disk blocks read from this table's TOAST table indexes (if any)\"\n    - tidx_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Number of buffer hits in this table's TOAST table indexes (if any)\"\n\npg_stat_user_indexes:\n  master: true\n  query: |\n    SET max_parallel_workers_per_gather = 0;\n    WITH databases AS (\n      SELECT datname FROM pg_database\n      WHERE datname NOT IN ('template0', 'template1')\n    )\n    SELECT datname, _.* FROM databases,\n      LATERAL (SELECT * FROM dblink(\n        'host=/var/run/postgresql port=5432 user=' || CURRENT_USER || ' sslmode=disable dbname=''' || regexp_replace(datname, '([.\\\\])', '\\\\\\1', 'g') || '''',\n        'SELECT schemaname, relname, indexrelname, idx_scan, '\n          || CASE WHEN (SELECT setting FROM pg_settings WHERE name = 'server_version_num')::bigint >= 160000 THEN 'COALESCE(last_idx_scan, ''1970-01-01Z'')' ELSE '''1970-01-01Z''' END || ' AS last_idx_scan, '\n          || 'idx_tup_read, idx_tup_fetch FROM pg_catalog.pg_stat_user_indexes')\n        AS (schemaname name, relname name, indexrelname name, idx_scan bigint, last_idx_scan timestamp with time zone, idx_tup_read bigint, idx_tup_fetch bigint)) AS _;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - schemaname:\n        usage: \"LABEL\"\n        description: \"Name of the schema that this table is in\"\n    - relname:\n        usage: \"LABEL\"\n        description: \"Name of the table for this index\"\n    - indexrelname:\n        usage: \"LABEL\"\n        description: \"Name of this index\"\n    - idx_scan:\n        usage: \"COUNTER\"\n        description: \"Number of index scans initiated on this index\"\n    - last_idx_scan:\n        usage: \"GAUGE\"\n        description: \"The time of the last scan on this index, based on the most recent transaction stop time\"\n    - idx_tup_read:\n        usage: \"COUNTER\"\n        description: \"Number of index entries returned by scans on this index\"\n    - idx_tup_fetch:\n        usage: \"COUNTER\"\n        description: \"Number of live table rows fetched by simple index scans using this index\"\n\npg_statio_user_indexes:\n  master: true\n  query: |\n    SET max_parallel_workers_per_gather = 0;\n    WITH databases AS (\n      SELECT datname FROM pg_database\n      WHERE datname NOT IN ('template0', 'template1')\n    )\n    SELECT datname, _.* FROM databases,\n      LATERAL (SELECT * FROM dblink(\n        'host=/var/run/postgresql port=5432 user=' || CURRENT_USER || ' sslmode=disable dbname=''' || regexp_replace(datname, '([.\\\\])', '\\\\\\1', 'g') || '''',\n        'SELECT schemaname, relname, indexrelname, idx_blks_read, idx_blks_hit FROM pg_catalog.pg_statio_user_indexes')\n        AS (schemaname name, relname name, indexrelname name, idx_blks_read bigint, idx_blks_hit bigint)) AS _;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - schemaname:\n        usage: \"LABEL\"\n        description: \"Name of the schema that this table is in\"\n    - relname:\n        usage: \"LABEL\"\n        description: \"Name of the table for this index\"\n    - indexrelname:\n        usage: \"LABEL\"\n        description: \"Name of this index\"\n    - idx_blks_read:\n        usage: \"COUNTER\"\n        description: \"Number of disk blocks read from this index\"\n    - idx_blks_hit:\n        usage: \"COUNTER\"\n        description: \"Number of buffer hits in this index\"\n\npg_total_relation_size:\n  master: true\n  cache_seconds: 120\n  query: |\n    SET max_parallel_workers_per_gather = 0;\n    WITH databases AS (\n      SELECT datname FROM pg_database\n      WHERE datname NOT IN ('template0', 'template1')\n    )\n    SELECT datname, _.* FROM databases,\n      LATERAL (SELECT * FROM dblink(\n        'host=/var/run/postgresql port=5432 user=' || CURRENT_USER || ' sslmode=disable dbname=''' || regexp_replace(datname, '([.\\\\])', '\\\\\\1', 'g') || '''',\n        'SELECT relnamespace::regnamespace as schemaname, relname as relname, pg_total_relation_size(oid) bytes FROM pg_catalog.pg_class WHERE relkind = ''r''')\n        AS (schemaname name, relname name, bytes bigint)) AS _;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - schemaname:\n        usage: \"LABEL\"\n        description: \"Name of the schema that table is in\"\n    - relname:\n        usage: \"LABEL\"\n        description: \"Name of this table\"\n    - bytes:\n        usage: \"GAUGE\"\n        description: \"Total disk space usage for the specified table and associated indexes\"\n\npg_blocked:\n  master: true\n  query: |\n    SET max_parallel_workers_per_gather = 0;\n    WITH databases AS (\n      SELECT oid, datname FROM pg_database\n      WHERE datname NOT IN ('template0', 'template1')\n    )\n    SELECT\n      locktype AS type,\n      NULL AS datname,\n      NULL AS schemaname,\n      NULL AS reltype,\n      NULL AS relname,\n      count(*) AS queries\n    FROM pg_catalog.pg_locks blocked\n    WHERE NOT blocked.granted AND relation IS NULL\n    GROUP BY locktype\n    UNION\n    SELECT\n      locktype AS type,\n      datname,\n      schemaname,\n      CASE relkind\n        WHEN 'r' THEN 'ordinary table'\n        WHEN 'i' THEN 'index'\n        WHEN 'S' THEN 'sequence'\n        WHEN 't' THEN 'TOAST table'\n        WHEN 'v' THEN 'view'\n        WHEN 'm' THEN 'materialized view'\n        WHEN 'c' THEN 'composite type'\n        WHEN 'f' THEN 'foreign table'\n        WHEN 'p' THEN 'partitioned table'\n        WHEN 'I' THEN 'partitioned index'\n        ELSE 'unknown type ''' || relkind || ''''\n        END AS reltype,\n      relname,\n      count(*) AS queries\n    FROM pg_catalog.pg_locks blocked\n    INNER JOIN databases\n      ON blocked.database = databases.oid,\n      LATERAL (SELECT * FROM dblink(\n        'host=/var/run/postgresql port=5432 user=' || CURRENT_USER || ' sslmode=disable dbname=''' || regexp_replace(datname, '([.\\\\])', '\\\\\\1', 'g') || '''',\n        'SELECT nspname as schemaname, relkind, relname FROM pg_catalog.pg_class LEFT JOIN pg_catalog.pg_namespace ON (pg_namespace.oid = relnamespace) WHERE pg_class.oid = ' || blocked.relation)\n        AS (schemaname name, relkind char, relname name)) AS _\n    WHERE NOT blocked.granted AND relation IS NOT NULL\n    GROUP BY locktype, datname, schemaname, reltype, relname;\n  metrics:\n    - type:\n        usage: \"LABEL\"\n        description: \"The lock type\"\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - schemaname:\n        usage: \"LABEL\"\n        description: \"The schema on which a query is blocked\"\n    - reltype:\n        usage: \"LABEL\"\n        description: \"The type of relation\"\n    - relname:\n        usage: \"LABEL\"\n        description: \"The relation on which a query is blocked\"\n    - queries:\n        usage: \"GAUGE\"\n        description: \"The current number of blocked queries\"\n\npg_oldest_blocked:\n  master: true\n  query: |\n    SELECT datname,\n      coalesce(extract('epoch' from max(clock_timestamp() - state_change)), 0) age_seconds\n    FROM pg_catalog.pg_stat_activity\n    WHERE wait_event_type = 'Lock'\n    AND state='active'\n    GROUP BY datname;\n  metrics:\n    - age_seconds:\n        usage: \"GAUGE\"\n        description: \"Largest number of seconds any transaction is currently waiting on a lock\"\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n\npg_slow:\n  master: true\n  query: |\n    SELECT datname, COUNT(*) AS queries\n    FROM pg_catalog.pg_stat_activity\n    WHERE state = 'active' AND (now() - query_start) > '1 seconds'::interval\n    GROUP BY datname;\n  metrics:\n    - queries:\n        usage: \"GAUGE\"\n        description: \"Current number of slow queries\"\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n\npg_long_running_transactions:\n  master: true\n  query: |\n    SELECT datname, COUNT(*) as count,\n    MAX(EXTRACT(EPOCH FROM (clock_timestamp() - xact_start))) AS age_in_seconds\n    FROM pg_catalog.pg_stat_activity\n    WHERE state is distinct from 'idle' AND (now() - xact_start) > '1 minutes'::interval AND query not like '%VACUUM%'\n    GROUP BY datname;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - count:\n        usage: \"GAUGE\"\n        description: \"Current number of long running transactions\"\n    - age_in_seconds:\n        usage: \"GAUGE\"\n        description: \"The current maximum transaction age in seconds\"\n\npg_vacuum:\n  master: true\n  query: |\n    SELECT\n      datname,\n      COUNT(*) AS queries,\n      MAX(EXTRACT(EPOCH FROM (clock_timestamp() - query_start))) AS age_in_seconds\n    FROM pg_catalog.pg_stat_activity\n    WHERE state = 'active' AND trim(query) ~* '\\AVACUUM (?!ANALYZE)'\n    GROUP BY datname;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - queries:\n        usage: \"GAUGE\"\n        description: \"The current number of VACUUM queries\"\n    - age_in_seconds:\n        usage: \"GAUGE\"\n        description: \"The current maximum VACUUM query age in seconds\"\n\npg_vacuum_analyze:\n  master: true\n  query: |\n    SELECT\n      datname,\n      COUNT(*) AS queries,\n      MAX(EXTRACT(EPOCH FROM (clock_timestamp() - query_start))) AS age_in_seconds\n    FROM pg_catalog.pg_stat_activity\n    WHERE state = 'active' AND trim(query) ~* '\\AVACUUM ANALYZE'\n    GROUP BY datname;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - queries:\n        usage: \"GAUGE\"\n        description: \"The current number of VACUUM ANALYZE queries\"\n    - age_in_seconds:\n        usage: \"GAUGE\"\n        description: \"The current maximum VACUUM ANALYZE query age in seconds\"\n\npg_stuck_idle_in_transaction:\n  master: true\n  query: |\n    SELECT datname,\n      COUNT(*) AS queries\n    FROM pg_catalog.pg_stat_activity\n    WHERE state = 'idle in transaction' AND (now() - query_start) > '10 minutes'::interval\n    GROUP BY datname;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - queries:\n        usage: \"GAUGE\"\n        description: \"Current number of queries that are stuck being idle in transactions\"\n\npg_txid:\n  master: true\n  query: |\n    SELECT\n      CASE WHEN pg_is_in_recovery() THEN 'NaN'::float ELSE txid_current() % (2^52)::bigint END AS current,\n      CASE WHEN pg_is_in_recovery() THEN 'NaN'::float ELSE txid_snapshot_xmin(txid_current_snapshot()) % (2^52)::bigint END AS xmin,\n      CASE WHEN pg_is_in_recovery() THEN 'NaN'::float ELSE txid_current() - txid_snapshot_xmin(txid_current_snapshot()) END AS xmin_age;\n  metrics:\n    - current:\n        usage: \"COUNTER\"\n        description: \"Current 64-bit transaction id of the query used to collect this metric (truncated to low 52 bits)\"\n    - xmin:\n        usage: \"COUNTER\"\n        description: \"Oldest transaction id of a transaction still in progress, i.e. not known committed or aborted (truncated to low 52 bits)\"\n    - xmin_age:\n        usage: \"GAUGE\"\n        description: \"Age of oldest transaction still not committed or aborted measured in transaction ids\"\n\npg_database_datfrozenxid:\n  master: true\n  query: |\n    SELECT datname, age(datfrozenxid) AS age FROM pg_catalog.pg_database;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database Name\"\n    - age:\n        usage: \"GAUGE\"\n        description: \"Age of the oldest transaction that has not been frozen.\"\n\npg_wal_position:\n  master: true\n  query: |\n    SELECT CASE\n           WHEN pg_is_in_recovery()\n           THEN (pg_last_wal_receive_lsn() - '0/0') % (2^52)::bigint\n           ELSE (pg_current_wal_lsn() - '0/0') % (2^52)::bigint\n           END AS bytes;\n  metrics:\n    - bytes:\n        usage: \"COUNTER\"\n        description: \"Postgres LSN (log sequence number) being generated on primary or replayed on replica (truncated to low 52 bits)\"\n\n\npg_replication_slots:\n  master: true\n  query: |\n    SELECT slot_name, slot_type,\n           case when active then 1.0 else 0.0 end AS active,\n           age(xmin) AS xmin_age,\n           age(catalog_xmin) AS catalog_xmin_age,\n           CASE WHEN pg_is_in_recovery() THEN pg_last_wal_receive_lsn() ELSE pg_current_wal_lsn() END - restart_lsn AS restart_lsn_bytes,\n           CASE WHEN pg_is_in_recovery() THEN pg_last_wal_receive_lsn() ELSE pg_current_wal_lsn() END - confirmed_flush_lsn AS confirmed_flush_lsn_bytes\n      FROM pg_catalog.pg_replication_slots;\n  metrics:\n    - slot_name:\n        usage: \"LABEL\"\n        description: \"Slot Name\"\n    - slot_type:\n        usage: \"LABEL\"\n        description: \"Slot Type\"\n    - active:\n        usage: \"GAUGE\"\n        description: \"Boolean flag indicating whether this slot has a consumer streaming from it\"\n    - xmin_age:\n        usage: \"GAUGE\"\n        description: \"Age of oldest transaction that cannot be vacuumed due to this replica\"\n    - catalog_xmin_age:\n        usage: \"GAUGE\"\n        description: \"Age of oldest transaction that cannot be vacuumed from catalogs due to this replica (used by logical replication)\"\n    - restart_lsn_bytes:\n        usage: \"GAUGE\"\n        description: \"Amount of data on in xlog that must be this replica may need to complete recovery\"\n    - confirmed_flush_lsn_bytes:\n        usage: \"GAUGE\"\n        description: \"Amount of data on in xlog that must be this replica has not yet received\"\n\npg_table_bloat:\n  master: true\n  cache_seconds: 1200\n  query: |\n    SET max_parallel_workers_per_gather = 0;\n    WITH databases AS (\n      SELECT datname FROM pg_database\n      WHERE datname NOT IN ('template0', 'template1')\n    )\n    SELECT datname, _.* FROM databases,\n    LATERAL (SELECT * FROM dblink(\n        'host=/var/run/postgresql port=5432 user=' || CURRENT_USER || ' sslmode=disable dbname=''' || regexp_replace(datname, '([.\\\\])', '\\\\\\1', 'g') || '''',\n        '-- https://github.com/ioguix/pgsql-bloat-estimation' || E'\\n'\n        || ' SELECT schemaname, tablename, bs*tblpages AS real_size,' || E'\\n'\n        || ' (tblpages-est_tblpages)*bs AS extra_size,' || E'\\n'\n        || ' CASE WHEN tblpages - est_tblpages > 0' || E'\\n'\n        || '     THEN 100 * (tblpages - est_tblpages)/tblpages::float' || E'\\n'\n        || '     ELSE 0' || E'\\n'\n        || ' END AS extra_ratio, fillfactor,' || E'\\n'\n        || ' CASE WHEN tblpages - est_tblpages_ff > 0' || E'\\n'\n        || '     THEN (tblpages-est_tblpages_ff)*bs' || E'\\n'\n        || '     ELSE 0' || E'\\n'\n        || ' END AS bloat_size,' || E'\\n'\n        || ' CASE WHEN tblpages - est_tblpages_ff > 0' || E'\\n'\n        || '     THEN 100 * (tblpages - est_tblpages_ff)/tblpages::float' || E'\\n'\n        || '     ELSE 0' || E'\\n'\n        || ' END AS bloat_ratio, is_na' || E'\\n'\n        || ' FROM (' || E'\\n'\n        || ' SELECT ceil( reltuples / ( (bs-page_hdr)/tpl_size ) ) + ceil( toasttuples / 4 ) AS est_tblpages,' || E'\\n'\n        || '     ceil( reltuples / ( (bs-page_hdr)*fillfactor/(tpl_size*100) ) ) + ceil( toasttuples / 4 ) AS est_tblpages_ff,' || E'\\n'\n        || '     tblpages, fillfactor, bs, tblid, schemaname, tablename, heappages, toastpages, is_na' || E'\\n'\n        || ' FROM (' || E'\\n'\n        || '     SELECT' || E'\\n'\n        || '     ( 4 + tpl_hdr_size + tpl_data_size + (2*ma)' || E'\\n'\n        || '         - CASE WHEN tpl_hdr_size%ma = 0 THEN ma ELSE tpl_hdr_size%ma END' || E'\\n'\n        || '         - CASE WHEN ceil(tpl_data_size)::int%ma = 0 THEN ma ELSE ceil(tpl_data_size)::int%ma END' || E'\\n'\n        || '     ) AS tpl_size, bs - page_hdr AS size_per_block, (heappages + toastpages) AS tblpages, heappages,' || E'\\n'\n        || '     toastpages, reltuples, toasttuples, bs, page_hdr, tblid, schemaname, tablename, fillfactor, is_na' || E'\\n'\n        || '     FROM (' || E'\\n'\n        || '     SELECT' || E'\\n'\n        || '         tbl.oid AS tblid, ns.nspname AS schemaname, tbl.relname AS tablename, tbl.reltuples,' || E'\\n'\n        || '         tbl.relpages AS heappages, coalesce(toast.relpages, 0) AS toastpages,' || E'\\n'\n        || '         coalesce(toast.reltuples, 0) AS toasttuples,' || E'\\n'\n        || '         coalesce(substring(' || E'\\n'\n        || '         array_to_string(tbl.reloptions, '' '')' || E'\\n'\n        || '         FROM ''fillfactor=([0-9]+)'')::smallint, 100) AS fillfactor,' || E'\\n'\n        || '         current_setting(''block_size'')::numeric AS bs,' || E'\\n'\n        || '         CASE WHEN version()~''mingw32'' OR version()~''64-bit|x86_64|ppc64|ia64|amd64'' THEN 8 ELSE 4 END AS ma,' || E'\\n'\n        || '         24 AS page_hdr,' || E'\\n'\n        || '         23 + CASE WHEN MAX(coalesce(s.null_frac,0)) > 0 THEN ( 7 + count(s.attname) ) / 8 ELSE 0::int END' || E'\\n'\n        || '         + CASE WHEN bool_or(att.attname = ''oid'' and att.attnum < 0) THEN 4 ELSE 0 END AS tpl_hdr_size,' || E'\\n'\n        || '         sum( (1-coalesce(s.null_frac, 0)) * coalesce(s.avg_width, 0) ) AS tpl_data_size,' || E'\\n'\n        || '         bool_or(att.atttypid = ''pg_catalog.name''::regtype)' || E'\\n'\n        || '         OR sum(CASE WHEN att.attnum > 0 THEN 1 ELSE 0 END) <> count(s.attname) AS is_na' || E'\\n'\n        || '     FROM pg_attribute AS att' || E'\\n'\n        || '         JOIN pg_class AS tbl ON att.attrelid = tbl.oid' || E'\\n'\n        || '         JOIN pg_namespace AS ns ON ns.oid = tbl.relnamespace' || E'\\n'\n        || '         LEFT JOIN pg_stats AS s ON s.schemaname=ns.nspname' || E'\\n'\n        || '         AND s.tablename = tbl.relname AND s.inherited=false AND s.attname=att.attname' || E'\\n'\n        || '         LEFT JOIN pg_class AS toast ON tbl.reltoastrelid = toast.oid' || E'\\n'\n        || '     WHERE NOT att.attisdropped' || E'\\n'\n        || '         AND tbl.relkind in (''r'',''m'')' || E'\\n'\n        || '     GROUP BY 1,2,3,4,5,6,7,8,9,10' || E'\\n'\n        || '     ORDER BY 2,3' || E'\\n'\n        || '     ) AS s' || E'\\n'\n        || ' ) AS s2' || E'\\n'\n        || ' ) AS s3' || E'\\n'\n        || ' where schemaname not in (''information_schema'',''pg_catalog'')' || E'\\n'\n        || ' ORDER BY schemaname, tablename' || E'\\n')\n       As (schemaname character varying, tablename character varying, real_size numeric, extra_size numeric, extra_ratio numeric, fillfactor numeric, bloat_size numeric, bloat_ratio numeric, is_na boolean)) AS _;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database Name\"\n    - schemaname:\n        usage: \"LABEL\"\n        description: \"Schema Name\"\n    - tablename:\n        usage: \"LABEL\"\n        description: \"Table Name\"\n    - real_size:\n        usage: \"GAUGE\"\n        description: \"Table real size\"\n    - extra_size:\n        usage: \"GAUGE\"\n        description: \"Estimated extra size not used/needed in the table. This extra size is composed by the fillfactor, bloat and alignment padding spaces\"\n    - extra_ratio:\n        usage: \"GAUGE\"\n        description: \"Estimated ratio of the real size used by extra_size\"\n    - fillfactor:\n        usage: \"GAUGE\"\n        description: \"Table fillfactor\"\n    - bloat_size:\n        usage: \"GAUGE\"\n        description: \"Estimated size of the bloat without the extra space kept for the fillfactor.\"\n    - bloat_ratio:\n        usage: \"GAUGE\"\n        description: \"Estimated ratio of the real size used by bloat_size\"\n    - is_na:\n        usage: \"GAUGE\"\n        description: \"Estimation not aplicable, If true, do not trust the stats\"\n\npg_index:\n  master: true\n  query: |\n    SET max_parallel_workers_per_gather = 0;\n    WITH databases AS (\n      SELECT datname FROM pg_database\n      WHERE datname NOT IN ('template0', 'template1')\n    )\n    SELECT datname, _.* FROM databases,\n    LATERAL (SELECT * FROM dblink(\n        'host=/var/run/postgresql port=5432 user=' || CURRENT_USER || ' sslmode=disable dbname=''' || regexp_replace(datname, '([.\\\\])', '\\\\\\1', 'g') || '''',\n        '-- https://github.com/ioguix/pgsql-bloat-estimation' || E'\\n'\n      || ' SELECT nspname AS schema_name, tblname, idxname, bs*(relpages)::bigint AS real_size,' || E'\\n'\n      || '  bs*(relpages-est_pages)::bigint AS extra_size,' || E'\\n'\n      || '  100 * (relpages-est_pages)::float / relpages AS extra_ratio,' || E'\\n'\n      || '  fillfactor,' || E'\\n'\n      || '  CASE WHEN relpages > est_pages_ff' || E'\\n'\n      || '  THEN bs*(relpages-est_pages_ff)' || E'\\n'\n      || '  ELSE 0' || E'\\n'\n      || '  END AS bloat_size,' || E'\\n'\n      || '  100 * (relpages-est_pages_ff)::float / relpages AS bloat_ratio,' || E'\\n'\n      || '  is_na' || E'\\n'\n      || '  FROM (' || E'\\n'\n      || '  SELECT coalesce(1 +' || E'\\n'\n      || '          ceil(reltuples/floor((bs-pageopqdata-pagehdr)/(4+nulldatahdrwidth)::float)), 0' || E'\\n'\n      || '      ) AS est_pages,' || E'\\n'\n      || '      coalesce(1 +' || E'\\n'\n      || '          ceil(reltuples/floor((bs-pageopqdata-pagehdr)*fillfactor/(100*(4+nulldatahdrwidth)::float))), 0' || E'\\n'\n      || '      ) AS est_pages_ff,' || E'\\n'\n      || '      bs, nspname, tblname, idxname, relpages, fillfactor, is_na' || E'\\n'\n      || '  FROM (' || E'\\n'\n      || '      SELECT maxalign, bs, nspname, tblname, idxname, reltuples, relpages, idxoid, fillfactor,' || E'\\n'\n      || '          ( index_tuple_hdr_bm +' || E'\\n'\n      || '              maxalign - CASE -- Add padding to the index tuple header to align on MAXALIGN' || E'\\n'\n      || '                  WHEN index_tuple_hdr_bm%maxalign = 0 THEN maxalign' || E'\\n'\n      || '                  ELSE index_tuple_hdr_bm%maxalign' || E'\\n'\n      || '              END' || E'\\n'\n      || '              + nulldatawidth + maxalign - CASE -- Add padding to the data to align on MAXALIGN' || E'\\n'\n      || '                  WHEN nulldatawidth = 0 THEN 0' || E'\\n'\n      || '                  WHEN nulldatawidth::integer%maxalign = 0 THEN maxalign' || E'\\n'\n      || '                  ELSE nulldatawidth::integer%maxalign' || E'\\n'\n      || '              END' || E'\\n'\n      || '          )::numeric AS nulldatahdrwidth, pagehdr, pageopqdata, is_na' || E'\\n'\n      || '      FROM (' || E'\\n'\n      || '          SELECT n.nspname, i.tblname, i.idxname, i.reltuples, i.relpages,' || E'\\n'\n      || '              i.idxoid, i.fillfactor, current_setting(''block_size'')::numeric AS bs,' || E'\\n'\n      || '              CASE' || E'\\n'\n      || '              WHEN version() ~ ''mingw32'' OR version() ~ ''64-bit|x86_64|ppc64|ia64|amd64'' THEN 8' || E'\\n'\n      || '              ELSE 4' || E'\\n'\n      || '              END AS maxalign,' || E'\\n'\n      || '              24 AS pagehdr,' || E'\\n'\n      || '              16 AS pageopqdata,' || E'\\n'\n      || '              CASE WHEN max(coalesce(s.null_frac,0)) = 0' || E'\\n'\n      || '                  THEN 2 -- IndexTupleData size' || E'\\n'\n      || '                  ELSE 2 + (( 32 + 8 - 1 ) / 8)' || E'\\n'\n      || '              END AS index_tuple_hdr_bm,' || E'\\n'\n      || '              sum( (1-coalesce(s.null_frac, 0)) * coalesce(s.avg_width, 1024)) AS nulldatawidth,' || E'\\n'\n      || '              max( CASE WHEN i.atttypid = ''pg_catalog.name''::regtype THEN 1 ELSE 0 END ) > 0 AS is_na' || E'\\n'\n      || '          FROM (' || E'\\n'\n      || '              SELECT ct.relname AS tblname, ct.relnamespace, ic.idxname, ic.attpos, ic.indkey, ic.indkey[ic.attpos], ic.reltuples, ic.relpages, ic.tbloid, ic.idxoid, ic.fillfactor,' || E'\\n'\n      || '                  coalesce(a1.attnum, a2.attnum) AS attnum, coalesce(a1.attname, a2.attname) AS attname, coalesce(a1.atttypid, a2.atttypid) AS atttypid,' || E'\\n'\n      || '                  CASE WHEN a1.attnum IS NULL' || E'\\n'\n      || '                  THEN ic.idxname' || E'\\n'\n      || '                  ELSE ct.relname' || E'\\n'\n      || '                  END AS attrelname' || E'\\n'\n      || '              FROM (' || E'\\n'\n      || '                  SELECT idxname, reltuples, relpages, tbloid, idxoid, fillfactor, indkey,' || E'\\n'\n      || '                      pg_catalog.generate_series(1,indnatts) AS attpos' || E'\\n'\n      || '                  FROM (' || E'\\n'\n      || '                      SELECT ci.relname AS idxname, ci.reltuples, ci.relpages, i.indrelid AS tbloid,' || E'\\n'\n      || '                          i.indexrelid AS idxoid,' || E'\\n'\n      || '                          coalesce(substring(' || E'\\n'\n      || '                              array_to_string(ci.reloptions, '' '')' || E'\\n'\n      || '                              from ''fillfactor=([0-9]+)'')::smallint, 90) AS fillfactor,' || E'\\n'\n      || '                          i.indnatts,' || E'\\n'\n      || '                          pg_catalog.string_to_array(pg_catalog.textin(' || E'\\n'\n      || '                              pg_catalog.int2vectorout(i.indkey)),'' '')::int[] AS indkey' || E'\\n'\n      || '                      FROM pg_catalog.pg_index i' || E'\\n'\n      || '                      JOIN pg_catalog.pg_class ci ON ci.oid = i.indexrelid' || E'\\n'\n      || '                      WHERE ci.relam=(SELECT oid FROM pg_am WHERE amname = ''btree'')' || E'\\n'\n      || '                      AND ci.relpages > 0' || E'\\n'\n      || '                  ) AS idx_data' || E'\\n'\n      || '              ) AS ic' || E'\\n'\n      || '              JOIN pg_catalog.pg_class ct ON ct.oid = ic.tbloid' || E'\\n'\n      || '              LEFT JOIN pg_catalog.pg_attribute a1 ON' || E'\\n'\n      || '                  ic.indkey[ic.attpos] <> 0' || E'\\n'\n      || '                  AND a1.attrelid = ic.tbloid' || E'\\n'\n      || '                  AND a1.attnum = ic.indkey[ic.attpos]' || E'\\n'\n      || '              LEFT JOIN pg_catalog.pg_attribute a2 ON' || E'\\n'\n      || '                  ic.indkey[ic.attpos] = 0' || E'\\n'\n      || '                  AND a2.attrelid = ic.idxoid' || E'\\n'\n      || '                  AND a2.attnum = ic.attpos' || E'\\n'\n      || '          ) i' || E'\\n'\n      || '          JOIN pg_catalog.pg_namespace n ON n.oid = i.relnamespace' || E'\\n'\n      || '          JOIN pg_catalog.pg_stats s ON s.schemaname = n.nspname' || E'\\n'\n      || '                                      AND s.tablename = i.attrelname' || E'\\n'\n      || '                                      AND s.attname = i.attname' || E'\\n'\n      || '          GROUP BY 1,2,3,4,5,6,7,8,9,10,11' || E'\\n'\n      || '      ) AS rows_data_stats' || E'\\n'\n      || '  ) AS rows_hdr_pdg_stats' || E'\\n'\n      || '  ) AS relation_stats' || E'\\n'\n      || '  WHERE nspname != ''pg_catalog'' ' || E'\\n'\n      || '  ORDER BY nspname, tblname, idxname;' || E'\\n')\n      As (schema_name character varying, tblname character varying, idxname character varying, real_size numeric, extra_size numeric, extra_ratio numeric, fillfactor numeric, bloat_size numeric, bloat_ratio numeric, is_na boolean)) AS _;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database Name\"\n    - schema_name:\n        usage: \"LABEL\"\n        description: \"Schema Name\"\n    - tblname:\n        usage: \"LABEL\"\n        description: \"Table Name\"\n    - idxname:\n        usage: \"LABEL\"\n        description: \"Index Name\"\n    - real_size:\n        usage: \"GAUGE\"\n        description: \"Index size\"\n    - extra_size:\n        usage: \"GAUGE\"\n        description: \"Index extra size\"\n    - extra_ratio:\n        usage: \"GAUGE\"\n        description: \"Index extra size ratio\"\n    - fillfactor:\n        usage: \"GAUGE\"\n        description: \"Fillfactor\"\n    - bloat_size:\n        usage: \"GAUGE\"\n        description: \"Estimate index bloat size\"\n    - bloat_ratio:\n        usage: \"GAUGE\"\n        description: \"Estimate index bloat size ratio\"\n    - is_na:\n        usage: \"GAUGE\"\n        description: \"Estimate Not aplicable, bad statistic\"\n\npg_replication_status:\n  master: true\n  query: |\n    SELECT\n      application_name,\n      client_addr,\n      state,\n      pg_wal_lsn_diff(pg_stat_replication.sent_lsn, pg_stat_replication.replay_lsn) AS lag_size\n    FROM pg_stat_replication;\n  metrics:\n    - application_name:\n        usage: \"LABEL\"\n        description: \"Application or node name\"\n    - client_addr:\n        usage: \"LABEL\"\n        description: \"Client ip address\"\n    - state:\n        usage: \"LABEL\"\n        description: \"Client replication state\"\n    - lag_size_bytes:\n        usage: \"GAUGE\"\n        description: \"Replication lag size in bytes\"\n\npg_vaccuum_wraparound:\n  master: true\n  query: |\n    SET max_parallel_workers_per_gather = 0;\n    WITH databases AS (\n    SELECT datname FROM pg_database\n    WHERE datname NOT IN ('template0', 'template1')\n    )\n    SELECT datname, _.* FROM databases,\n    LATERAL (SELECT * FROM dblink(\n        'host=/var/run/postgresql port=5432 user=' || CURRENT_USER || ' sslmode=disable dbname=''' || regexp_replace(datname, '([.\\\\])', '\\\\\\1', 'g') || '''',\n        '\n        WITH tabfreeze AS (\n            SELECT pg_class.oid::regclass AS full_table_name,\n            greatest(age(pg_class.relfrozenxid), age(toast.relfrozenxid)) as freeze_age,\n            pg_total_relation_size(pg_class.oid),\n            case\n                    when array_to_string(pg_class.reloptions, '''') like ''%autovacuum_freeze_max_age%'' then regexp_replace(array_to_string(pg_class.reloptions, ''''), ''.*autovacuum_freeze_max_age=([0-9.]+).*'', E''\\\\1'')::int8\n                    else current_setting(''autovacuum_freeze_max_age'')::int8\n                end as autovacuum_freeze_max_age\n        FROM pg_class JOIN pg_namespace ON pg_class.relnamespace = pg_namespace.oid\n            LEFT OUTER JOIN pg_class as toast\n                ON pg_class.reltoastrelid = toast.oid\n        WHERE nspname not in (''pg_catalog'', ''information_schema'')\n            AND nspname NOT LIKE ''pg_temp%''\n            AND pg_class.relkind = ''r''\n        )\n        SELECT full_table_name,  pg_total_relation_size,freeze_age,autovacuum_freeze_max_age, (freeze_age*1)::bigint/(autovacuum_freeze_max_age/100) as \"percent\"\n        FROM tabfreeze\n        WHERE pg_total_relation_size >=  10000000000 -- size of table 10 GB\n        AND (freeze_age*1)::bigint/(autovacuum_freeze_max_age/100)>=90 --percent of txid\n        ORDER BY 5 DESC;\n\n        ')\n        AS (full_table_name name, table_size bigint, freeze_age bigint, autovacuum_freeze_max_age bigint, percent integer)) AS _;\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - full_table_name:\n        usage: \"LABEL\"\n        description: \"Full table name\"\n    - table_size:\n        usage: \"GAUGE\"\n        description: \"Table size\"\n    - freeze_age:\n        usage: \"GAUGE\"\n        description: \"Freeze age\"\n    - autovacuum_freeze_max_age:\n        usage: \"GAUGE\"\n        description: \"Autovacuum freeze max age\"\n    - percent:\n        usage: \"GAUGE\"\n        description: \"Percentage\"\n\n# CURRENT ACTIVITY\n\npg_stat_current_waiting_query:\n  query: |\n    SELECT\n        datname, wait_event, count(*) AS count\n    FROM pg_stat_activity\n    WHERE state = 'active' AND wait_event IS NOT NULL\n    GROUP BY datname, wait_event;\n  master: true\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Name of the database\"\n    - wait_event:\n        usage: \"LABEL\"\n        description: \"Name of the wait event\"\n    - count:\n        usage: \"GAUGE\"\n        description: \"# of queries waiting for other process to finish\"\n\npg_stat_progress_vacuum:\n  query: |\n    SELECT\n        datname, heap_blks_total, heap_blks_scanned,\n        heap_blks_vacuumed , index_vacuum_count , max_dead_tuples , num_dead_tuples\n    FROM pg_stat_progress_vacuum;\n  master: true\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Name of the database to which this backend is connected\"\n    - heap_blks_total:\n        usage: \"GAUGE\"\n        description: \"Total number of heap blocks in the table\"\n    - heap_blks_scanned:\n        usage: \"GAUGE\"\n        description: \"Number of heap blocks scanned\"\n    - heap_blks_vacuumed:\n        usage: \"GAUGE\"\n        description: \"Number of heap blocks vacuumed\"\n    - index_vacuum_count:\n        usage: \"GAUGE\"\n        description: \"Number of completed index vacuum cycles\"\n    - max_dead_tuples:\n        usage: \"GAUGE\"\n        description: \"Number of dead tuples that we can store before needing to perform an index vacuum cycle\"\n    - num_dead_tuples:\n        usage: \"GAUGE\"\n        description: \"Number of dead tuples collected since the last index vacuum cycle\"\n\npg_stat_progress_cluster:\n  query: |\n    SELECT\n       datname,\n       heap_tuples_scanned, heap_tuples_written, heap_blks_total,\n       heap_blks_scanned, index_rebuild_count\n    FROM pg_stat_progress_cluster;\n  master: true\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Name of the database to which this backend is connected\"\n    - heap_tuples_scanned:\n        usage: \"GAUGE\"\n        description: \"Number of heap tuples scanned. This counter only advances when the phase is seq scanning heap, index scanning heap or writing new heap\"\n    - heap_tuples_written:\n        usage: \"GAUGE\"\n        description: \"Number of heap tuples written. This counter only advances when the phase is seq scanning heap, index scanning heap or writing new heap\"\n    - heap_blks_total:\n        usage: \"GAUGE\"\n        description: \"Total number of heap blocks in the table. This number is reported as of the beginning of seq scanning heap\"\n    - heap_blks_scanned:\n        usage: \"GAUGE\"\n        description: \"Number of heap blocks scanned. This counter only advances when the phase is seq scanning heap\"\n    - index_rebuild_count:\n        usage: \"GAUGE\"\n        description: \"Number of indexes rebuilt. This counter only advances when the phase is rebuilding index\"\n\n# PGBOUNCER QUERIES\n\npgbouncer_show_clients:\n  master: true\n  query: |\n    SELECT _.type,\n    _.\"user\",\n    _.database,\n    _.state,\n    _.addr,\n    _.port,\n    _.local_addr,\n    _.local_port,\n    _.connect_time,\n    _.request_time,\n    _.wait,\n    _.wait_us,\n    _.close_needed,\n    _.ptr,\n    _.link,\n    _.remote_pid,\n    _.tls,\n    _.application_name,\n    _.prepared_statements\n    FROM dblink('host=/var/run/postgresql port=6432 dbname=pgbouncer user=pgbouncer', 'show clients'::text)\n    AS _(type text, \"user\" text, database text, state text, addr text, port integer, local_addr text, local_port integer,\n    connect_time timestamp with time zone, request_time timestamp with time zone, wait integer, wait_us integer, close_needed integer,\n    ptr text, link text, remote_pid integer, tls text, application_name text, prepared_statements integer);\n  metrics:\n    - type:\n        usage: \"LABEL\"\n        description: \"C, for client.\"\n    - user:\n        usage: \"LABEL\"\n        description: \"Client connected user\"\n    - database:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - state:\n        usage: \"LABEL\"\n        description: \"State of the client connection, one of active or waiting\"\n    - addr:\n        usage: \"LABEL\"\n        description: \"IP address of client\"\n    - port:\n        usage: \"GAUGE\"\n        description: \"Port client is connected to\"\n    - local_addr:\n        usage: \"LABEL\"\n        description: \"Connection end address on local machine\"\n    - local_port:\n        usage: \"GAUGE\"\n        description: \"Connection end port on local machine\"\n    - connect_time:\n        usage: \"LABEL\"\n        description: \"Timestamp of connect time\"\n    - request_time:\n        usage: \"LABEL\"\n        description: \"Timestamp of latest client request\"\n    - wait:\n        usage: \"GAUGE\"\n        description: \"Current waiting time in seconds\"\n    - wait_us:\n        usage: \"GAUGE\"\n        description: \"Microsecond part of the current waiting time\"\n    - close_needed:\n        usage: \"GAUGE\"\n        description: \"not used for clients\"\n    - ptr:\n        usage: \"LABEL\"\n        description: \"Address of internal object for this connection. Used as unique ID\"\n    - link:\n        usage: \"LABEL\"\n        description: \"Address of server connection the client is paired with\"\n    - remote_pid:\n        usage: \"GAUGE\"\n        description: \"Process ID, in case client connects over Unix socket and OS supports getting it\"\n    - tls:\n        usage: \"LABEL\"\n        description: \"A string with TLS connection information, or empty if not using TLS\"\n    - application_name:\n        usage: \"LABEL\"\n        description: \"A string containing the application_name set by the client for this connection, or empty if this was not set\"\n    - prepared_statements:\n        usage: \"GAUGE\"\n        description: \"The amount of prepared statements that the client has prepared\"\n\npgbouncer_show_pools:\n  master: true\n  query: |\n    SELECT _.database,\n    _.\"user\",\n    _.cl_active,\n    _.cl_waiting,\n    _.cl_active_cancel_req,\n    _.cl_waiting_cancel_req,\n    _.sv_active,\n    _.sv_active_cancel,\n    _.sv_being_canceled,\n    _.sv_idle,\n    _.sv_used,\n    _.sv_tested,\n    _.sv_login,\n    _.maxwait,\n    _.maxwait_us,\n    _.pool_mode\n    FROM dblink('host=/var/run/postgresql port=6432 dbname=pgbouncer user=pgbouncer', 'show pools'::text)\n    _(database text, \"user\" text, cl_active integer, cl_waiting integer, cl_active_cancel_req integer, cl_waiting_cancel_req integer,\n    sv_active integer, sv_active_cancel integer, sv_being_canceled integer, sv_idle integer, sv_used integer,\n    sv_tested integer, sv_login integer, maxwait integer, maxwait_us integer, pool_mode text);\n  metrics:\n    - database:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - user:\n        usage: \"LABEL\"\n        description: \"User name\"\n    - cl_active:\n        usage: \"GAUGE\"\n        description: \"Client connections that are linked to server connection and can process queries\"\n    - cl_waiting:\n        usage: \"GAUGE\"\n        description: \"Client connections that have sent queries but have not yet got a server connection\"\n    - cl_active_cancel_req:\n        usage: \"GAUGE\"\n        description: \"Client connections that have forwarded query cancellations to the server and are waiting for the server response\"\n    - cl_waiting_cancel_req:\n        usage: \"GAUGE\"\n        description: \"    Client connections that have forwarded query cancellations to the server and are waiting for the server response\"\n    - cl_waiting_cancel_req:\n        usage: \"GAUGE\"\n        description: \"Client connections that have not forwarded query cancellations to the server yet\"\n    - sv_active:\n        usage: \"GAUGE\"\n        description: \"Server connections that are linked to a client\"\n    - sv_active_cancel:\n        usage: \"GAUGE\"\n        description: \"Server connections that are currently forwarding a cancel request\"\n    - sv_being_canceled:\n        usage: \"GAUGE\"\n        description: \"Servers that normally could become idle but are waiting to do so until all in-flight cancel requests have completed that were sent to cancel a query on this server\"\n    - sv_idle:\n        usage: \"GAUGE\"\n        description: \"Server connections that are unused and immediately usable for client queries\"\n    - sv_used:\n        usage: \"GAUGE\"\n        description: \"Server connections that have been idle for more than server_check_delay so they need server_check_query to run on them\"\n    - sv_tested:\n        usage: \"GAUGE\"\n        description: \"Server connections that are currently running either server_reset_query or server_check_query\"\n    - sv_login:\n        usage: \"GAUGE\"\n        description: \"Server connections currently in the process of logging in\"\n    - maxwait:\n        usage: \"GAUGE\"\n        description: \"How long the first oldest client in the queue has waited, in seconds\"\n    - maxwait_us:\n        usage: \"GAUGE\"\n        description: \"Microsecond part of the maximum waiting time\"\n    - pool_mode:\n        usage: \"LABEL\"\n        description: \"The pooling mode in use\"\n\npgbouncer_show_databases:\n  master: true\n  query: |\n    select _.name,\n    _.host,\n    _.port,\n    _.database,\n    _.force_user,\n    _.pool_size,\n    _.min_pool_size,\n    _.reserve_pool,\n    _.pool_mode,\n    _.max_connections,\n    _.current_connections,\n    _.paused,\n    _.disabled\n    FROM dblink('host=/var/run/postgresql port=6432 dbname=pgbouncer user=pgbouncer', 'show databases'::text)\n    AS _(name text, host text, port integer, database text, force_user text, pool_size integer, min_pool_size integer,\n      reserve_pool integer, pool_mode text, max_connections integer, current_connections integer, paused boolean, disabled boolean);\n  metrics:\n    - name:\n        usage: \"LABEL\"\n        description: \"Name of configured database entry\"\n    - host:\n        usage: \"LABEL\"\n        description: \"Host pgbouncer connects to\"\n    - port:\n        usage: \"GAUGE\"\n        description: \"Port pgbouncer connects to\"\n    - database:\n        usage: \"LABEL\"\n        description: \"Actual database name pgbouncer connects to.\"\n    - force_user:\n        usage: \"LABEL\"\n        description: \"When the user is part of the connection string the connection between pgbouncer and PostgreSQL is forced to the given user\"\n    - pool_size:\n        usage: \"GAUGE\"\n        description: \"Maximum number of server connections\"\n    - min_pool_size:\n        usage: \"GAUGE\"\n        description: \"Minimum number of server connections\"\n    - reserve_pool:\n        usage: \"GAUGE\"\n        description: \"Maximum number of additional connections for this database\"\n    - pool_mode:\n        usage: \"LABEL\"\n        description: \"The database override pool_mode\"\n    - max_connections:\n        usage: \"GAUGE\"\n        description: \"Maximum number of allowed connections for this database\"\n    - current_connections:\n        usage: \"GAUGE\"\n        description: \"Current number of connections for this database\"\n    - paused:\n        usage: \"GAUGE\"\n        description: \"1 if this database is currently paused, else 0\"\n    - disabled:\n        usage: \"GAUGE\"\n        description: \"1 if this database is currently paused, else 0\"\n\npgbouncer_show_stats:\n  master: true\n  query: |\n    select _.database,\n    _.total_xact_count,\n    _.total_query_count,\n    _.total_received,\n    _.total_sent,\n    _.total_xact_time,\n    _.total_query_time,\n    _.total_wait_time,\n    _.avg_xact_count,\n    _.avg_query_count,\n    _.avg_recv,\n    _.avg_sent,\n    _.avg_xact_time,\n    _.avg_query_time,\n    _.avg_wait_time\n    FROM dblink('host=/var/run/postgresql port=6432 dbname=pgbouncer user=pgbouncer', 'show stats'::text)\n    AS _(database text, total_xact_count bigint, total_query_count bigint, total_received bigint, total_sent bigint,total_xact_time bigint, total_query_time bigint,\n      total_wait_time bigint, avg_xact_count bigint, avg_query_count bigint, avg_recv bigint, avg_sent bigint, avg_xact_time bigint, avg_query_time bigint,\n      avg_wait_time bigint);\n  metrics:\n    - database:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - total_xact_count:\n        usage: \"GAUGE\"\n        description: \"Total number of SQL transactions pooled\"\n    - total_query_count:\n        usage: \"GAUGE\"\n        description: \"Total number of SQL queries pooled\"\n    - total_received:\n        usage: \"GAUGE\"\n        description: \"Total volume in bytes of network traffic received\"\n    - total_sent:\n        usage: \"GAUGE\"\n        description: \"Total volume in bytes of network traffic sent\"\n    - total_xact_time:\n        usage: \"GAUGE\"\n        description: \"Total number of microseconds spent by pgbouncer when connected to PostgreSQL in a transaction\"\n    - total_query_time:\n        usage: \"GAUGE\"\n        description: \"Total number of microseconds spent by pgbouncer when actively connected to PostgreSQL\"\n    - total_wait_time:\n        usage: \"GAUGE\"\n        description: \"Time spent by clients waiting for a server, in microseconds\"\n    - avg_xact_count:\n        usage: \"GAUGE\"\n        description: \"Average transactions per second in last stat period\"\n    - avg_query_count:\n        usage: \"GAUGE\"\n        description: \"Average queries per second in last stat period\"\n    - avg_recv:\n        usage: \"GAUGE\"\n        description: \"Average received from clients bytes per second\"\n    - avg_sent:\n        usage: \"GAUGE\"\n        description: \"Average sent to clients bytes per second\"\n    - avg_xact_time:\n        usage: \"GAUGE\"\n        description: \"Average transaction duration, in microseconds\"\n    - avg_query_time:\n        usage: \"GAUGE\"\n        description: \"Average query duration, in microseconds\"\n    - avg_wait_time:\n        usage: \"GAUGE\"\n        description: \"Time spent by clients waiting for a server, in microseconds average per second\"\n\nnode_filesystem:\n  master: true\n  query: |\n    WITH mounts AS (\n      SELECT columns[1] AS device,\n        columns[2] AS mountpoint\n        FROM (SELECT regexp_split_to_array(line, E'\\\\s+') AS columns\n            FROM mounts() AS line) AS mounts\n      WHERE columns[2] LIKE '/var/%')\n    SELECT CASE WHEN columns[1] <> '-' THEN columns[1] ELSE NULL END AS device,\n        CASE WHEN columns[2] <> '-' THEN columns[2] ELSE NULL END AS mountpoint,\n        CASE WHEN columns[3] <> '-' THEN columns[3] ELSE NULL END AS fstype,\n        CASE WHEN columns[4] <> '-' THEN columns[4] ELSE NULL END AS size_bytes,\n        CASE WHEN columns[5] <> '-' THEN columns[5] ELSE NULL END AS avail_bytes,\n        CASE WHEN columns[6] <> '-' THEN columns[6] ELSE NULL END AS files,\n        CASE WHEN columns[7] <> '-' THEN columns[7] ELSE NULL END AS files_free,\n        CASE WHEN columns[8] <> '-' AND columns[8] <> 'timeout' THEN TRUE ELSE FALSE END AS device_error\n      FROM (SELECT regexp_split_to_array(line, E'\\\\s+') AS columns\n          FROM (SELECT df(mountpoint) AS line FROM mounts) AS df) AS df;\n  metrics:\n    - device:\n        usage: \"LABEL\"\n        description: \"Device of the filesystem.\"\n    - mountpoint:\n        usage: \"LABEL\"\n        description: \"Mount point of the filesystem.\"\n    - fstype:\n        usage: \"LABEL\"\n        description: \"The type of filesystem.\"\n    - size_bytes:\n        usage: \"GAUGE\"\n        description: \"Filesystem size in bytes.\"\n    - avail_bytes:\n        usage: \"GAUGE\"\n        description: \"Filesystem space available to non-root users in bytes.\"\n    - files:\n        usage: \"GAUGE\"\n        description: \"Filesystem total file nodes.\"\n    - files_free:\n        usage: \"GAUGE\"\n        description: \"Filesystem total free file nodes.\"\n    - device_error:\n        usage: \"GAUGE\"\n        description: \"Whether an error occurred while getting statistics for the given device.\"\n\n# PG_STAT_STATEMENT\npg_statements:\n  query: |\n    SELECT * FROM dblink(\n        'host=/var/run/postgresql port=5432 user=' || CURRENT_USER || ' sslmode=disable dbname=postgres',\n        '\n        SELECT\n            pg_database.datname,\n            pg_roles.rolname as usename,\n            pg_stat_statements.queryid,\n            pg_stat_statements.calls as calls_total,\n        '\n        || CASE WHEN (SELECT setting FROM pg_settings WHERE name = 'server_version_num')::bigint >= 130000 THEN 'pg_stat_statements.total_exec_time' ELSE 'pg_stat_statements.total_time' END || ' / 1000 AS total_exec_time, '\n        || CASE WHEN (SELECT setting FROM pg_settings WHERE name = 'server_version_num')::bigint >= 130000 THEN 'pg_stat_statements.mean_exec_time' ELSE 'pg_stat_statements.mean_time' END || ' / 1000 AS mean_exec_time, '\n        || '\n            pg_stat_statements.rows as rows_total\n        FROM pg_stat_statements\n        JOIN pg_roles ON (pg_stat_statements.userid = pg_roles.oid)\n        JOIN pg_database ON (pg_stat_statements.dbid = pg_database.oid)\n        ')\n        AS (datname text, usename text, queryid bigint, calls_total bigint, total_exec_time double precision, mean_exec_time double precision, rows_total bigint)\n        WHERE calls_total > 1\n        ORDER BY total_exec_time -mean_exec_time * calls_total desc\n        LIMIT 20;\n  master: true\n  metrics:\n    - datname:\n        usage: \"LABEL\"\n        description: \"Database name\"\n    - usename:\n        usage: \"LABEL\"\n        description: \"User name\"\n    - queryid:\n        usage: \"LABEL\"\n        description: \"Query ID\"\n    - calls_total:\n        usage: \"GAUGE\"\n        description: \"Total calls of the query\"\n    - total_exec_time:\n        usage: \"GAUGE\"\n        description: \"Total execute time in milliseconds\"\n    - mean_exec_time:\n        usage: \"GAUGE\"\n        description: \"Total mean time in milliseconds\"\n    - rows_total:\n        usage: \"GAUGE\"\n        description: \"Total rows returned\""
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:queries.yaml": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-prometheus-postgres-exporter-config",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1600",
                "self_link": null,
                "uid": "1dfdd949-c0de-498c-b35a-3751e84288af"
            }
        },
        "stackgres-replicate": {
            "api_version": null,
            "binary_data": null,
            "data": {
                "MD5SUM": "D41D8CD98F00B204E9800998ECF8427E"
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:MD5SUM": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-replicate",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1596",
                "self_link": null,
                "uid": "6c00b036-2d2b-4383-9f60-78b7ad626efb"
            }
        },
        "stackgres-restapi-grafana-integration": {
            "api_version": null,
            "binary_data": null,
            "data": {
                "archiving.json": "{\n  \"__inputs\": [\n    {\n      \"name\": \"DS_PROMETHEUS\",\n      \"label\": \"Prometheus\",\n      \"description\": \"\",\n      \"type\": \"datasource\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\"\n    }\n  ],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"stat\",\n      \"name\": \"Stat\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"datasource\",\n          \"uid\": \"grafana\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations & Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"This dashboard works with StackGres\",\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 11,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 2,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"rate(pg_stat_archiver_archived_count{instance=~\\\"${instance}:9187\\\"}[5m])*300\",\n          \"interval\": \"\",\n          \"legendFormat\": \"# of WALs archived\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"No. WALs files archived\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 10,\n        \"x\": 11,\n        \"y\": 0\n      },\n      \"id\": 4,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"rate(pg_stat_archiver_failed_count{instance=~\\\"${instance}:9187\\\"}[5m])*300\",\n          \"interval\": \"\",\n          \"legendFormat\": \"# Archive attemps\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Number of failed attempts for archiving WAL files\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 0\n      },\n      \"id\": 6,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"mean\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"value\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_stat_archiver_last_archive_age{instance=~\\\"${instance}:9187\\\"}\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Last archive age (Seconds)\",\n      \"type\": \"stat\"\n    }\n  ],\n  \"refresh\": \"\",\n  \"schemaVersion\": 38,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"postgres\",\n    \"db\",\n    \"stats\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(namespace)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(namespace)\",\n          \"refId\": \"Prometheus-namespace-Variable-Query\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"pod\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"/.*pod=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Instance\",\n        \"multi\": false,\n        \"name\": \"instance\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*instance=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(datname)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Database\",\n        \"multi\": true,\n        \"name\": \"datname\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(datname)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Cluster Name\",\n        \"multi\": false,\n        \"name\": \"cluster_name\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*cluster_name=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"filters\": [],\n        \"hide\": 0,\n        \"label\": \"\",\n        \"name\": \"Filters\",\n        \"skipUrlSync\": false,\n        \"type\": \"adhoc\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"utc\",\n  \"title\": \"Archiving\",\n  \"uid\": \"000000042\",\n  \"version\": 2,\n  \"weekStart\": \"\"\n}",
                "connection-pooling.json": "{\n  \"__inputs\": [\n    {\n      \"name\": \"DS_PROMETHEUS\",\n      \"label\": \"Prometheus\",\n      \"description\": \"\",\n      \"type\": \"datasource\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\"\n    }\n  ],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"datasource\",\n          \"uid\": \"grafana\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations & Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"This dashboard works with StackGres\",\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 2,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"line+area\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"transparent\",\n                \"value\": null\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 185\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 250\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"Database: mminventory, User: mminventory_pro\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"color\",\n                \"value\": {\n                  \"fixedColor\": \"light-blue\",\n                  \"mode\": \"fixed\"\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 213,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\",\n            \"max\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pgbouncer_show_pools_cl_active{instance=~\\\"${instance}:9187\\\",database!~\\\"pgbouncer\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{database}}, User: {{user}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Active Clients\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 0\n      },\n      \"id\": 216,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\",\n            \"max\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pgbouncer_show_pools_sv_idle{instance=~\\\"${instance}:9187\\\",database!~\\\"pgbouncer\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{database}}, User: {{user}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Server Idle\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 8\n      },\n      \"id\": 215,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\",\n            \"max\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pgbouncer_show_pools_sv_active{instance=~\\\"${instance}:9187\\\",database!~\\\"pgbouncer\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{database}}, User: {{user}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Server Active\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 8\n      },\n      \"id\": 214,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\",\n            \"max\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pgbouncer_show_pools_cl_waiting{instance=~\\\"${instance}:9187\\\",database!~\\\"pgbouncer\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{database}}, User: {{user}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Waiting Clients\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"\u00b5s\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 16\n      },\n      \"id\": 217,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pgbouncer_show_stats_avg_xact_time{instance=~\\\"${instance}:9187\\\",database!~\\\"pgbouncer\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{database}}  - XACT\",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pgbouncer_show_stats_avg_query_time{instance=~\\\"${instance}:9187\\\",database!~\\\"pgbouncer\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{database}} - QUERY\",\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pgbouncer_show_stats_avg_wait_time{instance=~\\\"${instance}:9187\\\",database!~\\\"pgbouncer\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{database}} - WAIT\",\n          \"refId\": \"C\"\n        }\n      ],\n      \"title\": \"Average Time\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 16\n      },\n      \"id\": 218,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pgbouncer_show_stats_avg_recv{instance=~\\\"${instance}:9187\\\",database!~\\\"pgbouncer\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{database}} - RECV\",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pgbouncer_show_stats_avg_query_time{instance=~\\\"${instance}:9187\\\",database!~\\\"pgbouncer\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{database}}  - SENT\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \"Average traffic\",\n      \"type\": \"timeseries\"\n    }\n  ],\n  \"refresh\": \"\",\n  \"schemaVersion\": 38,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"postgres\",\n    \"db\",\n    \"stats\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(namespace)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(namespace)\",\n          \"refId\": \"Prometheus-namespace-Variable-Query\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"pod\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n          \"refId\": \"Prometheus-pod-Variable-Query\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"/.*pod=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Instance\",\n        \"multi\": false,\n        \"name\": \"instance\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n          \"refId\": \"Prometheus-instance-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*instance=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(datname)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Database\",\n        \"multi\": true,\n        \"name\": \"datname\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(datname)\",\n          \"refId\": \"Prometheus-datname-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Cluster Name\",\n        \"multi\": false,\n        \"name\": \"cluster_name\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n          \"refId\": \"Prometheus-cluster_name-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*cluster_name=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"filters\": [],\n        \"hide\": 0,\n        \"label\": \"\",\n        \"name\": \"Filters\",\n        \"skipUrlSync\": false,\n        \"type\": \"adhoc\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"utc\",\n  \"title\": \"Connection Pooling\",\n  \"uid\": \"000000043\",\n  \"version\": 2,\n  \"weekStart\": \"\"\n}",
                "current-activity.json": "{\n  \"__inputs\": [\n    {\n      \"name\": \"DS_PROMETHEUS\",\n      \"label\": \"Prometheus\",\n      \"description\": \"\",\n      \"type\": \"datasource\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\"\n    }\n  ],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\",\n      \"version\": \"10.2.3\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"stat\",\n      \"name\": \"Stat\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"datasource\",\n          \"uid\": \"grafana\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations & Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"This dashboard works with StackGres\",\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"dateTimeFromNow\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 247,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"/^Time$/\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"pg_postmaster_start_time_seconds{instance=~\\\"${instance}:9187\\\"}\",\n          \"instant\": false,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Start time\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"description\": \"Show if the node is leader or replica node\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"color\": \"green\",\n                  \"index\": 0,\n                  \"text\": \"Leader\"\n                },\n                \"1\": {\n                  \"color\": \"dark-red\",\n                  \"index\": 1,\n                  \"text\": \"Replica\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 3,\n        \"y\": 0\n      },\n      \"id\": 249,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"pg_replication_is_replica{instance=~\\\"${instance}:9187\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Role\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"decimals\": 0,\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 4,\n        \"x\": 6,\n        \"y\": 0\n      },\n      \"id\": 281,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum(pg_stat_activity_count{state='active', instance=~\\\"${instance}:9187\\\"})\",\n          \"instant\": false,\n          \"legendFormat\": \"__auto\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Active Connections\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"decimals\": 0,\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"orange\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 4,\n        \"x\": 10,\n        \"y\": 0\n      },\n      \"id\": 282,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum(pg_stat_activity_count{instance=~\\\"${instance}:9187\\\", state=~\\\"idle|idle in transaction|idle in transaction (aborted)\\\"})\",\n          \"instant\": false,\n          \"legendFormat\": \"__auto\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Idle Connections\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"decimals\": 0,\n          \"mappings\": [],\n          \"min\": 0,\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"dark-orange\",\n                \"value\": 1\n              },\n              {\n                \"color\": \"dark-red\",\n                \"value\": 10\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 4,\n        \"x\": 14,\n        \"y\": 0\n      },\n      \"id\": 253,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(pg_stat_activity_count{instance=~\\\"${instance}:9187\\\", state=~\\\"idle in transaction|idle in transaction (aborted)\\\"})\",\n          \"hide\": false,\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Idle in transaction connections\",\n      \"transformations\": [],\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 18,\n        \"y\": 0\n      },\n      \"id\": 257,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"label_replace(count(pg_replication_slots_active{instance=~\\\"${instance}:9187\\\"}==0),\\\"replicationslots\\\",\\\"active\\\",\\\"slots\\\",\\\".*\\\")\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Inactive Replication Slots\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"description\": \"Show if the last metrics scrape finish successfully or not. \",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"0\": {\n                  \"color\": \"green\",\n                  \"index\": 0,\n                  \"text\": \"Ok\"\n                },\n                \"1\": {\n                  \"color\": \"dark-red\",\n                  \"index\": 1,\n                  \"text\": \"Fail\"\n                }\n              },\n              \"type\": \"value\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 3,\n        \"x\": 21,\n        \"y\": 0\n      },\n      \"id\": 259,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"pg_exporter_last_scrape_error{instance=~\\\"${instance}:9187\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Last metrics scrape\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 6\n      },\n      \"id\": 263,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(pg_long_running_transactions_count{instance=~\\\"${instance}:9187\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Current Long Running Tx\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"description\": \"Queries waiting for other process to finish\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 4,\n        \"y\": 6\n      },\n      \"id\": 265,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"pg_stat_current_waiting_query{instance=~\\\"${instance}:9187\\\"}\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Queries waiting\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"description\": \"Number of queries blocked by other pids\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 9,\n        \"y\": 6\n      },\n      \"id\": 267,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(pg_blocked_queries{instance=~\\\"${instance}:9187\\\"})\",\n          \"format\": \"time_series\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Blocked Queries\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"description\": \"shows the active running vacuum queries\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 14,\n        \"y\": 6\n      },\n      \"id\": 269,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(pg_vacuum_queries{instance=~\\\"${instance}:9187\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Active VACUUM queries\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"description\": \"shows the active running vacuum analyze queries\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [],\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 5,\n        \"x\": 19,\n        \"y\": 6\n      },\n      \"id\": 271,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\",\n        \"wideLayout\": true\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"sum(pg_vacuum_analyze_queries{instance=~\\\"${instance}:9187\\\"})\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Active ANALYZE queries\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisBorderShow\": false,\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"insertNulls\": false,\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"noValue\": \"No vacuum in progress\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 13\n      },\n      \"id\": 279,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (datname) (pg_stat_progress_vacuum_heap_blks_total{instance=~\\\"${instance}:9187\\\"})\",\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - HEAP-BLKS-TOTAL\",\n          \"range\": true,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (datname) (pg_stat_progress_vacuum_heap_blks_scanned{instance=~\\\"${instance}:9187\\\"})\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - HEAP-BLKS-SCANNED\",\n          \"range\": true,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (datname) (pg_stat_progress_vacuum_heap_blks_vacuumed{instance=~\\\"${instance}:9187\\\"})\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - HEAP-BLKS-VACUUMED\",\n          \"range\": true,\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (datname) (pg_stat_progress_vacuum_index_vacuum_count{instance=~\\\"${instance}:9187\\\"})\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - INDEX-VACUUM-COUNT\",\n          \"range\": true,\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (datname) (pg_stat_progress_vacuum_max_dead_tuples{instance=~\\\"${instance}:9187\\\"})\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - MAX-DEAD-TUPLES\",\n          \"range\": true,\n          \"refId\": \"E\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (datname) (pg_stat_progress_vacuum_num_dead_tuples{instance=~\\\"${instance}:9187\\\"})\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - NUM-DEAD-TUPLES\",\n          \"range\": true,\n          \"refId\": \"F\"\n        }\n      ],\n      \"title\": \"Vacuum progress\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisBorderShow\": false,\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"insertNulls\": false,\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"noValue\": \"No vacuum cluster in progress\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 13\n      },\n      \"id\": 280,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (datname) (pg_stat_progress_cluster_heap_tuples_scanned{instance=~\\\"${instance}:9187\\\"})\",\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - HEAP-TUPLES-SCANNED\",\n          \"range\": true,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (datname) (pg_stat_progress_cluster_heap_tuples_written{instance=~\\\"${instance}:9187\\\"})\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - HEAP-TUBLES-WRITTEN\",\n          \"range\": true,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (datname) (pg_stat_progress_cluster_heap_blks_total{instance=~\\\"${instance}:9187\\\"})\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - HEAP-BLKS-TOTAL\",\n          \"range\": true,\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum by (datname) (pg_stat_progress_cluster_heap_blks_scanned{instance=~\\\"${instance}:9187\\\"})\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - HEAP-BLKS-SCANNED\",\n          \"range\": true,\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"pg_stat_progress_cluster_index_rebuild_count{instance=~\\\"${instance}:9187\\\"}\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"Database: {{datname}} - INDEX-REBUILD-COUNT\",\n          \"range\": true,\n          \"refId\": \"E\"\n        }\n      ],\n      \"title\": \"Vacuum Cluster progress\",\n      \"type\": \"timeseries\"\n    }\n  ],\n  \"refresh\": \"\",\n  \"schemaVersion\": 39,\n  \"tags\": [\n    \"postgres\",\n    \"db\",\n    \"stats\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(namespace)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(namespace)\",\n          \"refId\": \"Prometheus-namespace-Variable-Query\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"pod\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"/.*pod=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Instance\",\n        \"multi\": false,\n        \"name\": \"instance\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*instance=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(datname)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Database\",\n        \"multi\": true,\n        \"name\": \"datname\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(datname)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Cluster Name\",\n        \"multi\": false,\n        \"name\": \"cluster_name\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*cluster_name=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"filters\": [],\n        \"hide\": 0,\n        \"label\": \"\",\n        \"name\": \"Filters\",\n        \"skipUrlSync\": false,\n        \"type\": \"adhoc\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"utc\",\n  \"title\": \"CurrentActivity\",\n  \"uid\": \"000000044\",\n  \"version\": 5,\n  \"weekStart\": \"\"\n}",
                "db-info.json": "{\n  \"__inputs\": [\n    {\n      \"name\": \"DS_PROMETHEUS\",\n      \"label\": \"Prometheus\",\n      \"description\": \"\",\n      \"type\": \"datasource\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\"\n    }\n  ],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"panel\",\n      \"id\": \"barchart\",\n      \"name\": \"Bar chart\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"gauge\",\n      \"name\": \"Gauge\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"graph\",\n      \"name\": \"Graph (old)\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"stat\",\n      \"name\": \"Stat\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"grafana\",\n          \"uid\": \"-- Grafana --\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations & Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 2,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 40,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"mean\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"name\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_static{instance=~\\\"${instance}:9187\\\"}\",\n          \"format\": \"time_series\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"{{short_version}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Version\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"decbytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 2,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 0\n      },\n      \"id\": 42,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"SUM(pg_stat_database_tup_fetched{datname=~\\\"$datname\\\", instance=~\\\"${instance}:9187\\\"})\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"refId\": \"A\",\n          \"step\": 4\n        }\n      ],\n      \"title\": \"Current fetch data\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 0\n      },\n      \"id\": 52,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_settings_maintenance_work_mem_bytes{instance=~\\\"${instance}:9187\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Maintenance Work Mem\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"decimals\": 1,\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 3,\n        \"x\": 11,\n        \"y\": 0\n      },\n      \"id\": 54,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_settings_max_wal_size_bytes{instance=~\\\"${instance}:9187\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Max WAL Size\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 2,\n        \"x\": 14,\n        \"y\": 0\n      },\n      \"id\": 60,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_settings_max_parallel_workers{instance=~\\\"${instance}:9187\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Max Parallel Workers\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineStyle\": {\n              \"fill\": \"solid\"\n            },\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 4,\n          \"mappings\": [],\n          \"max\": 1,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 6,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 0\n      },\n      \"id\": 62,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"avg_over_time(pg_up{cluster_name=~\\\"$cluster_name\\\"}[1m])\",\n          \"legendFormat\": \"Cluster: {{cluster_name}}, Pod: {{pod}}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Postgres Instances Availability(%)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"decbytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 2,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 2\n      },\n      \"id\": 44,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"SUM(pg_stat_database_tup_inserted{datname=~\\\"$datname\\\", instance=~\\\"${instance}:9187\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\",\n          \"step\": 4\n        }\n      ],\n      \"title\": \"Current insert data\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"decbytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 2,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 2\n      },\n      \"id\": 46,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"SUM(pg_stat_database_tup_updated{datname=~\\\"$datname\\\", instance=~\\\"${instance}:9187\\\"})\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"refId\": \"A\",\n          \"step\": 4\n        }\n      ],\n      \"title\": \"Current update data\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 3,\n        \"x\": 8,\n        \"y\": 3\n      },\n      \"id\": 56,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_settings_random_page_cost{instance=~\\\"${instance}:9187\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Random Page Cost\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 3,\n        \"x\": 11,\n        \"y\": 3\n      },\n      \"id\": 58,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_settings_seq_page_cost{instance=~\\\"${instance}:9187\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Seq Page Cost\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 2,\n        \"w\": 4,\n        \"x\": 0,\n        \"y\": 4\n      },\n      \"id\": 48,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"mean\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_settings_max_connections{instance=~\\\"${instance}:9187\\\"}\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Max Connections\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 2,\n        \"w\": 4,\n        \"x\": 4,\n        \"y\": 4\n      },\n      \"id\": 50,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_settings_shared_buffers_bytes{instance=~\\\"${instance}:9187\\\"}\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Shared Buffers\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": true,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 6\n      },\n      \"id\": 12,\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\",\n            \"max\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"pg_stat_activity_count{datname=~\\\"$datname\\\", instance=~\\\"${instance}:9187\\\", state=\\\"active\\\"} !=0\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Database: {{datname}}, State: {{state}}\",\n          \"range\": true,\n          \"refId\": \"A\",\n          \"step\": 2\n        }\n      ],\n      \"title\": \"Active sessions\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 6\n      },\n      \"id\": 14,\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"rate(pg_stat_database_xact_commit{instance=~\\\"${instance}:9187\\\", datname=~\\\"$datname\\\"}[5m])\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Database: {{datname}} - COMMIT\",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"rate(pg_stat_database_xact_rollback{instance=~\\\"${instance}:9187\\\", datname=~\\\"$datname\\\"}[5m])\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Database: {{datname}} - ROLLBACK\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \"Transactions\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"decimals\": 2,\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"percentage\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 4,\n        \"x\": 16,\n        \"y\": 6\n      },\n      \"id\": 4,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"node_filesystem_avail_bytes{instance=~\\\"${instance}:9187\\\",mountpoint=\\\"/var/lib/postgresql\\\",fstype!=\\\"\\\"}\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"Available\",\n          \"range\": false,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"node_filesystem_size_bytes{instance=~\\\"${instance}:9187\\\",mountpoint=\\\"/var/lib/postgresql\\\",fstype!=\\\"\\\"}\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"Total\",\n          \"range\": false,\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \"Database Disk Size\",\n      \"transformations\": [],\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"displayName\": \"\",\n          \"mappings\": [],\n          \"max\": 100,\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 75\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 90\n              }\n            ]\n          },\n          \"unit\": \"percent\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 4,\n        \"x\": 20,\n        \"y\": 6\n      },\n      \"id\": 8,\n      \"options\": {\n        \"orientation\": \"auto\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"last\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"showThresholdLabels\": false,\n        \"showThresholdMarkers\": true,\n        \"text\": {}\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"(1.0 - node_filesystem_avail_bytes{instance=~\\\"${instance}:9187\\\",mountpoint=\\\"/var/lib/postgresql\\\",fstype!=\\\"\\\"} / node_filesystem_size_bytes{instance=~\\\"${instance}:9187\\\",mountpoint=\\\"/var/lib/postgresql\\\",fstype!=\\\"\\\"}) * 100\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Size\",\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"(1.0 - node_filesystem_files_free{instance=~\\\"${instance}:9187\\\",mountpoint=\\\"/var/lib/postgresql\\\",fstype!=\\\"\\\"} / node_filesystem_files{instance=~\\\"${instance}:9187\\\",mountpoint=\\\"/var/lib/postgresql\\\",fstype!=\\\"\\\"}) * 100\",\n          \"interval\": \"\",\n          \"legendFormat\": \"inodes\",\n          \"refId\": \"B\"\n        }\n      ],\n      \"title\": \"Database Disk Usage\",\n      \"type\": \"gauge\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          }\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"Current\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"short\"\n              },\n              {\n                \"id\": \"decimals\",\n                \"value\": 2\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 4,\n        \"w\": 4,\n        \"x\": 16,\n        \"y\": 10\n      },\n      \"id\": 6,\n      \"options\": {\n        \"colorMode\": \"value\",\n        \"graphMode\": \"area\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"node_filesystem_files{instance=~\\\"${instance}:9187\\\",mountpoint=\\\"/var/lib/postgresql\\\",fstype!=\\\"\\\"}\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"Total\",\n          \"range\": false,\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"node_filesystem_files_free{instance=~\\\"${instance}:9187\\\",mountpoint=\\\"/var/lib/postgresql\\\",fstype!=\\\"\\\"}\",\n          \"instant\": true,\n          \"interval\": \"\",\n          \"legendFormat\": \"Free\",\n          \"range\": false,\n          \"refId\": \"D\"\n        }\n      ],\n      \"title\": \"Database Disk inodes\",\n      \"transformations\": [],\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 14\n      },\n      \"id\": 18,\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\",\n            \"sum\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"rate(pg_stat_database_tup_fetched{datname=~\\\"$datname\\\", instance=~\\\"${instance}:9187\\\"}[5m]) != 0\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Database: {{datname}}\",\n          \"refId\": \"A\",\n          \"step\": 2\n        }\n      ],\n      \"title\": \"Fetched data (Rows)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 14\n      },\n      \"id\": 16,\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_locks_count{datname=~\\\"$datname\\\", instance=~\\\"${instance}:9187\\\"} != 0\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Database: {{datname}}, Type:{{mode}}\",\n          \"refId\": \"A\",\n          \"step\": 2\n        }\n      ],\n      \"title\": \"Lock tables\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"fillOpacity\": 80,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineWidth\": 1,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 14\n      },\n      \"id\": 63,\n      \"options\": {\n        \"barRadius\": 0,\n        \"barWidth\": 0.97,\n        \"fullHighlight\": false,\n        \"groupWidth\": 0.7,\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"orientation\": \"auto\",\n        \"showValue\": \"auto\",\n        \"stacking\": \"none\",\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        },\n        \"xTickLabelRotation\": 0,\n        \"xTickLabelSpacing\": 0\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"pg_database_size_bytes{instance=~\\\"${instance}:9187\\\", datname!~\\\"template0|template1\\\"}\",\n          \"instant\": true,\n          \"legendFormat\": \"{{datname}}\",\n          \"range\": false,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Database Size\",\n      \"type\": \"barchart\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 22\n      },\n      \"id\": 20,\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"rate(pg_stat_database_tup_returned{datname=~\\\"$datname\\\", instance=~\\\"${instance}:9187\\\"}[5m]) != 0\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Database: {{datname}}\",\n          \"refId\": \"A\",\n          \"step\": 2\n        }\n      ],\n      \"title\": \"Returned data (Rows)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 22\n      },\n      \"id\": 22,\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\",\n            \"sum\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"rate(pg_stat_database_tup_inserted{datname=~\\\"$datname\\\", instance=~\\\"${instance}:9187\\\"}[5m])\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Database: {{datname}}\",\n          \"refId\": \"A\",\n          \"step\": 2\n        }\n      ],\n      \"title\": \"Inserted data (Rows)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 14,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 22\n      },\n      \"id\": 10,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"sort_desc(topk(10, pg_total_relation_size_bytes{instance=~\\\"${instance}:9187\\\"}))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Top 10 bigger tables\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 29\n      },\n      \"id\": 24,\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(pg_stat_database_tup_deleted{datname=~\\\"$datname\\\", instance=~\\\"${instance}:9187\\\"}[5m]) \",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Database: {{datname}}\",\n          \"range\": true,\n          \"refId\": \"A\",\n          \"step\": 2\n        }\n      ],\n      \"title\": \"Deleted data (Rows)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 29\n      },\n      \"id\": 30,\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\",\n            \"sum\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"right\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"rate(pg_stat_database_conflicts{instance=~\\\"${instance}:9187\\\", datname=~\\\"$datname\\\"}[5m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Database {{datname}} conflicts\",\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"rate(pg_stat_database_deadlocks{instance=~\\\"${instance}:9187\\\", datname=~\\\"$datname\\\"}[5m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Database {{datname}} deadlocks\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Conflicts/Deadlocks\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"decimals\": 2,\n      \"description\": \"Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting.\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 36\n      },\n      \"hiddenSeries\": false,\n      \"id\": 32,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": true,\n        \"hideZero\": true,\n        \"max\": true,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"sort\": \"current\",\n        \"sortDesc\": true,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"rate(pg_stat_database_temp_bytes{instance=~\\\"${instance}:9187\\\", datname=~\\\"$datname\\\"}[5m])\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Database: {{datname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"Temp File (Bytes)\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"logBase\": 1,\n          \"min\": \"0\",\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"decimals\": 2,\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"links\": []\n        },\n        \"overrides\": []\n      },\n      \"fill\": 1,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 36\n      },\n      \"hiddenSeries\": false,\n      \"id\": 26,\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": true,\n        \"current\": true,\n        \"hideEmpty\": true,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": false,\n        \"show\": true,\n        \"sort\": \"current\",\n        \"sortDesc\": false,\n        \"total\": false,\n        \"values\": true\n      },\n      \"lines\": true,\n      \"linewidth\": 1,\n      \"links\": [],\n      \"nullPointMode\": \"null\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [],\n      \"spaceLength\": 10,\n      \"stack\": false,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_stat_database_blks_hit{instance=~\\\"${instance}:9187\\\", datname=~\\\"$datname\\\"} / (pg_stat_database_blks_read{instance=~\\\"${instance}:9187\\\", datname=~\\\"$datname\\\"} + pg_stat_database_blks_hit{instance=~\\\"${instance}:9187\\\", datname=~\\\"$datname\\\"})\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Database: {{ datname }}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"Cache Hit Rate\",\n      \"tooltip\": {\n        \"shared\": true,\n        \"sort\": 0,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"decimals\": 2,\n          \"format\": \"percentunit\",\n          \"label\": \"\",\n          \"logBase\": 1,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": true\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 0,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"auto\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          }\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 36\n      },\n      \"id\": 64,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(pg_stat_bgwriter_buffers_backend_total{instance=~\\\"${instance}:9187\\\"}[5m])\",\n          \"instant\": false,\n          \"legendFormat\": \"buffers_backend\",\n          \"range\": true,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(pg_stat_bgwriter_buffers_alloc_total{instance=~\\\"${instance}:9187\\\"}[5m])\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"buffers_alloc\",\n          \"range\": true,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(pg_stat_bgwriter_buffers_backend_fsync_total{instance=~\\\"${instance}:9187\\\"}[5m])\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"backend_fsync\",\n          \"range\": true,\n          \"refId\": \"C\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(pg_stat_bgwriter_buffers_checkpoint_total{instance=~\\\"${instance}:9187\\\"}[5m])\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"buffers_checkpoint\",\n          \"range\": true,\n          \"refId\": \"D\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(pg_stat_bgwriter_buffers_clean_total{instance=~\\\"${instance}:9187\\\"}[5m])\",\n          \"hide\": false,\n          \"instant\": false,\n          \"legendFormat\": \"buffers_clean\",\n          \"range\": true,\n          \"refId\": \"E\"\n        }\n      ],\n      \"title\": \"Buffers (bgwriter)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"always\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"ms\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 43\n      },\n      \"id\": 36,\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\",\n            \"max\",\n            \"min\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(pg_stat_bgwriter_checkpoint_write_time_total{instance=~\\\"${instance}:9187\\\"}[5m])\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"write_time - Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk.\",\n          \"range\": true,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(pg_stat_bgwriter_checkpoint_sync_time_total{instance=~\\\"${instance}:9187\\\"}[5m])\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"sync_time - Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk.\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Checkpoint Duration Stats\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 2,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"always\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 43\n      },\n      \"id\": 38,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\",\n            \"max\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"label_replace(sum(rate(pg_stat_bgwriter_checkpoints_timed_total{instance=~\\\"${instance}:9187\\\"}[5m])) by (instance), \\\"distinct\\\", \\\"Timed\\\", \\\"timed\\\", \\\".*\\\")*300 or label_replace(sum(rate(pg_stat_bgwriter_checkpoints_req_total{instance=~\\\"${instance}:9187\\\"}[5m])) by (instance), \\\"distinct\\\", \\\"Requested\\\", \\\"requested\\\", \\\".*\\\")*300\",\n          \"interval\": \"\",\n          \"legendFormat\": \"{{distinct}}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Checkpoint frequency\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"line+area\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"min\": 0,\n          \"noValue\": \"0\",\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"transparent\",\n                \"value\": null\n              },\n              {\n                \"color\": \"orange\",\n                \"value\": 90\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 43\n      },\n      \"id\": 34,\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": true,\n          \"expr\": \"pg_vaccuum_wraparound_percent{datname=~\\\"$datname\\\", instance=~\\\"${instance}:9187\\\"} != 0\",\n          \"format\": \"time_series\",\n          \"interval\": \"\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"Database: {{datname}}, Table:{{full_table_name}}\",\n          \"range\": true,\n          \"refId\": \"A\",\n          \"step\": 2\n        }\n      ],\n      \"title\": \"Tables near to vacuum wraparound\",\n      \"type\": \"timeseries\"\n    }\n  ],\n  \"refresh\": \"\",\n  \"schemaVersion\": 38,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"postgres\",\n    \"db\",\n    \"stats\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(namespace)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(namespace)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"pod\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"/.*pod=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Instance\",\n        \"multi\": false,\n        \"name\": \"instance\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*instance=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 0,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(datname)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Database\",\n        \"multi\": true,\n        \"name\": \"datname\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(datname)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"type\": \"query\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Cluster Name\",\n        \"multi\": false,\n        \"name\": \"cluster_name\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*cluster_name=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"type\": \"query\"\n      },\n      {\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"filters\": [],\n        \"hide\": 0,\n        \"name\": \"Filters\",\n        \"skipUrlSync\": false,\n        \"type\": \"adhoc\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {},\n  \"timezone\": \"\",\n  \"title\": \"DB Info\",\n  \"uid\": \"000000045\",\n  \"version\": 5,\n  \"weekStart\": \"\"\n}",
                "db-objects.json": "{\n  \"__inputs\": [\n    {\n      \"name\": \"DS_PROMETHEUS\",\n      \"label\": \"Prometheus\",\n      \"description\": \"\",\n      \"type\": \"datasource\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\"\n    }\n  ],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"datasource\",\n          \"uid\": \"grafana\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations & Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"This dashboard works with StackGres\",\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 11,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 195,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"right\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"sort_desc(topk(10, pg_total_relation_size_bytes{instance=~\\\"${instance}:9187\\\"}))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Top 10 bigger tables\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 11\n      },\n      \"id\": 122,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(10, sum by (relname, instance,datname,schemaname) (rate(pg_stat_user_tables_idx_scan{instance=~\\\"${instance}:9187\\\"}[5m])) + sum by (relname, instance,datname,schemaname) (rate(pg_stat_user_tables_seq_scan{instance=~\\\"${instance}:9187\\\"}[5m])))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"More Consulted Tables (Top 10)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 11\n      },\n      \"id\": 124,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(10, rate(pg_stat_user_tables_n_tup_ins{instance=~\\\"${instance}:9187\\\"}[5m]))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Table with more inserts (Top 10)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 19\n      },\n      \"id\": 128,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(10, rate(pg_stat_user_tables_n_tup_upd{instance=~\\\"${instance}:9187\\\"}[5m]))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Tables with more UPDATE operations (Top 10)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 19\n      },\n      \"id\": 126,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(10, rate(pg_stat_user_tables_n_tup_del{instance=~\\\"${instance}:9187\\\"}[5m]))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Tables with more DELETE operations (Top 10)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 27\n      },\n      \"id\": 205,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(20, pg_index_bloat_size{instance=~\\\"${instance}:9187\\\"})\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Index bloat Size (Top 20)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"description\": \"\",\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 27\n      },\n      \"id\": 207,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(20, pg_index_real_size{instance=~\\\"${instance}:9187\\\"})\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Index Size (Top 20)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 35\n      },\n      \"id\": 209,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(10, pg_index_bloat_ratio{instance=~\\\"${instance}:9187\\\"})\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Index Bloat Ratio (Top 20)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 2,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 43\n      },\n      \"id\": 106,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(10, rate(pg_stat_user_tables_n_dead_tup{instance=~\\\"${instance}:9187\\\"}[5m])*300)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Dead tuples (top 10)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 2,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 43\n      },\n      \"id\": 199,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(20, pg_table_bloat_bloat_ratio{instance=~\\\"${instance}:9187\\\"})\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema:{{schemaname}}, Table: {{tablename}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Table Bloat Ratio (top 20)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 2,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 51\n      },\n      \"id\": 201,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(20, pg_table_bloat_bloat_size{instance=~\\\"${instance}:9187\\\"})\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schemaname}}, Table: {{tablename}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Table Bloat Size\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 2,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 51\n      },\n      \"id\": 203,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"desc\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(20, pg_table_bloat_extra_size{instance=~\\\"${instance}:9187\\\"})\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Schema: {{schemaname}}, Table: {{tablename}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Table pages Extra size (Top 20)\",\n      \"type\": \"timeseries\"\n    }\n  ],\n  \"refresh\": \"\",\n  \"schemaVersion\": 38,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"postgres\",\n    \"db\",\n    \"stats\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(namespace)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(namespace)\",\n          \"refId\": \"Prometheus-namespace-Variable-Query\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"pod\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"/.*pod=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Instance\",\n        \"multi\": false,\n        \"name\": \"instance\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*instance=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(datname)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Database\",\n        \"multi\": true,\n        \"name\": \"datname\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(datname)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Cluster Name\",\n        \"multi\": false,\n        \"name\": \"cluster_name\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*cluster_name=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"filters\": [],\n        \"hide\": 0,\n        \"label\": \"\",\n        \"name\": \"Filters\",\n        \"skipUrlSync\": false,\n        \"type\": \"adhoc\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"utc\",\n  \"title\": \"Db Objects\",\n  \"uid\": \"000000046\",\n  \"version\": 2,\n  \"weekStart\": \"\"\n}",
                "db-os.json": "{\n  \"__inputs\": [],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"graph\",\n      \"name\": \"Graph (old)\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"grafana\",\n          \"uid\": \"-- Grafana --\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations & Alerts\",\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"$datasource\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 100,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 0,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"normal\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"mappings\": [],\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"requests\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"color\",\n                \"value\": {\n                  \"fixedColor\": \"#F2495C\",\n                  \"mode\": \"fixed\"\n                }\n              },\n              {\n                \"id\": \"custom.fillOpacity\",\n                \"value\": 0\n              },\n              {\n                \"id\": \"custom.lineWidth\",\n                \"value\": 2\n              },\n              {\n                \"id\": \"custom.stacking\",\n                \"value\": {\n                  \"group\": \"A\",\n                  \"mode\": \"none\"\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"limits\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"color\",\n                \"value\": {\n                  \"fixedColor\": \"#FF9830\",\n                  \"mode\": \"fixed\"\n                }\n              },\n              {\n                \"id\": \"custom.fillOpacity\",\n                \"value\": 0\n              },\n              {\n                \"id\": \"custom.lineWidth\",\n                \"value\": 2\n              },\n              {\n                \"id\": \"custom.stacking\",\n                \"value\": {\n                  \"group\": \"A\",\n                  \"mode\": \"none\"\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 1,\n      \"interval\": \"1m\",\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"table\",\n          \"placement\": \"right\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"uid\": \"$datasource\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"rate(container_cpu_usage_seconds_total{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"}[5m]) \",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{container}}\",\n          \"range\": true,\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"uid\": \"$datasource\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum(\\n    kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"cpu\\\"}\\n)\\n\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"requests\",\n          \"range\": true,\n          \"refId\": \"B\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"uid\": \"$datasource\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum(\\n    kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"cpu\\\"}\\n)\\n\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"limits\",\n          \"range\": true,\n          \"refId\": \"C\",\n          \"step\": 10\n        }\n      ],\n      \"title\": \"CPU Usage\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"$datasource\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 100,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 0,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"normal\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"line+area\"\n            }\n          },\n          \"mappings\": [],\n          \"max\": 1,\n          \"min\": 0,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"transparent\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 0.25\n              }\n            ]\n          },\n          \"unit\": \"percentunit\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 7\n      },\n      \"id\": 2,\n      \"interval\": \"1m\",\n      \"links\": [],\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"table\",\n          \"placement\": \"right\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"single\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"uid\": \"$datasource\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"sum(increase(container_cpu_cfs_throttled_periods_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])) by (container) /sum(increase(container_cpu_cfs_periods_total{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", cluster=\\\"$cluster\\\"}[$__rate_interval])) by (container)\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{container}}\",\n          \"range\": true,\n          \"refId\": \"A\",\n          \"step\": 10\n        }\n      ],\n      \"title\": \"CPU Throttling\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"aliasColors\": {},\n      \"bars\": false,\n      \"dashLength\": 10,\n      \"dashes\": false,\n      \"datasource\": {\n        \"uid\": \"$datasource\"\n      },\n      \"fill\": 10,\n      \"fillGradient\": 0,\n      \"gridPos\": {\n        \"h\": 7,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 14\n      },\n      \"hiddenSeries\": false,\n      \"id\": 4,\n      \"interval\": \"1m\",\n      \"legend\": {\n        \"alignAsTable\": true,\n        \"avg\": false,\n        \"current\": false,\n        \"max\": false,\n        \"min\": false,\n        \"rightSide\": true,\n        \"show\": true,\n        \"total\": false,\n        \"values\": false\n      },\n      \"lines\": true,\n      \"linewidth\": 0,\n      \"links\": [],\n      \"nullPointMode\": \"null as zero\",\n      \"options\": {\n        \"alertThreshold\": true\n      },\n      \"percentage\": false,\n      \"pointradius\": 5,\n      \"points\": false,\n      \"renderer\": \"flot\",\n      \"seriesOverrides\": [\n        {\n          \"alias\": \"requests\",\n          \"color\": \"#F2495C\",\n          \"dashes\": true,\n          \"fill\": 0,\n          \"hideTooltip\": true,\n          \"legend\": true,\n          \"linewidth\": 2,\n          \"stack\": false\n        },\n        {\n          \"alias\": \"limits\",\n          \"color\": \"#FF9830\",\n          \"dashes\": true,\n          \"fill\": 0,\n          \"hideTooltip\": true,\n          \"legend\": true,\n          \"linewidth\": 2,\n          \"stack\": false\n        }\n      ],\n      \"spaceLength\": 10,\n      \"stack\": true,\n      \"steppedLine\": false,\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"uid\": \"$datasource\"\n          },\n          \"expr\": \"sum(container_memory_working_set_bytes{job=\\\"kubelet\\\", metrics_path=\\\"/metrics/cadvisor\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", container!=\\\"\\\", image!=\\\"\\\"}) by (container)\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"{{container}}\",\n          \"refId\": \"A\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"uid\": \"$datasource\"\n          },\n          \"expr\": \"sum(\\n    kube_pod_container_resource_requests{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"memory\\\"}\\n)\\n\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"requests\",\n          \"refId\": \"B\",\n          \"step\": 10\n        },\n        {\n          \"datasource\": {\n            \"uid\": \"$datasource\"\n          },\n          \"expr\": \"sum(\\n    kube_pod_container_resource_limits{job=\\\"kube-state-metrics\\\", cluster=\\\"$cluster\\\", namespace=\\\"$namespace\\\", pod=\\\"$pod\\\", resource=\\\"memory\\\"}\\n)\\n\",\n          \"format\": \"time_series\",\n          \"intervalFactor\": 2,\n          \"legendFormat\": \"limits\",\n          \"refId\": \"C\",\n          \"step\": 10\n        }\n      ],\n      \"thresholds\": [],\n      \"timeRegions\": [],\n      \"title\": \"Memory Usage (WSS)\",\n      \"tooltip\": {\n        \"shared\": false,\n        \"sort\": 2,\n        \"value_type\": \"individual\"\n      },\n      \"type\": \"graph\",\n      \"xaxis\": {\n        \"mode\": \"time\",\n        \"show\": true,\n        \"values\": []\n      },\n      \"yaxes\": [\n        {\n          \"format\": \"bytes\",\n          \"logBase\": 1,\n          \"min\": 0,\n          \"show\": true\n        },\n        {\n          \"format\": \"short\",\n          \"logBase\": 1,\n          \"show\": false\n        }\n      ],\n      \"yaxis\": {\n        \"align\": false\n      }\n    }\n  ],\n  \"refresh\": \"10s\",\n  \"schemaVersion\": 38,\n  \"style\": \"dark\",\n  \"tags\": [],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {\n          \"selected\": false,\n          \"text\": \"Prometheus\",\n          \"value\": \"Prometheus\"\n        },\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Data Source\",\n        \"multi\": false,\n        \"name\": \"datasource\",\n        \"options\": [],\n        \"query\": \"prometheus\",\n        \"queryValue\": \"\",\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"type\": \"datasource\"\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"$datasource\"\n        },\n        \"definition\": \"label_values(up{job=\\\"kube-state-metrics\\\"},cluster)\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"multi\": false,\n        \"name\": \"cluster\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(up{job=\\\"kube-state-metrics\\\"},cluster)\",\n          \"refId\": \"PrometheusVariableQueryEditor-VariableQuery\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"$datasource\"\n        },\n        \"definition\": \"label_values(pg_up,namespace)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"multi\": false,\n        \"name\": \"namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(pg_up,namespace)\",\n          \"refId\": \"PrometheusVariableQueryEditor-VariableQuery\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"$datasource\"\n        },\n        \"definition\": \"label_values(pg_up{namespace=\\\"$namespace\\\"},pod)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"multi\": false,\n        \"name\": \"pod\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(pg_up{namespace=\\\"$namespace\\\"},pod)\",\n          \"refId\": \"PrometheusVariableQueryEditor-VariableQuery\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"utc\",\n  \"title\": \"Db OS\",\n  \"uid\": \"000000047\",\n  \"version\": 7,\n  \"weekStart\": \"\"\n}",
                "integrate-grafana.sh": "#!/bin/sh\n\nGRAFANA_CREDENTIALS=\"$GRAFANA_USER:$GRAFANA_PASSWORD\"\nif [ -z \"$GRAFANA_CREDENTIALS\" ]\nthen\n  >&2 echo \"Grafana credentials are empty\"\n  exit 1\nfi\nGRAFANA_HOST=\"$GRAFANA_SCHEMA://$GRAFANA_WEB_HOST\"\n\ncurl_grafana_api() {\n  curl -svk -H \"Accept: application/json\" -H \"Content-Type: application/json\" --user \"$GRAFANA_CREDENTIALS\" --fail \"$@\"\n}\n\nGRAFANA_PROMETHEUS_DATASOURCE_NAME=\"$GRAFANA_DATASOURCE_NAME\"\nGRAFANA_DASHBOARD_URLS=\"\"\nfor DASHBOARD in $GRAFANA_DASHBOARD_LIST\ndo\n  cat << EOF > /tmp/grafana-dashboard-import.json\n{\n  \"dashboard\": $(sed \"s/\\${DS_PROMETHEUS}/$GRAFANA_PROMETHEUS_DATASOURCE_NAME/g\" /etc/grafana/\"$DASHBOARD\" | jq .),\n  \"overwrite\": true,\n  \"inputs\": [{\n    \"name\": \"DS_PROMETHEUS\",\n    \"type\": \"datasource\",\n    \"pluginId\": \"prometheus\",\n    \"value\": \"$GRAFANA_PROMETHEUS_DATASOURCE_NAME\"\n  }],\n  \"folderId\": null\n}\nEOF\n  GRAFANA_DASHBOARD_URL=\"$(curl_grafana_api -d \"@/tmp/grafana-dashboard-import.json\" \"$GRAFANA_HOST/api/dashboards/db\" | jq -M -r .url)\"\n  [ -n \"$GRAFANA_DASHBOARD_URL\" ]\n  [ \"$GRAFANA_DASHBOARD_URL\" != null ]\n  GRAFANA_DASHBOARD_URL=\"${DASHBOARD%.json}:$GRAFANA_HOST/${GRAFANA_DASHBOARD_URL#*/}\"\n  if [ -z \"$GRAFANA_DASHBOARD_URLS\" ]\n  then\n    GRAFANA_DASHBOARD_URLS=\"$GRAFANA_DASHBOARD_URL\"\n  else\n    GRAFANA_DASHBOARD_URLS=\"$GRAFANA_DASHBOARD_URLS $GRAFANA_DASHBOARD_URL\"\n  fi\ndone\nGRAFANA_API_KEY_ID=\"$(curl_grafana_api \"$GRAFANA_HOST/api/auth/keys\" | jq -r '.[]|select(.name == \"stackgres\")|.id|select(.!=null)')\"\n[ -z \"$GRAFANA_API_KEY_ID\" ] || curl_grafana_api -X DELETE \"$GRAFANA_HOST/api/auth/keys/$GRAFANA_API_KEY_ID\" > /dev/null\nGRAFANA_API_KEY_TOKEN=\"$(curl_grafana_api -d '{\"name\":\"stackgres\", \"role\": \"Viewer\"}' \"$GRAFANA_HOST/api/auth/keys\" | jq -r .key)\"\n[ -n \"$GRAFANA_API_KEY_TOKEN\" ]\nuntil kubectl get sgconfig -n \"$OPERATOR_NAMESPACE\" \"$OPERATOR_NAME\" -o json \\\n  | jq \".\n    | .status.grafana.urls = $(printf %s \"$GRAFANA_DASHBOARD_URLS\" | tr ' ' '\\n' | jq -R . | jq -s .)\n    | .status.grafana.token = \\\"$GRAFANA_API_KEY_TOKEN\\\"\n    | .status.grafana.configHash = \\\"$GRAFANA_CONFIG_HASH\\\"\" \\\n  | kubectl replace --raw /apis/stackgres.io/v1/namespaces/\"$OPERATOR_NAMESPACE\"/sgconfigs/\"$OPERATOR_NAME\"/status -f -\ndo\n  sleep 2\ndone\n",
                "queries.json": "{\n  \"__inputs\": [\n    {\n      \"name\": \"DS_PROMETHEUS\",\n      \"label\": \"Prometheus\",\n      \"description\": \"\",\n      \"type\": \"datasource\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\"\n    }\n  ],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"table\",\n      \"name\": \"Table\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"datasource\",\n          \"uid\": \"grafana\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations & Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"This dashboard works with StackGres\",\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 74,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"expr\": \"pg_slow_queries{instance=~\\\"${instance}:9187\\\", datname!=\\\"\\\"}\",\n          \"interval\": \"\",\n          \"intervalFactor\": 1,\n          \"legendFormat\": \"Database: {{datname}}\",\n          \"range\": true,\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Slow Queries Count\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 16,\n        \"x\": 8,\n        \"y\": 0\n      },\n      \"id\": 86,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"topk(20,rate(pg_stat_user_tables_seq_tup_read{instance=~\\\"${instance}:9187\\\"}[5m]))>0\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Table: {{relname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Sequential Scans\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"s\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 8,\n        \"x\": 0,\n        \"y\": 8\n      },\n      \"id\": 236,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_long_running_transactions_age_in_seconds{instance=~\\\"${instance}:9187\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Long running transaction age(sec)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 8,\n        \"x\": 8,\n        \"y\": 8\n      },\n      \"id\": 76,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_blocked_queries{instance=~\\\"${instance}:9187\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}, Table: {{table}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Blocked Queries Count\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 8,\n        \"x\": 16,\n        \"y\": 8\n      },\n      \"id\": 84,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_long_running_transactions_count{instance=~\\\"${instance}:9187\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Number of long running transactions\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"s\"\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsZero\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byValue\",\n              \"options\": {\n                \"op\": \"gte\",\n                \"reducer\": \"allIsNull\",\n                \"value\": 0\n              }\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.hideFrom\",\n                \"value\": {\n                  \"legend\": true,\n                  \"tooltip\": true,\n                  \"viz\": false\n                }\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 13,\n        \"x\": 0,\n        \"y\": 16\n      },\n      \"id\": 78,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_oldest_blocked_age_seconds{instance=~\\\"${instance}:9187\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Queries largest  time lock\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"decimals\": 0,\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"short\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 8,\n        \"w\": 11,\n        \"x\": 13,\n        \"y\": 16\n      },\n      \"id\": 114,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [],\n          \"displayMode\": \"list\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_stuck_idle_in_transaction_queries{instance=~\\\"${instance}:9187\\\"}\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Database: {{datname}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Queries that are stuck being idle in transactions\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"custom\": {\n            \"align\": \"auto\",\n            \"cellOptions\": {\n              \"type\": \"auto\"\n            },\n            \"inspect\": false\n          },\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          }\n        },\n        \"overrides\": [\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"datname\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 168\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"rolname\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 122\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"Calls\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"decimals\",\n                \"value\": 0\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"Mean exec time\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"unit\",\n                \"value\": \"ms\"\n              },\n              {\n                \"id\": \"decimals\",\n                \"value\": 4\n              }\n            ]\n          },\n          {\n            \"matcher\": {\n              \"id\": \"byName\",\n              \"options\": \"queryid\"\n            },\n            \"properties\": [\n              {\n                \"id\": \"custom.width\",\n                \"value\": 185\n              }\n            ]\n          }\n        ]\n      },\n      \"gridPos\": {\n        \"h\": 11,\n        \"w\": 24,\n        \"x\": 0,\n        \"y\": 24\n      },\n      \"id\": 238,\n      \"options\": {\n        \"cellHeight\": \"sm\",\n        \"footer\": {\n          \"countRows\": false,\n          \"fields\": \"\",\n          \"reducer\": [\n            \"sum\"\n          ],\n          \"show\": false\n        },\n        \"frameIndex\": 0,\n        \"showHeader\": true,\n        \"sortBy\": [\n          {\n            \"desc\": true,\n            \"displayName\": \"Calls\"\n          }\n        ]\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"topk(50,pg_statements_calls_total{instance=~\\\"${instance}:9187\\\"})\",\n          \"format\": \"table\",\n          \"instant\": true,\n          \"legendFormat\": \"Calls\",\n          \"range\": false,\n          \"refId\": \"A\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"topk(50,pg_statements_mean_exec_time{instance=~\\\"${instance}:9187\\\"})\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"legendFormat\": \"Exec\",\n          \"range\": false,\n          \"refId\": \"B\"\n        },\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"editorMode\": \"code\",\n          \"exemplar\": false,\n          \"expr\": \"topk(50,pg_statements_rows_total{instance=~\\\"${instance}:9187\\\"})\",\n          \"format\": \"table\",\n          \"hide\": false,\n          \"instant\": true,\n          \"legendFormat\": \"Total rows\",\n          \"range\": false,\n          \"refId\": \"C\"\n        }\n      ],\n      \"title\": \"SQL statement activity\",\n      \"transformations\": [\n        {\n          \"id\": \"seriesToColumns\",\n          \"options\": {\n            \"byField\": \"queryid\"\n          }\n        },\n        {\n          \"id\": \"organize\",\n          \"options\": {\n            \"excludeByName\": {\n              \"Time 1\": true,\n              \"Time 2\": true,\n              \"Time 3\": true,\n              \"__name__ 1\": true,\n              \"__name__ 2\": true,\n              \"__name__ 3\": true,\n              \"agent\": true,\n              \"agent 2\": true,\n              \"agent 3\": true,\n              \"alerts 1\": true,\n              \"alerts 2\": true,\n              \"alerts 3\": true,\n              \"cluster 1\": true,\n              \"cluster 2\": true,\n              \"cluster 3\": true,\n              \"cluster_name 1\": true,\n              \"cluster_name 2\": true,\n              \"cluster_name 3\": true,\n              \"container 1\": true,\n              \"container 2\": true,\n              \"container 3\": true,\n              \"datname 2\": true,\n              \"datname 3\": true,\n              \"endpoint 1\": true,\n              \"endpoint 2\": true,\n              \"endpoint 3\": true,\n              \"exported_namespace 1\": true,\n              \"exported_namespace 2\": true,\n              \"exported_namespace 3\": true,\n              \"http_scheme 1\": true,\n              \"http_scheme 2\": true,\n              \"http_scheme 3\": true,\n              \"instance 1\": true,\n              \"instance 2\": true,\n              \"instance 3\": true,\n              \"job 1\": true,\n              \"job 2\": true,\n              \"job 3\": true,\n              \"namespace 1\": true,\n              \"namespace 2\": true,\n              \"namespace 3\": true,\n              \"net_host_name 1\": false,\n              \"net_host_name 2\": true,\n              \"net_host_name 3\": true,\n              \"net_host_port 1\": true,\n              \"net_host_port 2\": true,\n              \"net_host_port 3\": true,\n              \"pod 1\": true,\n              \"pod 2\": true,\n              \"pod 3\": true,\n              \"query 1\": true,\n              \"query 2\": true,\n              \"query 3\": true,\n              \"rolname 1\": true,\n              \"rolname 2\": true,\n              \"rolname 3\": true,\n              \"server 1\": true,\n              \"server 2\": true,\n              \"server 3\": true,\n              \"service_instance_id 1\": true,\n              \"service_instance_id 2\": true,\n              \"service_instance_id 3\": true,\n              \"service_name 1\": true,\n              \"service_name 2\": true,\n              \"service_name 3\": true,\n              \"usename 2\": true,\n              \"usename 3\": true\n            },\n            \"indexByName\": {},\n            \"renameByName\": {\n              \"Time 2\": \"\",\n              \"Value #A\": \"Calls\",\n              \"Value #B\": \"Mean exec time\",\n              \"Value #C\": \"Total rows returned\",\n              \"cluster 1\": \"\",\n              \"datname 1\": \"Database\",\n              \"queryid 1\": \"QueryId\",\n              \"server 2\": \"\"\n            }\n          }\n        }\n      ],\n      \"type\": \"table\"\n    }\n  ],\n  \"refresh\": \"\",\n  \"schemaVersion\": 38,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"postgres\",\n    \"db\",\n    \"stats\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(namespace)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(namespace)\",\n          \"refId\": \"Prometheus-namespace-Variable-Query\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"pod\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n          \"refId\": \"Prometheus-pod-Variable-Query\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"/.*pod=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Instance\",\n        \"multi\": false,\n        \"name\": \"instance\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n          \"refId\": \"Prometheus-instance-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*instance=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(datname)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Database\",\n        \"multi\": true,\n        \"name\": \"datname\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(datname)\",\n          \"refId\": \"Prometheus-datname-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Cluster Name\",\n        \"multi\": false,\n        \"name\": \"cluster_name\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n          \"refId\": \"Prometheus-cluster_name-Variable-Query\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*cluster_name=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"filters\": [],\n        \"hide\": 0,\n        \"label\": \"\",\n        \"name\": \"Filters\",\n        \"skipUrlSync\": false,\n        \"type\": \"adhoc\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"utc\",\n  \"title\": \"Queries\",\n  \"uid\": \"000000048\",\n  \"version\": 3,\n  \"weekStart\": \"\"\n}",
                "replication.json": "{\n  \"__inputs\": [\n    {\n      \"name\": \"DS_PROMETHEUS\",\n      \"label\": \"Prometheus\",\n      \"description\": \"\",\n      \"type\": \"datasource\",\n      \"pluginId\": \"prometheus\",\n      \"pluginName\": \"Prometheus\"\n    }\n  ],\n  \"__elements\": {},\n  \"__requires\": [\n    {\n      \"type\": \"grafana\",\n      \"id\": \"grafana\",\n      \"name\": \"Grafana\"\n    },\n    {\n      \"type\": \"datasource\",\n      \"id\": \"prometheus\",\n      \"name\": \"Prometheus\",\n      \"version\": \"1.0.0\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"stat\",\n      \"name\": \"Stat\",\n      \"version\": \"\"\n    },\n    {\n      \"type\": \"panel\",\n      \"id\": \"timeseries\",\n      \"name\": \"Time series\",\n      \"version\": \"\"\n    }\n  ],\n  \"annotations\": {\n    \"list\": [\n      {\n        \"builtIn\": 1,\n        \"datasource\": {\n          \"type\": \"datasource\",\n          \"uid\": \"grafana\"\n        },\n        \"enable\": true,\n        \"hide\": true,\n        \"iconColor\": \"rgba(0, 211, 255, 1)\",\n        \"name\": \"Annotations & Alerts\",\n        \"target\": {\n          \"limit\": 100,\n          \"matchAny\": false,\n          \"tags\": [],\n          \"type\": \"dashboard\"\n        },\n        \"type\": \"dashboard\"\n      }\n    ]\n  },\n  \"description\": \"This dashboard works with StackGres\",\n  \"editable\": true,\n  \"fiscalYearStartMonth\": 0,\n  \"graphTooltip\": 0,\n  \"id\": null,\n  \"links\": [],\n  \"liveNow\": false,\n  \"panels\": [\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"0\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 3,\n        \"x\": 0,\n        \"y\": 0\n      },\n      \"id\": 4,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"background\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"mean\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"count(pg_replication_slots_active{instance=~\\\"${instance}:9187\\\"}==1)\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Active Replication Slots\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"0\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 3,\n        \"x\": 3,\n        \"y\": 0\n      },\n      \"id\": 2,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"background\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"count(pg_replication_status_lag_size{instance=~\\\"${instance}:9187\\\", state=\\\"streaming\\\"} and on (instance)(pg_replication_is_replica == 0))\",\n          \"interval\": \"\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Active Replica Nodes\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"text\": \"N/A\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 6,\n        \"x\": 6,\n        \"y\": 0\n      },\n      \"id\": 6,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"mean\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_wal_position_bytes{instance=~\\\"${instance}:9187\\\"}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Current LSN\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"thresholds\"\n          },\n          \"mappings\": [\n            {\n              \"options\": {\n                \"match\": \"null\",\n                \"result\": {\n                  \"color\": \"green\",\n                  \"index\": 0,\n                  \"text\": \"0\"\n                }\n              },\n              \"type\": \"special\"\n            }\n          ],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"#299c46\",\n                \"value\": null\n              },\n              {\n                \"color\": \"#C4162A\",\n                \"value\": 1\n              }\n            ]\n          },\n          \"unit\": \"none\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 3,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 0\n      },\n      \"id\": 10,\n      \"links\": [],\n      \"maxDataPoints\": 100,\n      \"options\": {\n        \"colorMode\": \"none\",\n        \"graphMode\": \"none\",\n        \"justifyMode\": \"auto\",\n        \"orientation\": \"horizontal\",\n        \"reduceOptions\": {\n          \"calcs\": [\n            \"lastNotNull\"\n          ],\n          \"fields\": \"\",\n          \"values\": false\n        },\n        \"text\": {},\n        \"textMode\": \"auto\"\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"count(pg_replication_slots_active{instance=~\\\"${instance}:9187\\\"}==0)\",\n          \"format\": \"time_series\",\n          \"legendFormat\": \"\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Inactive Replication Slots\",\n      \"type\": \"stat\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              },\n              {\n                \"color\": \"red\",\n                \"value\": 80\n              }\n            ]\n          },\n          \"unit\": \"s\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 14,\n        \"w\": 12,\n        \"x\": 0,\n        \"y\": 3\n      },\n      \"id\": 14,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_replication_lag{cluster_name=\\\"$cluster_name\\\"} and on (instance)(pg_replication_is_replica == 1)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Replication lag in pod {{pod}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Replication lag (seconds)\",\n      \"type\": \"timeseries\"\n    },\n    {\n      \"datasource\": {\n        \"type\": \"prometheus\",\n        \"uid\": \"${DS_PROMETHEUS}\"\n      },\n      \"fieldConfig\": {\n        \"defaults\": {\n          \"color\": {\n            \"mode\": \"palette-classic\"\n          },\n          \"custom\": {\n            \"axisCenteredZero\": false,\n            \"axisColorMode\": \"text\",\n            \"axisLabel\": \"\",\n            \"axisPlacement\": \"auto\",\n            \"barAlignment\": 0,\n            \"drawStyle\": \"line\",\n            \"fillOpacity\": 10,\n            \"gradientMode\": \"none\",\n            \"hideFrom\": {\n              \"legend\": false,\n              \"tooltip\": false,\n              \"viz\": false\n            },\n            \"lineInterpolation\": \"linear\",\n            \"lineWidth\": 1,\n            \"pointSize\": 5,\n            \"scaleDistribution\": {\n              \"type\": \"linear\"\n            },\n            \"showPoints\": \"never\",\n            \"spanNulls\": false,\n            \"stacking\": {\n              \"group\": \"A\",\n              \"mode\": \"none\"\n            },\n            \"thresholdsStyle\": {\n              \"mode\": \"off\"\n            }\n          },\n          \"links\": [],\n          \"mappings\": [],\n          \"min\": -1,\n          \"thresholds\": {\n            \"mode\": \"absolute\",\n            \"steps\": [\n              {\n                \"color\": \"green\",\n                \"value\": null\n              }\n            ]\n          },\n          \"unit\": \"bytes\"\n        },\n        \"overrides\": []\n      },\n      \"gridPos\": {\n        \"h\": 14,\n        \"w\": 12,\n        \"x\": 12,\n        \"y\": 3\n      },\n      \"id\": 12,\n      \"options\": {\n        \"legend\": {\n          \"calcs\": [\n            \"mean\",\n            \"lastNotNull\"\n          ],\n          \"displayMode\": \"table\",\n          \"placement\": \"bottom\",\n          \"showLegend\": true\n        },\n        \"tooltip\": {\n          \"mode\": \"multi\",\n          \"sort\": \"none\"\n        }\n      },\n      \"targets\": [\n        {\n          \"datasource\": {\n            \"type\": \"prometheus\",\n            \"uid\": \"${DS_PROMETHEUS}\"\n          },\n          \"expr\": \"pg_replication_status_lag_size{cluster_name=\\\"$cluster_name\\\"} and on (instance)(pg_replication_is_replica == 0)\",\n          \"interval\": \"\",\n          \"legendFormat\": \"Replica: {{application_name}}\",\n          \"refId\": \"A\"\n        }\n      ],\n      \"title\": \"Replication lag size\",\n      \"type\": \"timeseries\"\n    }\n  ],\n  \"refresh\": \"\",\n  \"schemaVersion\": 38,\n  \"style\": \"dark\",\n  \"tags\": [\n    \"postgres\",\n    \"db\",\n    \"stats\"\n  ],\n  \"templating\": {\n    \"list\": [\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(namespace)\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Namespace\",\n        \"multi\": false,\n        \"name\": \"namespace\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(namespace)\",\n          \"refId\": \"Prometheus-namespace-Variable-Query\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n        \"hide\": 0,\n        \"includeAll\": false,\n        \"label\": \"Pod\",\n        \"multi\": false,\n        \"name\": \"pod\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 2,\n        \"regex\": \"/.*pod=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Instance\",\n        \"multi\": false,\n        \"name\": \"instance\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(up{namespace=\\\"$namespace\\\", pod=\\\"$pod\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*instance=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"label_values(datname)\",\n        \"hide\": 0,\n        \"includeAll\": true,\n        \"label\": \"Database\",\n        \"multi\": true,\n        \"name\": \"datname\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"label_values(datname)\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"current\": {},\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"${DS_PROMETHEUS}\"\n        },\n        \"definition\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n        \"hide\": 2,\n        \"includeAll\": false,\n        \"label\": \"Cluster Name\",\n        \"multi\": false,\n        \"name\": \"cluster_name\",\n        \"options\": [],\n        \"query\": {\n          \"query\": \"query_result(pg_up{pod=\\\"$pod\\\"})\",\n          \"refId\": \"StandardVariableQuery\"\n        },\n        \"refresh\": 1,\n        \"regex\": \"/.*cluster_name=\\\"([^\\\":]+).*/\",\n        \"skipUrlSync\": false,\n        \"sort\": 1,\n        \"tagValuesQuery\": \"\",\n        \"tagsQuery\": \"\",\n        \"type\": \"query\",\n        \"useTags\": false\n      },\n      {\n        \"datasource\": {\n          \"type\": \"prometheus\",\n          \"uid\": \"prometheus\"\n        },\n        \"filters\": [],\n        \"hide\": 0,\n        \"label\": \"\",\n        \"name\": \"Filters\",\n        \"skipUrlSync\": false,\n        \"type\": \"adhoc\"\n      }\n    ]\n  },\n  \"time\": {\n    \"from\": \"now-15m\",\n    \"to\": \"now\"\n  },\n  \"timepicker\": {\n    \"refresh_intervals\": [\n      \"5s\",\n      \"10s\",\n      \"30s\",\n      \"1m\",\n      \"5m\",\n      \"15m\",\n      \"30m\",\n      \"1h\",\n      \"2h\",\n      \"1d\"\n    ],\n    \"time_options\": [\n      \"5m\",\n      \"15m\",\n      \"1h\",\n      \"6h\",\n      \"12h\",\n      \"24h\",\n      \"2d\",\n      \"7d\",\n      \"30d\"\n    ]\n  },\n  \"timezone\": \"utc\",\n  \"title\": \"Replication\",\n  \"uid\": \"000000049\",\n  \"version\": 2,\n  \"weekStart\": \"\"\n}"
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:18:09+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresConfig",
                    "stackgres.io/config-name": "stackgres-operator"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:archiving.json": {},
                                "f:connection-pooling.json": {},
                                "f:current-activity.json": {},
                                "f:db-info.json": {},
                                "f:db-objects.json": {},
                                "f:db-os.json": {},
                                "f:integrate-grafana.sh": {},
                                "f:queries.json": {},
                                "f:replication.json": {}
                            },
                            "f:metadata": {
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/config-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"917865c8-90f9-416e-af45-5e86379bc632\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:18:09+00:00"
                    }
                ],
                "name": "stackgres-restapi-grafana-integration",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGConfig",
                        "name": "stackgres-operator",
                        "uid": "917865c8-90f9-416e-af45-5e86379bc632"
                    }
                ],
                "resource_version": "1114",
                "self_link": null,
                "uid": "6bae5505-9db5-4a22-8d3f-66bfe43c209d"
            }
        },
        "stackgres-restapi-nginx": {
            "api_version": null,
            "binary_data": null,
            "data": {
                "nginx.conf": "pid        /tmp/nginx.pid;\nevents{\n}\nerror_log  /dev/stderr  warn;\nhttp {\n    client_body_temp_path /tmp/client_temp;\n    proxy_temp_path       /tmp/proxy_temp_path;\n    fastcgi_temp_path     /tmp/fastcgi_temp;\n    uwsgi_temp_path       /tmp/uwsgi_temp;\n    scgi_temp_path        /tmp/scgi_temp;\n\n    client_max_body_size  20M;\n\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                    '$status $body_bytes_sent \"$http_referer\" '\n                    '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n    access_log  /dev/stdout  main;\n\n    sendfile        on;\n\n    keepalive_timeout  65;\n\n    include /etc/nginx/conf.d/*.conf;\n}\n",
                "stackgres-restapi.template": "map \\$http_host \\$my_forwarded_port {\n  default \\$server_port;\n  \"~^[^\\:]+:(?<p>\\d+)\\$\" \\$p;\n}\nserver {\n  set \\$grafana_embedded '${GRAFANA_EMBEDDED}';\n\n  server_name  localhost;\n\n  listen       9080;\n  listen       9443 ssl http2;\n  ssl_certificate         /etc/operator/certs/tls.crt;\n  ssl_certificate_key     /etc/operator/certs/tls.key;\n  ssl_protocols           TLSv1.2 TLSv1.3;\n  ssl_ciphers             ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;\n  root   /opt/app-root/src;\n  index index.html;\n\n  location /admin/ {\n    try_files \\$uri \\$uri/index.html /admin/index.html;\n  }\n\n  location ~ ^(/|/admin|/admin/)\\$ {\n    return 302 \"\\$scheme://\\$http_host/admin/index.html\";\n  }\n\n  location /grafana-list {\n    if (\\$grafana_embedded != true) {\n      return 404;\n    }\n    add_header Content-Type text/plain;\n    return 200 \"[$(\n  FIRST=true\n  for GRAFANA_DASHBOARD_URL in $GRAFANA_DASHBOARD_URLS\n  do\n    if [ \"$FIRST\" != true ]\n    then\n      printf ,\n    fi\n    printf '{\\\\\"name\\\\\": \\\\\"%s\\\\\", \\\\\"url\\\\\": \\\\\"$scheme://$http_host%s\\\\\"}' \\\n      \"${GRAFANA_DASHBOARD_URL%%:*}\" \\\n      \"${GRAFANA_DASHBOARD_URL#*:}\"\n    FIRST=false\n  done\n)]\";\n  }\n\n  location /grafana {\n    if (\\$grafana_embedded != true) {\n      return 404;\n    }\n    add_header Content-Type text/plain;\n    return 200 \"$(\n  for GRAFANA_DASHBOARD_URL in $GRAFANA_DASHBOARD_URLS\n  do\n    if [ \"${GRAFANA_DASHBOARD_URL%%:*}\" = current-activity ]\n    then\n      printf '$scheme://$http_host%s' \\\n        \"${GRAFANA_DASHBOARD_URL#*:}\"\n      break\n    fi\n  done\n)\";\n  }\n\n  location ~ ^(/|/stackgres|/stackgres/)\\$ {\n    return 302 \"\\$scheme://\\$http_host/admin/index.html\";\n  }\n\n  location ~ ^/stackgres {\n    proxy_redirect off;\n    proxy_http_version                 1.1;\n    proxy_set_header Host              \\$host;\n    proxy_set_header X-Real-IP         \\$remote_addr;\n    proxy_set_header X-Forwarded-For   \\$proxy_add_x_forwarded_for;\n    proxy_set_header X-Forwarded-Proto \\$scheme;\n    proxy_set_header X-Forwarded-Host  \\$host;\n    proxy_set_header X-Forwarded-Port  \\$my_forwarded_port;\n    proxy_set_header X-Forwarded-Server \\$host;\n    proxy_buffers                      4 256k;\n    proxy_buffer_size                  128k;\n    proxy_busy_buffers_size            256k;\n    proxy_pass http://localhost:8080;\n  }\n\n  location / {\n    if (\\$grafana_embedded != true) {\n      return 404;\n    }\n    proxy_set_header Host \\$host;\n    proxy_set_header X-Real-IP \\$remote_addr;\n    proxy_set_header X-Forwarded-Host \\$host;\n    proxy_set_header X-Forwarded-Server \\$host;\n    proxy_set_header X-Forwarded-For \\$proxy_add_x_forwarded_for;\n    index index.html index.htm;\n    proxy_set_header Authorization \"Bearer ${GRAFANA_TOKEN}\";\n    proxy_hide_header X-Frame-Options;\n    proxy_pass \"${GRAFANA_SCHEMA}://${GRAFANA_WEB_HOST}\";\n  }\n\n  location = /favicon.ico {\n    log_not_found off;\n  }\n\n  gzip            on;\n  gzip_vary       on;\n  gzip_proxied    any;\n  gzip_comp_level 6;\n  gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;\n}\n",
                "start-nginx.sh": "#!/bin/sh\n\nif [ \"$SHOW_DEBUG\" = true ]\nthen\n  set -x\nfi\n\nif [ \"$SHOW_DEBUG\" = true ]\nthen\n  cat << EOF\nGRAFANA_EMBEDDED=$GRAFANA_EMBEDDED\nGRAFANA_URL_PATH=$GRAFANA_URL_PATH\nGRAFANA_SCHEMA=$GRAFANA_SCHEMA\nGRAFANA_WEB_HOST=$GRAFANA_WEB_HOST\nGRAFANA_TOKEN=$GRAFANA_TOKEN\"\nEOF\nfi\neval \"cat << NGINX_CONF_EOF\n$(cat /etc/nginx/template.d/stackgres-restapi.template)\nNGINX_CONF_EOF\" > /etc/nginx/conf.d/stackgres-restapi.conf\nif [ \"$SHOW_DEBUG\" = true ]\nthen\n  cat /etc/nginx/conf.d/stackgres-restapi.conf\nfi\nexec nginx -g 'daemon off;'\n"
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:18:09+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresConfig",
                    "stackgres.io/config-name": "stackgres-operator"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:nginx.conf": {},
                                "f:stackgres-restapi.template": {},
                                "f:start-nginx.sh": {}
                            },
                            "f:metadata": {
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/config-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"917865c8-90f9-416e-af45-5e86379bc632\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:18:09+00:00"
                    }
                ],
                "name": "stackgres-restapi-nginx",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGConfig",
                        "name": "stackgres-operator",
                        "uid": "917865c8-90f9-416e-af45-5e86379bc632"
                    }
                ],
                "resource_version": "1113",
                "self_link": null,
                "uid": "bb96a34c-51fe-4736-97d1-9032de4dd6f1"
            }
        },
        "stackgres-templates": {
            "api_version": null,
            "binary_data": null,
            "data": {
                "create-backup.sh": "#!/bin/sh\n\n# Seconds\nBACKUP_TIMEOUT=\"${BACKUP_TIMEOUT:-}\"\nRECONCILIATION_TIMEOUT=\"${RECONCILIATION_TIMEOUT:-300}\"\n# Milliseconds\nRETRY_DELAY=\"${RETRY_DELAY:-1000}\"\n\n. \"$LOCAL_BIN_SHELL_UTILS_PATH\"\n\nrun() {\n  set -e\n\n  echo \"Acquiring lock...\"\n  acquire_lock\n  echo \"Lock acquired\"\n  maintain_lock >> /tmp/try-lock 2>&1 &\n  TRY_LOCK_PID=$!\n\n  true > /tmp/backup-push\n  reconcile_backups &\n  PID=$!\n\n  set +e\n  (\n  set +x\n  while (kill -0 \"$PID\" && kill -0 \"$TRY_LOCK_PID\") 2>/dev/null\n  do\n    true\n  done\n  )\n\n  if kill -0 \"$PID\" 2>/dev/null\n  then\n    tail -n 100 /tmp/try-lock\n    echo \"Lock lost\"\n    kill_with_childs \"$PID\"\n    retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n      {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Lock lost:\\n'; cat /tmp/try-lock; } | to_json_string)\"'}\n      ]'\n    return 1\n  else\n    kill_with_childs \"$TRY_LOCK_PID\"\n    release_lock >> /tmp/try-lock 2>&1\n    echo \"Lock released\"\n    wait \"$PID\"\n    EXIT_CODE=\"$?\"\n    if [ \"$EXIT_CODE\" != 0 ]\n    then\n      echo \"Backup failed\"\n      return 1\n    fi\n  fi\n}\n\nreconcile_backups() {\n  set -e\n\n  if [ -n \"$SCHEDULED_BACKUP_KEY\" ]\n  then\n    BACKUP_NAME=\"${CLUSTER_NAME}-$(date +%Y-%m-%d-%H-%M-%S --utc)\"\n  fi\n\n  BACKUP_CONFIG_RESOURCE_VERSION=\"$(kubectl get \"$BACKUP_CONFIG_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_CONFIG\" --template='{{ .metadata.resourceVersion }}')\"\n  CLUSTER_BACKUP_PATH=\"$(kubectl get \"$CLUSTER_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n    --template=\"{{ if .spec.configurations.backupPath }}{{ .spec.configurations.backupPath }}{{ else }}{{ (index .spec.configurations.backups 0).path }}{{ end }}\")\"\n  BACKUP_ALREADY_COMPLETED=false\n  create_or_update_backup_cr\n  if [ \"$BACKUP_ALREADY_COMPLETED\" = \"true\" ]\n  then\n    echo \"Already completed backup. Nothing to do!\"\n    return\n  fi\n\n  CURRENT_BACKUP_CONFIG=\"$(kubectl get \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" \\\n    --template=\"{{ .status.sgBackupConfig.storage }}\")\"\n\n  set +e\n  BACKUP_START_TIMESTAMP=\"$(date +%s)\"\n  echo \"Retrieving primary and replica\"\n  get_primary_and_replica_pods\n\n  echo \"Performing backup\"\n\n  do_backup\n\n  echo \"Extracting pg_controldata\"\n  extract_controldata\n  if [ \"$?\" != 0 ]\n  then\n    echo \"WARNING: Failed extracting pg_controldata\"\n  fi\n\n  echo \"Listing existing backups\"\n  list_backups\n  if [ \"$?\" != 0 ]\n  then\n    cat /tmp/backup-list\n    echo \"Backups can not be listed after creation\"\n    retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n      {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":\"Backups can not be listed after creation\"}\n      ]'\n    return 1\n  fi\n  if [ \"$BACKUP_CONFIG_RESOURCE_VERSION\" != \"$(kubectl get \"$BACKUP_CONFIG_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_CONFIG\" --template='{{ .metadata.resourceVersion }}')\" ]\n  then\n    cat /tmp/backup-list\n    echo \"Backup configuration '$BACKUP_CONFIG' changed during backup\"\n    retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n      {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$(printf 'Backup configuration %s changed during backup' \"$BACKUP_CONFIG\" | to_json_string)\"'}\n      ]'\n    return 1\n  elif [ \"$CLUSTER_BACKUP_PATH\" != \"$(kubectl get \"$CLUSTER_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template=\"{{ if .spec.configurations.backupPath }}{{ .spec.configurations.backupPath }}{{ else }}{{ (index .spec.configurations.backups 0).path }}{{ end }}\")\" ]\n  then\n    cat /tmp/backup-list\n    echo \"Backup path '$CLUSTER_BACKUP_PATH' changed during backup\"\n    retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n      {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$(printf 'Backup path %s changed during backup' \"$CLUSTER_BACKUP_PATH\" | to_json_string)\"'}\n      ]'\n    return 1\n  fi\n  cat /tmp/backup-list | tr -d '[]' | sed 's/},{/}|{/g' | tr '|' '\\n' \\\n    | grep '\"backup_name\"' \\\n    > /tmp/existing-backups\n  cat /tmp/backup-list | tr -d '[]' | sed 's/},{/}|{/g' | tr '|' '\\n' \\\n    | grep '\"backup_name\":\"'\"$CURRENT_BACKUP_NAME\"'\"' | tr -d '{}\"' | tr ',' '\\n' > /tmp/current-backup\n  if ! grep -q \"^backup_name:${CURRENT_BACKUP_NAME}$\" /tmp/current-backup\n  then\n    cat /tmp/backup-list\n    echo \"Backup '$CURRENT_BACKUP_NAME' was not found after creation can not reconcile backups CRs\"\n    retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n      {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$(printf \"Backup '%s' was not found after creation can not reconcile backups CRs\" \"$CURRENT_BACKUP_NAME\" | to_json_string)\"'}\n      ]'\n    return 1\n  fi\n\n  echo \"Updating backup CR as completed\"\n  set_backup_completed\n  echo \"Backup CR updated as completed\"\n  echo \"Backup completed\"\n\n  RECONCILIATION_START_TIMESTAMP=\"$(date +%s)\"\n  echo \"Starting backups reconciliation\"\n  echo \"Retain backups\"\n  get_backup_crs\n\n  retain_backups\n  if [ \"$?\" = 0 ]\n  then\n    echo \"Retain of backups completed\"\n  else\n    echo \"Retain of backups failed\"\n  fi\n\n  echo \"Listing existing backups after retain\"\n  list_backups_for_reconciliation\n  if [ \"$?\" != 0 ]\n  then\n    cat /tmp/backup-list\n    echo \"Backups can not be listed before retention\"\n    return\n  fi\n  cat /tmp/backup-list | tr -d '[]' | sed 's/},{/}|{/g' | tr '|' '\\n' \\\n    | grep '\"backup_name\"' \\\n    > /tmp/existing-backups\n  cat /tmp/backup-list | tr -d '[]' | sed 's/},{/}|{/g' | tr '|' '\\n' \\\n    | grep '\"backup_name\":\"'\"$CURRENT_BACKUP_NAME\"'\"' | tr -d '{}\"' | tr ',' '\\n' > /tmp/current-backup\n  if ! grep -q \"^backup_name:${CURRENT_BACKUP_NAME}$\" /tmp/current-backup\n  then\n    cat /tmp/backup-list\n    echo \"Backup '$CURRENT_BACKUP_NAME' was not found after creation can not reconcile backups CRs\"\n    return\n  fi\n\n  echo \"Reconcile backup CRs\"\n  reconcile_backup_crs\n  echo \"Reconciliation of backups completed\"\n}\n\nget_backup_crs() {\n  BACKUP_CR_TEMPLATE=\"{{ range .items }}\"\n  BACKUP_CR_TEMPLATE=\"${BACKUP_CR_TEMPLATE}{{ .spec.sgCluster }}\"\n  BACKUP_CR_TEMPLATE=\"${BACKUP_CR_TEMPLATE}:{{ .metadata.namespace }}\"\n  BACKUP_CR_TEMPLATE=\"${BACKUP_CR_TEMPLATE}:{{ .metadata.name }}\"\n  BACKUP_CR_TEMPLATE=\"${BACKUP_CR_TEMPLATE}:{{ with .status.process.status }}{{ . }}{{ end }}\"\n  BACKUP_CR_TEMPLATE=\"${BACKUP_CR_TEMPLATE}:{{ with .status.internalName }}{{ . }}{{ end }}\"\n  BACKUP_CR_TEMPLATE=\"${BACKUP_CR_TEMPLATE}:{{ with .status.process.jobPod }}{{ . }}{{ end }}\"\n  BACKUP_CR_TEMPLATE=\"${BACKUP_CR_TEMPLATE}:{{ with .metadata.labels }}{{ with index . \\\"$SCHEDULED_BACKUP_KEY\\\" }}{{ . }}{{ end }}{{ end }}\"\n  BACKUP_CR_TEMPLATE=\"${BACKUP_CR_TEMPLATE}:{{ if .spec.managedLifecycle }}true{{ else }}false{{ end }}\"\n  BACKUP_CR_TEMPLATE=\"${BACKUP_CR_TEMPLATE}:{{ if .status.process.managedLifecycle }}true{{ else }}false{{ end }}\"\n  BACKUP_CR_TEMPLATE=\"${BACKUP_CR_TEMPLATE}{{ printf \"'\"\\n\"'\" }}{{ end }}\"\n  kubectl get \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \\\n    --template=\"$BACKUP_CR_TEMPLATE\" > /tmp/all-backups-in-namespace\n  grep \"^$CLUSTER_NAME:\" /tmp/all-backups-in-namespace > /tmp/backups-in-namespace\n  true > /tmp/all-backups\n  local CLUSTER_BACKUP_NAMESPACE\n  for CLUSTER_BACKUP_NAMESPACE in $CLUSTER_BACKUP_NAMESPACES\n  do\n    kubectl get \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_BACKUP_NAMESPACE\" \\\n      --template=\"$BACKUP_CR_TEMPLATE\" >> /tmp/all-backups\n  done\n  grep \"^$CLUSTER_NAMESPACE.$CLUSTER_NAME:\" /tmp/all-backups > /tmp/backups-out-of-namespace\n  cat /tmp/backups-in-namespace /tmp/backups-out-of-namespace > /tmp/backups\n}\n\ncreate_or_update_backup_cr() {\n  BACKUP_CONFIG_YAML=$(cat << BACKUP_CONFIG_YAML_EOF\n    baseBackups:\n      compression: \"$COMPRESSION\"\n    storage:\n      type: \"{{ .$STORAGE_TEMPLATE_PATH.type }}\"\n      {{- with .$STORAGE_TEMPLATE_PATH.s3 }}\n      s3:\n        bucket: \"{{ .bucket }}\"\n        {{ with .path }}path: \"{{ . }}\"{{ end }}\n        awsCredentials:\n          secretKeySelectors:\n            accessKeyId:\n              key: \"{{ .awsCredentials.secretKeySelectors.accessKeyId.key }}\"\n              name: \"{{ .awsCredentials.secretKeySelectors.accessKeyId.name }}\"\n            secretAccessKey:\n              key: \"{{ .awsCredentials.secretKeySelectors.secretAccessKey.key }}\"\n              name: \"{{ .awsCredentials.secretKeySelectors.secretAccessKey.name }}\"\n        {{ with .region }}region: \"{{ . }}\"{{ end }}\n        {{ with .storageClass }}storageClass: \"{{ . }}\"{{ end }}\n      {{- end }}\n      {{- with .$STORAGE_TEMPLATE_PATH.s3Compatible }}\n      s3Compatible:\n        bucket: \"{{ .bucket }}\"\n        {{ with .path }}path: \"{{ . }}\"{{ end }}\n        awsCredentials:\n          secretKeySelectors:\n            accessKeyId:\n              key: \"{{ .awsCredentials.secretKeySelectors.accessKeyId.key }}\"\n              name: \"{{ .awsCredentials.secretKeySelectors.accessKeyId.name }}\"\n            secretAccessKey:\n              key: \"{{ .awsCredentials.secretKeySelectors.secretAccessKey.key }}\"\n              name: \"{{ .awsCredentials.secretKeySelectors.secretAccessKey.name }}\"\n        {{ with .region }}region: \"{{ . }}\"{{ end }}\n        {{ with .endpoint }}endpoint: \"{{ . }}\"{{ end }}\n        {{ with .enablePathStyleAddressing }}enablePathStyleAddressing: {{ . }}{{ end }}\n        {{ with .storageClass }}storageClass: \"{{ . }}\"{{ end }}\n      {{- end }}\n      {{- with .$STORAGE_TEMPLATE_PATH.gcs }}\n      gcs:\n        bucket: \"{{ .bucket }}\"\n        {{ with .path }}path: \"{{ . }}\"{{ end }}\n        gcpCredentials:\n          {{- if .gcpCredentials.fetchCredentialsFromMetadataService }}\n          fetchCredentialsFromMetadataService: true\n          {{- else }}\n          secretKeySelectors:\n            serviceAccountJSON:\n              key: \"{{ .gcpCredentials.secretKeySelectors.serviceAccountJSON.key }}\"\n              name: \"{{ .gcpCredentials.secretKeySelectors.serviceAccountJSON.name }}\"\n          {{- end }}\n      {{- end }}\n      {{- with .$STORAGE_TEMPLATE_PATH.azureBlob }}\n      azureBlob:\n        bucket: \"{{ .bucket }}\"\n        {{ with .path }}path: \"{{ . }}\"{{ end }}\n        azureCredentials:\n          secretKeySelectors:\n            storageAccount:\n              key: \"{{ .azureCredentials.secretKeySelectors.storageAccount.key }}\"\n              name: \"{{ .azureCredentials.secretKeySelectors.storageAccount.name }}\"\n            accessKey:\n              key: \"{{ .azureCredentials.secretKeySelectors.accessKey.key }}\"\n              name: \"{{ .azureCredentials.secretKeySelectors.accessKey.name }}\"\n      {{- end }}\nBACKUP_CONFIG_YAML_EOF\n  )\nBACKUP_STATUS_YAML=$(cat << BACKUP_STATUS_YAML_EOF\nstatus:\n  backupPath: \"$CLUSTER_BACKUP_PATH\"\n  process:\n    jobPod: \"$POD_NAME\"\n  sgBackupConfig:\n$(kubectl get \"$BACKUP_CONFIG_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_CONFIG\" --template=\"$BACKUP_CONFIG_YAML\")\nBACKUP_STATUS_YAML_EOF\n  )\n\n  if ! kubectl get \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" -o name >/dev/null 2>&1\n  then\n    echo \"Creating backup CR\"\n    if ! cat << EOF | kubectl create -f - -o json > /tmp/backup-create\napiVersion: $BACKUP_CRD_APIVERSION\nkind: $BACKUP_CRD_KIND\nmetadata:\n  namespace: \"$CLUSTER_NAMESPACE\"\n  name: \"$BACKUP_NAME\"\n  annotations:\n    $SCHEDULED_BACKUP_KEY: \"$RIGHT_VALUE\"\n  labels:\n    $SCHEDULED_BACKUP_KEY: \"$RIGHT_VALUE\"\n    $SCHEDULED_BACKUP_JOB_NAME_KEY: \"$SCHEDULED_BACKUP_JOB_NAME\"\nspec:\n  sgCluster: \"$CLUSTER_NAME\"\n  managedLifecycle: true\n$BACKUP_STATUS_YAML\nEOF\n    then\n      cat /tmp/backup-create\n      echo\n      exit 1\n    fi\n    cat /tmp/backup-create\n    echo\n    BACKUP_UID=\"$(jq -r .metadata.uid /tmp/backup-create)\"\n  else\n    if ! kubectl get \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --template=\"{{ .status.process.status }}\" \\\n      | grep -q \"^$BACKUP_PHASE_COMPLETED$\"\n    then\n      DRY_RUN_CLIENT=$(kubectl version --client=true -o json | jq -r 'if (.clientVersion.minor | tonumber) < 18 then \"true\" else \"client\" end')\n      echo \"Updating backup CR\"\n      if ! kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" -o json --type merge --patch \"$(\n        (\n          kubectl get \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" -o yaml\n          echo \"$BACKUP_STATUS_YAML\"\n        ) | kubectl create --dry-run=\"$DRY_RUN_CLIENT\" -f - -o json)\" > /tmp/backup-update 2>&1\n      then\n        cat /tmp/backup-update\n        echo\n        exit 1\n      fi\n      cat /tmp/backup-update\n      echo\n    else\n      BACKUP_ALREADY_COMPLETED=true\n    fi\n  fi\n}\n\nget_primary_and_replica_pods() {\n  kubectl get pod -n \"$CLUSTER_NAMESPACE\" -l \"${CLUSTER_LABELS},${PATRONI_ROLE_KEY}=${PATRONI_PRIMARY_ROLE}\" \\\n    --template '{{ range .items }}{{ printf \"%s\\n\" .metadata.name }}{{ end }}' > /tmp/current-primary\n  kubectl get pod -n \"$CLUSTER_NAMESPACE\" -l \"${CLUSTER_LABELS},${PATRONI_ROLE_KEY}=${PATRONI_REPLICA_ROLE}\" \\\n    --template '{{ range .items }}{{ printf \"%s\\n\" .metadata.name }}{{ end }}' \\\n    | head -n 1 > /tmp/current-replica-or-primary\n  if [ ! -s /tmp/current-primary ]\n  then\n    retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n      {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":\"Unable to find primary, backup aborted\"}\n      ]'\n    kubectl get pod -n \"$CLUSTER_NAMESPACE\" -l \"${CLUSTER_LABELS}\" >&2\n    echo \"Unable to find primary, backup aborted\"\n    exit 1\n  fi\n  kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$(cat /tmp/current-primary)\" \\\n    --template \"{{ range .spec.volumes }}{{ if eq .name \\\"${CLUSTER_NAME}-data\\\" }}{{ .persistentVolumeClaim.claimName }}{{ end }}{{ end }}\" > /tmp/current-primary-pvc\n\n  if [ ! -s /tmp/current-replica-or-primary ]\n  then\n    cat /tmp/current-primary > /tmp/current-replica-or-primary\n    echo \"Primary is $(cat /tmp/current-primary)\"\n    echo \"Replica not found, primary will be used for cleanups\"\n  else\n    echo \"Primary is $(cat /tmp/current-primary)\"\n    echo \"Replica is $(cat /tmp/current-replica-or-primary)\"\n  fi\n}\n\ndo_backup() {\n  if [ -f /tmp/backup-create ]\n  then\n    BACKUP_IS_PERMANENT=false\n  else\n    BACKUP_IS_PERMANENT=\"$(jq '.spec | if (has(\"managedLifecycle\") | not) or .managedLifecycle then false else true end' /tmp/backup-update)\"\n  fi\n\n  if [ \"$USE_VOLUME_SNAPSHOT\" = true ]\n  then\n    echo \"Performing full backup stored on VolumeSnapshot\"\n    BACKUP_START_TIME=\"$(date_iso8601)\"\n    rm -f /tmp/backup-psql\n    mkfifo /tmp/backup-psql\n    sh -c 'echo $$ > /tmp/backup-tail-pid; exec tail -f /tmp/backup-psql' \\\n      | kubectl exec -i -n \"$CLUSTER_NAMESPACE\" \"$(cat /tmp/current-primary)\" -c \"$PATRONI_CONTAINER_NAME\" \\\n        -- psql -v ON_ERROR_STOP=1 -t -A > /tmp/backup-psql-out 2>&1 &\n    echo $! > /tmp/backup-psql-pid\n\n    cat << EOF >> /tmp/backup-psql\nSELECT 'Backup bootstrap';\nEOF\n    until grep -qxF 'Backup bootstrap' /tmp/backup-psql-out \\\n      || ! kill -0 \"$(cat /tmp/backup-psql-pid)\"\n    do\n      sleep 1\n    done\n    cat /tmp/backup-psql-out\n    if ! kill -0 \"$(cat /tmp/backup-psql-pid)\"\n    then\n      echo 'Backup failed while connection to primary'\n      retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n        {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Backup failed while connection to primary:\\n'; cat /tmp/backup-psql-out; } | to_json_string)\"'}\n        ]'\n      kill \"$(cat /tmp/backup-tail-pid)\" || true\n      exit 1\n    fi\n    truncate -s 0 /tmp/backup-psql-out\n\n    cat << EOF >> /tmp/backup-psql\nSET client_min_messages TO WARNING;\nSELECT\n  (SELECT system_identifier FROM pg_control_system()),\n  current_setting('server_version_num')::int,\n  pg_is_in_recovery(),\n  CASE WHEN pg_is_in_recovery() THEN upper(\n    lpad(to_hex((SELECT timeline_id FROM pg_control_checkpoint()))::text, 8, '0')\n    || lpad(to_hex(lsn_high)::text, 8, '0')\n    || lpad(to_hex(lsn_low - 1\n      / (SELECT bytes_per_wal_segment::bigint FROM pg_control_init()))::text, 8, '0'))\n  ELSE (pg_walfile_name_offset(lsn)).file_name END,\n  (lsn_high << 32) | lsn_low\nFROM (SELECT \n  lsn,\n  ('x' || lower(lpad(substring(lsn::text from '^[^/]+'), 8, '0')))::bit(32)::bigint AS lsn_high,\n  ('x' || lower(lpad(substring(lsn::text from '[^/]+$'), 8, '0')))::bit(32)::bigint AS lsn_low\n  FROM pg_backup_start(label => '$BACKUP_NAME', fast => $FAST_VOLUME_SNAPSHOT) AS lsn) AS lsn;\nSELECT 'Backup started';\nEOF\n    until grep -qxF 'Backup started' /tmp/backup-psql-out \\\n      || ! kill -0 \"$(cat /tmp/backup-psql-pid)\"\n    do\n      sleep 1\n    done\n    cat /tmp/backup-psql-out\n    if ! kill -0 \"$(cat /tmp/backup-psql-pid)\"\n    then\n      echo 'Backup failed while running pg_backup_start'\n      retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n        {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Backup failed while running pg_backup_start:\\n'; cat /tmp/backup-psql-out; } | to_json_string)\"'}\n        ]'\n      kill \"$(cat /tmp/backup-tail-pid)\" || true\n      exit 1\n    fi\n    head -n 2 /tmp/backup-psql-out | tail -n 1 > /tmp/backup-start\n    truncate -s 0 /tmp/backup-psql-out\n\n    if ! cat << EOF | kubectl create -f - > /tmp/backup-snapshot 2>&1\napiVersion: snapshot.storage.k8s.io/v1\nkind: VolumeSnapshot\nmetadata:\n  namespace: $CLUSTER_NAMESPACE\n  name: $BACKUP_NAME\n  ownerReferences:\n  - apiVersion: $BACKUP_CRD_APIVERSION\n    kind: $BACKUP_CRD_KIND\n    name: $BACKUP_NAME\n    uid: $BACKUP_UID\nspec:\n  volumeSnapshotClassName: $([ \"x$VOLUME_SNAPSHOT_STORAGE_CLASS\" = x ] && printf null || printf %s \"$VOLUME_SNAPSHOT_STORAGE_CLASS\")\n  source:\n    persistentVolumeClaimName: $(cat /tmp/current-primary-pvc)\nEOF\n    then\n      cat /tmp/backup-snapshot\n      echo 'Backup failed while creating VolumeSnapshot'\n      retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n        {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Backup failed while creating VolumeSnapshot:\\n'; cat /tmp/backup-snapshot; } | to_json_string)\"'}\n        ]'\n      kill \"$(cat /tmp/backup-tail-pid)\" || true\n      exit 1\n    fi\n    cat /tmp/backup-snapshot\n    \n    echo \"Waiting for VolumeSnapshot to be ready\"\n    while true\n    do\n      if ! kubectl get \"$VOLUME_SNAPSHOT_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" -o json > /tmp/backup-volumesnapshot 2>&1\n      then\n        cat /tmp/backup-volumesnapshot\n        echo 'Backup failed while waiting VolumeSpanshot to be ready'\n        retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n          {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Backup failed while waiting VolumeSpanshot to be ready:\\n'; cat /tmp/backup-volumesnapshot; } | to_json_string)\"'}\n          ]'\n        kill \"$(cat /tmp/backup-tail-pid)\" || true\n        exit 1\n      fi\n      if [ \"$(jq -r .status.readyToUse /tmp/backup-volumesnapshot)\" = true ]\n      then\n        echo \"VolumeSnapshot ready\"\n        break\n      fi\n      if [ \"x$(jq -r 'if .status.error != null then .status.error else \"\" end' /tmp/backup-volumesnapshot)\" != x ]\n      then\n        cat /tmp/backup-volumesnapshot\n        echo 'Backup failed due to error in VolumeSnapshot'\n        retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n          {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$(jq '\"Backup failed due to error in VolumeSnapshot: \" + .status.error' /tmp/backup-volumesnapshot)\"'}\n          ]'\n        kill \"$(cat /tmp/backup-tail-pid)\" || true\n        exit 1\n      fi\n      if is_timeout_expired BACKUP\n      then\n        echo \"Backup failed due to timeout ($BACKUP_TIMEOUT) while waiting VolumeSpanshot to be ready\"\n        retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n          {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"Backup failed due to timeout ($BACKUP_TIMEOUT) while waiting VolumeSpanshot to be ready\"'}\n          ]'\n        kill \"$(cat /tmp/backup-tail-pid)\" || true\n        exit 1\n      fi\n      sleep 1\n    done\n\n    cat << EOF >> /tmp/backup-psql\nSET client_min_messages TO WARNING;\nSELECT\n  (lsn_high << 32) | lsn_low,\n  CASE WHEN labelfile IS NULL OR labelfile = '' THEN '' ELSE regexp_replace(encode(labelfile::bytea, 'base64'), '[\\n\\r]+', '', 'g' ) END,\n  CASE WHEN spcmapfile IS NULL OR spcmapfile = '' THEN '' ELSE regexp_replace(encode(spcmapfile::bytea, 'base64'), '[\\n\\r]+', '', 'g' ) END\nFROM (SELECT \n  lsn,\n  ('x' || lower(lpad(substring(lsn::text from '^[^/]+'), 8, '0')))::bit(32)::bigint AS lsn_high,\n  ('x' || lower(lpad(substring(lsn::text from '[^/]+$'), 8, '0')))::bit(32)::bigint AS lsn_low,\n  labelfile,\n  spcmapfile\n  FROM pg_backup_stop(wait_for_archive => true)) AS lsn;\nSELECT 'Backup stopped';\nEOF\n    until grep -qxF 'Backup stopped' /tmp/backup-psql-out \\\n      || ! kill -0 \"$(cat /tmp/backup-psql-pid)\"\n    do\n      sleep 1\n    done\n    cat /tmp/backup-psql-out\n    if ! kill -0 \"$(cat /tmp/backup-psql-pid)\"\n    then\n      echo 'Backup failed while running pg_backup_stop'\n      retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n        {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Backup failed while running pg_backup_stop:\\n'; cat /tmp/backup-stop; } | to_json_string)\"'}\n        ]'\n      kill \"$(cat /tmp/backup-tail-pid)\" || true\n      exit 1\n    fi\n    head -n 2 /tmp/backup-psql-out | tail -n 1 > /tmp/backup-stop\n    truncate -s 0 /tmp/backup-psql-out\n\n    kill \"$(cat /tmp/backup-tail-pid)\" || true\n    BACKUP_END_TIME=\"$(date_iso8601)\"\n\n    echo \"Creating backup entry for wal-g marked with \\\"volume-snapshot\\\" user data\"\n\n    CURRENT_BACKUP_NAME=\"base_$(cut -d '|' -f 4 /tmp/backup-start)\"\n    VOLUME_SNAPSHOT_RESTORE_SIZE=\"$(jq '.status.restoreSize | . as $v|[splits(\"[eEinumkKMGTP]+\")][0]|. as $ta|tonumber as $a|$v[($ta|length):($v|length)] as $f\n      | if $f == \"\" then $a\n        elif $f == \"Ki\" then $a * 1024\n        elif $f == \"Mi\" then $a * 1024 * 1024\n        elif $f == \"Gi\" then $a * 1024 * 1024 * 1024\n        elif $f == \"Ti\" then $a * 1024 * 1024 * 1024 * 1024\n        elif $f == \"Pi\" then $a * 1024 * 1024 * 1024 * 1024 * 1024\n        elif $f == \"Ei\" then $a * 1024 * 1024 * 1024 * 1024 * 1024 * 1024\n        elif $f == \"m\" then $a / 1000\n        else . end' /tmp/backup-volumesnapshot)\"\n    if ! echo true | jq -c '{\n        LSN: $LSN,\n        PgVersion: $PgVersion,\n        FinishLSN: $FinishLSN,\n        SystemIdentifier: $SystemIdentifier,\n        UncompressedSize: $UncompressedSize,\n        CompressedSize: $CompressedSize,\n        Spec: null,\n        Version: 2,\n        StartTime: $StartTime,\n        FinishTime: $FinishTime,\n        DateFmt: \"%Y-%m-%dT%H:%M:%S.%fZ\",\n        Hostname: $Hostname,\n        DataDir: $DataDir,\n        IsPermanent: $IsPermanent\n      }' \\\n        --argjson LSN \"$(cut -d '|' -f 5 /tmp/backup-start)\" \\\n        --argjson PgVersion \"$(cut -d '|' -f 2 /tmp/backup-start)\" \\\n        --argjson FinishLSN \"$(cut -d '|' -f 1 /tmp/backup-stop)\" \\\n        --argjson SystemIdentifier \"$(cut -d '|' -f 1 /tmp/backup-start)\" \\\n        --argjson UncompressedSize \"$VOLUME_SNAPSHOT_RESTORE_SIZE\" \\\n        --argjson CompressedSize \"$VOLUME_SNAPSHOT_RESTORE_SIZE\" \\\n        --arg StartTime \"$BACKUP_START_TIME\" \\\n        --arg FinishTime \"$BACKUP_END_TIME\" \\\n        --arg Hostname \"$(cat /tmp/current-primary)\" \\\n        --arg DataDir \"$PG_DATA_PATH\" \\\n        --argjson IsPermanent \"$BACKUP_IS_PERMANENT\" > \"/tmp/${CURRENT_BACKUP_NAME}_backup_stop_sentinel.json\" 2>&1\n    then\n      cat \"/tmp/${CURRENT_BACKUP_NAME}_backup_stop_sentinel.json\"\n      echo 'Backup failed while creating the sentinel JSON for wal-g'\n      retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n        {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Backup failed while creating the JSON for wal-g:\\n'; cat \"/tmp/${CURRENT_BACKUP_NAME}_backup_stop_sentinel.json\"; } | to_json_string)\"'}\n        ]'\n      exit 1\n    fi\n    cat \"/tmp/${CURRENT_BACKUP_NAME}_backup_stop_sentinel.json\"\n\n    if ! echo true | jq -c '{\n        start_time: $start_time,\n        finish_time: $finish_time,\n        date_fmt: \"%Y-%m-%dT%H:%M:%S.%fZ\",\n        hostname: $hostname,\n        data_dir: $data_dir,\n        pg_version: $pg_version,\n        start_lsn: $start_lsn,\n        finish_lsn: $finish_lsn,\n        is_permanent: $is_permanent,\n        system_identifier: $system_identifier,\n        uncompressed_size: $uncompressed_size,\n        compressed_size: $compressed_size,\n        user_data: \"volume-snapshot\"\n      }' \\\n        --argjson start_lsn \"$(cut -d '|' -f 5 /tmp/backup-start)\" \\\n        --argjson pg_version \"$(cut -d '|' -f 2 /tmp/backup-start)\" \\\n        --argjson finish_lsn \"$(cut -d '|' -f 1 /tmp/backup-stop)\" \\\n        --argjson system_identifier \"$(cut -d '|' -f 1 /tmp/backup-start)\" \\\n        --argjson uncompressed_size \"$VOLUME_SNAPSHOT_RESTORE_SIZE\" \\\n        --argjson compressed_size \"$VOLUME_SNAPSHOT_RESTORE_SIZE\" \\\n        --arg start_time \"$BACKUP_START_TIME\" \\\n        --arg finish_time \"$BACKUP_END_TIME\" \\\n        --arg hostname \"$(cat /tmp/current-primary)\" \\\n        --arg data_dir \"$PG_DATA_PATH\" \\\n        --argjson is_permanent \"$BACKUP_IS_PERMANENT\" > \"/tmp/${CURRENT_BACKUP_NAME}_metadata.json\"  2>&1\n    then\n      cat \"/tmp/${CURRENT_BACKUP_NAME}_metadata.json\"\n      echo 'Backup failed while creating the metadata JSON for wal-g'\n      retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n        {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Backup failed while creating the metadata JSON for wal-g:\\n'; cat \"/tmp/${CURRENT_BACKUP_NAME}_metadata.json\"; } | to_json_string)\"'}\n        ]'\n      exit 1\n    fi\n    cat \"/tmp/${CURRENT_BACKUP_NAME}_metadata.json\"\n\n    if ! cat << EOF | kubectl exec -i -n \"$CLUSTER_NAMESPACE\" \"$(cat /tmp/current-primary)\" -c \"$PATRONI_CONTAINER_NAME\" \\\n      -- sh -e $SHELL_XTRACE > /tmp/backup-push-volume-snapshot 2>&1\ncat << 'INNER_EOF' > /tmp/${CURRENT_BACKUP_NAME}_backup_stop_sentinel.json\n$(cat /tmp/${CURRENT_BACKUP_NAME}_backup_stop_sentinel.json)\nINNER_EOF\ncat << 'INNER_EOF' > /tmp/${CURRENT_BACKUP_NAME}_metadata.json\n$(cat /tmp/${CURRENT_BACKUP_NAME}_metadata.json)\nINNER_EOF\ncat << 'INNER_EOF' > /tmp/${CURRENT_BACKUP_NAME}_files_metadata.json\n{\"Files\":{}}\nINNER_EOF\nexec-with-env \"$BACKUP_ENV\" \\\n  -- $(get_timeout_command BACKUP) wal-g st put --no-compress \"/tmp/${CURRENT_BACKUP_NAME}_backup_stop_sentinel.json\" \"basebackups_005/${CURRENT_BACKUP_NAME}_backup_stop_sentinel.json\"\nexec-with-env \"$BACKUP_ENV\" \\\n  -- $(get_timeout_command BACKUP) wal-g st put --no-compress \"/tmp/${CURRENT_BACKUP_NAME}_metadata.json\" \"basebackups_005/${CURRENT_BACKUP_NAME}/metadata.json\"\nexec-with-env \"$BACKUP_ENV\" \\\n  -- $(get_timeout_command BACKUP) wal-g st put --no-compress \"/tmp/${CURRENT_BACKUP_NAME}_files_metadata.json\" \"basebackups_005/${CURRENT_BACKUP_NAME}/files_metadata.json\"\nrm \\\n  \"/tmp/${CURRENT_BACKUP_NAME}_backup_stop_sentinel.json\" \\\n  \"/tmp/${CURRENT_BACKUP_NAME}_metadata.json\" \\\n  \"/tmp/${CURRENT_BACKUP_NAME}_files_metadata.json\"\nEOF\n    then\n      cat /tmp/backup-push-volume-snapshot\n      echo 'Backup failed while pushing the JSON files for wal-g'\n      retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n        {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Backup failed while pushing the JSON files for wal-g:\\n'; cat /tmp/backup-push-volume-snapshot; } | to_json_string)\"'}\n        ]'\n      exit 1\n    fi\n    cat /tmp/backup-push-volume-snapshot\n\n    return\n  fi\n\n  echo \"Performing full backup stored on SGStorageObject\"\n\n  if ! cat << EOF | kubectl exec -i -n \"$CLUSTER_NAMESPACE\" \"$(cat /tmp/current-primary)\" -c \"$PATRONI_CONTAINER_NAME\" \\\n    -- sh -e $SHELL_XTRACE > /tmp/backup-push 2>&1\nexec-with-env \"$BACKUP_ENV\" \\\\\n  -- $(get_timeout_command BACKUP) wal-g backup-push \"$PG_DATA_PATH\" -f $([ \"$BACKUP_IS_PERMANENT\" = true ] && printf %s '-p' || true)\nEOF\n  then\n    cat /tmp/backup-push\n    echo 'Backup failed while pushing'\n    retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n      {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Backup failed while perfroming backup-push:\\n'; cat /tmp/backup-push; } | to_json_string)\"'}\n      ]'\n    exit 1\n  fi\n  CURRENT_BACKUP_NAME=\n  if grep -q \" Wrote backup with name \" /tmp/backup-push\n  then\n    CURRENT_BACKUP_NAME=\"$(grep \" Wrote backup with name \" /tmp/backup-push | sed 's/.* \\([^ ]\\+\\)$/\\1/')\"\n  fi\n  if [ -z \"$CURRENT_BACKUP_NAME\" ]\n  then\n    cat /tmp/backup-push\n    echo \"Backup name not found in backup-push log\"\n    retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch '[\n      {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":'\"$({ printf 'Backup name not found in backup-push log:\\n'; cat /tmp/backup-push; } | to_json_string)\"'}\n      ]'\n    exit 1\n  fi\n  cat /tmp/backup-push\n}\n\nextract_controldata() {\n  if cat << EOF | kubectl exec -i -n \"$CLUSTER_NAMESPACE\" \"$(cat /tmp/current-primary)\" -c \"$PATRONI_CONTAINER_NAME\" \\\n      -- sh -e $SHELL_XTRACE > /tmp/pg_controldata\npg_controldata --pgdata=\"$PG_DATA_PATH\"\nEOF\n  then\n    cat /tmp/pg_controldata\n    cat /tmp/pg_controldata \\\n      | {\n        FIRST=true\n        printf '{\\n'\n        while read LINE\n        do\n          KEY=\"${LINE%%:*}\"\n          VALUE=\"${LINE#*:}\"\n          VALUE=\"$(printf %s \"$VALUE\" | tr -s ' ')\"\n          VALUE=\"${VALUE# }\"\n          if [ \"$FIRST\" = true ]\n          then\n            FIRST=false\n          else\n            printf ',\\n'\n          fi\n          printf '\"%s\": \"%s\"' \"$KEY\" \"$VALUE\"\n        done\n        printf '\\n}\\n'\n        } > /tmp/pg_controldata.json\n  else\n    cat /tmp/pg_controldata\n    echo 'WARNING: Can not retrieve pg_controldata info'\n    echo '{}' > /tmp/pg_controldata.json\n    return 1\n  fi\n}\n\nretain_backups() {\n  cat << EOF | kubectl exec -i -n \"$CLUSTER_NAMESPACE\" \"$(cat /tmp/current-replica-or-primary)\" -c \"$PATRONI_CONTAINER_NAME\" \\\n  -- sh -e $SHELL_XTRACE\n\n# for each existing backup\nexec-with-env \"$BACKUP_ENV\" \\\\\n  -- $(get_timeout_command RECONCILIATION) wal-g backup-list --detail --json \\\\\n  | tr -d '[]' | sed 's/},{/}|{/g' | tr '|' '\\\\n' \\\\\n  | grep '\"backup_name\"' \\\\\n  | while read BACKUP\n    do\n      BACKUP_NAME=\"\\$(echo \"\\$BACKUP\" | tr -d '{}\\\\42' | tr ',' '\\\\n' \\\\\n          | grep 'backup_name' | cut -d : -f 2-)\"\n      echo \"Check if backup \\$BACKUP_NAME has to be set permanent or impermanent\"\n      # if has a managed lifecycle and is marked as permanent, mark as impermanent\n      if { [ \"\\$BACKUP_NAME\" = \"$CURRENT_BACKUP_NAME\" ] && [ \"$BACKUP_IS_PERMANENT\" != true ]; } \\\\\n        || { echo '$(cat /tmp/backups)' \\\\\n          | grep '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:true' \\\\\n          | cut -d : -f 5 \\\\\n          | grep -v '^\\$' \\\\\n          | grep -q \"^\\$BACKUP_NAME\\$\" \\\\\n        && echo \"\\$BACKUP\" | grep -q \"\\\\\"is_permanent\\\\\":true\"; }\n      then\n        echo \"Mark \\$BACKUP_NAME as impermanent\"\n        exec-with-env \"$BACKUP_ENV\" \\\\\n          -- $(get_timeout_command RECONCILIATION) wal-g backup-mark -i \"\\$BACKUP_NAME\"\n      # if has not a managed lifecycle and in not marked as permanent, mark as permanent\n      elif echo '$(cat /tmp/backups)' \\\\\n        | grep -v '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:true' \\\\\n        | cut -d : -f 5 \\\\\n        | grep -v '^\\$' \\\\\n        | grep -q \"^\\$BACKUP_NAME\\$\" \\\\\n        && echo \"\\$BACKUP\" | grep -q \"\\\\\"is_permanent\\\\\":false\"\n      then\n        echo \"Mark \\$BACKUP_NAME as permanent\"\n        exec-with-env \"$BACKUP_ENV\" \\\\\n          -- $(get_timeout_command RECONCILIATION) wal-g backup-mark \"\\$BACKUP_NAME\"\n      fi\n    done\n\n# for each existing backup sorted by backup name ascending (this also mean sorted by creation date ascending)\nexec-with-env \"$BACKUP_ENV\" \\\\\n  -- $(get_timeout_command RECONCILIATION) wal-g backup-list --detail --json \\\\\n  | tr -d '[]' | sed 's/},{/}|{/g' | tr '|' '\\\\n' \\\\\n  | grep '\"backup_name\"' \\\\\n  | sort -r -t , -k 2 \\\\\n  | (RETAIN=\"$RETAIN\"\n    while read BACKUP\n    do\n      BACKUP_NAME=\"\\$(echo \"\\$BACKUP\" | tr -d '{}\\\\42' | tr ',' '\\\\n' \\\\\n          | grep 'backup_name' | cut -d : -f 2-)\"\n      echo \"Check if backup \\$BACKUP_NAME has to be retained and will retain \\$RETAIN backups\"\n      # if is not the created backup and is not in backup CR list, delete it\n      if [ \"\\$BACKUP_NAME\" != \"$CURRENT_BACKUP_NAME\" ] \\\\\n        && ! echo '$(cat /tmp/backups)' \\\\\n        | cut -d : -f 5 \\\\\n        | grep -v '^\\$' \\\\\n        | grep -q \"^\\$BACKUP_NAME\\$\"\n      then\n        echo \"Deleting \\$BACKUP_NAME since no associated SGBackup exists and will retain \\$RETAIN backups\"\n        exec-with-env \"$BACKUP_ENV\" \\\\\n          -- $(get_timeout_command RECONCILIATION) wal-g delete target FIND_FULL \"\\$BACKUP_NAME\" --confirm\n      # if is inside the retain window, retain it and decrease RETAIN counter\n      elif [ \"\\$RETAIN\" -gt 1 ]\n      then\n        echo \"Retaining \\$BACKUP_NAME and will retain \\$((RETAIN-1)) more backups\"\n        RETAIN=\"\\$((RETAIN-1))\"\n      # if is outside the retain window and has a managed lifecycle, delete it\n      elif [ \"\\$RETAIN\" -eq 1 ] \\\\\n        && echo '$(cat /tmp/backups)' \\\\\n          | grep '^[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:[^:]*:true' \\\\\n          | cut -d : -f 5 \\\\\n          | grep -v '^\\$' \\\\\n          | grep -q \"^\\$BACKUP_NAME\\$\"\n      then\n        echo \"Deleting WAL files and backups with managed lifecycle older than \\$BACKUP_NAME\"\n        exec-with-env \"$BACKUP_ENV\" \\\\\n          -- $(get_timeout_command RECONCILIATION) wal-g delete before FIND_FULL \"\\$BACKUP_NAME\" --confirm\n        RETAIN=\"\\$((RETAIN-1))\"\n      # or retain it\n      else\n        echo \"Retaining \\$BACKUP_NAME with unmanaged lifecycle\"\n      fi\n    done)\n\nexec-with-env \"$BACKUP_ENV\" \\\\\n  -- $(get_timeout_command RECONCILIATION) wal-g wal-verify integrity\n\nexec-with-env \"$BACKUP_ENV\" \\\\\n  -- $(get_timeout_command RECONCILIATION) wal-g wal-verify timeline\nEOF\n}\n\nlist_backups() {\n  cat << EOF | kubectl exec -i -n \"$CLUSTER_NAMESPACE\" \"$(cat /tmp/current-replica-or-primary)\" -c \"$PATRONI_CONTAINER_NAME\" \\\n    -- sh -e $SHELL_XTRACE > /tmp/backup-list\nWALG_LOG_LEVEL= exec-with-env \"$BACKUP_ENV\" \\\\\n  -- $(get_timeout_command BACKUP) wal-g backup-list --detail --json\nEOF\n}\n\nlist_backups_for_reconciliation() {\n  cat << EOF | kubectl exec -i -n \"$CLUSTER_NAMESPACE\" \"$(cat /tmp/current-replica-or-primary)\" -c \"$PATRONI_CONTAINER_NAME\" \\\n    -- sh -e $SHELL_XTRACE > /tmp/backup-list\nWALG_LOG_LEVEL= exec-with-env \"$BACKUP_ENV\" \\\\\n  -- $(get_timeout_command RECONCILIATION) wal-g backup-list --detail --json\nEOF\n}\n\nset_backup_completed() {\n  EXISTING_BACKUP_IS_PERMANENT=\"$(grep \"^is_permanent:\" /tmp/current-backup | cut -d : -f 2-)\"\n  IS_BACKUP_MANAGED_LIFECYCLE=\"\"\n  if [ \"$EXISTING_BACKUP_IS_PERMANENT\" = \"true\" ]\n  then\n    IS_BACKUP_MANAGED_LIFECYCLE=\"false\"\n  else\n    IS_BACKUP_MANAGED_LIFECYCLE=\"true\"\n  fi\n\n  TIMELINE=\"$(grep \"^wal_file_name:\" /tmp/current-backup)\" # Read file name from current-backup\n  TIMELINE=\"$(printf \"$TIMELINE\" | cut -d ':' -f 2 | tr -d '[:blank:]')\" # Extract only the wal name value\n  TIMELINE=\"$(expr substr \"$TIMELINE\" 1 8)\" # Get the first 8 digits\n  TIMELINE=\"$(printf \"%d\" \"0x$TIMELINE\")\" # Convert hex to decimal\n\n  BACKUP_PATCH=\"$(cat << EOF\n[\n  {\"op\":\"replace\",\"path\":\"/status/internalName\",\"value\":\"$CURRENT_BACKUP_NAME\"},\n  {\"op\":\"replace\",\"path\":\"/status/process/failure\",\"value\":\"\"},\n  {\"op\":\"replace\",\"path\":\"/status/process/managedLifecycle\",\"value\":$IS_BACKUP_MANAGED_LIFECYCLE},\n  {\"op\":\"replace\",\"path\":\"/status/process/timing\",\"value\":{\n      \"stored\":\"$(grep \"^time:\" /tmp/current-backup | cut -d : -f 2-)\",\n      \"start\":\"$(grep \"^start_time:\" /tmp/current-backup | cut -d : -f 2-)\",\n      \"end\":\"$(grep \"^finish_time:\" /tmp/current-backup | cut -d : -f 2-)\"\n    }\n  },\n  {\"op\":\"replace\",\"path\":\"/status/backupInformation\",\"value\":{\n      \"startWalFile\":\"$(grep \"^wal_file_name:\" /tmp/current-backup | cut -d : -f 2-)\",\n      \"timeline\":\"$TIMELINE\",\n      \"hostname\":\"$(grep \"^hostname:\" /tmp/current-backup | cut -d : -f 2-)\",\n      \"sourcePod\":\"$(grep \"^hostname:\" /tmp/current-backup | cut -d : -f 2-)\",\n      \"pgData\":\"$(grep \"^data_dir:\" /tmp/current-backup | cut -d : -f 2-)\",\n      \"postgresVersion\":\"$(grep \"^pg_version:\" /tmp/current-backup | cut -d : -f 2-)\",\n      \"systemIdentifier\":\"$(grep \"^system_identifier:\" /tmp/current-backup | cut -d : -f 2-)\",\n      \"lsn\":{\n        \"start\":\"$(grep \"^start_lsn:\" /tmp/current-backup | cut -d : -f 2-)\",\n        \"end\":\"$(grep \"^finish_lsn:\" /tmp/current-backup | cut -d : -f 2-)\"\n      },\n      \"size\":{\n        \"uncompressed\":$(grep \"^uncompressed_size:\" /tmp/current-backup | cut -d : -f 2-),\n        \"compressed\":$(grep \"^compressed_size:\" /tmp/current-backup | cut -d : -f 2-)\n      },\n      \"controlData\": $(cat /tmp/pg_controldata.json)\n    }\n  },\n$(\nif [ \"$USE_VOLUME_SNAPSHOT\" = true ]\nthen\n  cat << INNER_EOF\n  {\"op\":\"replace\",\"path\":\"/status/volumeSnapshot\",\"value\":{\n      \"name\":\"$BACKUP_NAME\",\n      \"backupLabel\":\"$(cut -d '|' -f 2 /tmp/backup-stop)\",\n      \"tablespaceMap\":\"$(cut -d '|' -f 3 /tmp/backup-stop)\"\n    }\n  }\nINNER_EOF\nfi\n)\n]\nEOF\n    )\"\n  retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$BACKUP_NAME\" --type json --patch \"$BACKUP_PATCH\"\n}\n\nreconcile_backup_crs() {\n  kubectl get pod -n \"$CLUSTER_NAMESPACE\" \\\n    --template=\"{{ range .items }}{{ .metadata.name }}{{ printf \"'\"\\n\"'\" }}{{ end }}\" \\\n    > /tmp/pods\n  for BACKUP in $(cat /tmp/backups)\n  do\n    BACKUP_CR_NAMESPACE=\"$(echo \"$BACKUP\" | cut -d : -f 2)\"\n    BACKUP_CR_NAME=\"$(echo \"$BACKUP\" | cut -d : -f 3)\"\n    BACKUP_PHASE=\"$(echo \"$BACKUP\" | cut -d : -f 4)\"\n    BACKUP_NAME=\"$(echo \"$BACKUP\" | cut -d : -f 5)\"\n    BACKUP_POD=\"$(echo \"$BACKUP\" | cut -d : -f 6)\"\n    BACKUP_SHEDULED_BACKUP=\"$(echo \"$BACKUP\" | cut -d : -f 7)\"\n    BACKUP_MANAGED_LIFECYCLE=\"$(echo \"$BACKUP\" | cut -d : -f 9)\"\n    BACKUP_IS_PERMANENT=\"$([ \"$BACKUP_MANAGED_LIFECYCLE\" = true ] && echo false || echo true)\"\n    BACKUP_CONFIG=\"$(kubectl get \"$BACKUP_CRD_NAME\" -n \"$BACKUP_CR_NAMESPACE\" \"$BACKUP_CR_NAME\" \\\n      --template=\"{{ .status.sgBackupConfig.storage }}\")\"\n    BACKUP_PATH=\"$(kubectl get \"$BACKUP_CRD_NAME\" -n \"$BACKUP_CR_NAMESPACE\" \"$BACKUP_CR_NAME\" \\\n      --template=\"{{ .status.backupPath }}\")\"\n    # if backup CR has backup internal name, is marked as completed, uses the same current\n    # backup config and backup path but is not found in the storage, delete it\n    if [ -n \"$BACKUP_NAME\" ] && [ \"$BACKUP_PHASE\" = \"$BACKUP_PHASE_COMPLETED\" ] \\\n      && [ \"$BACKUP_CONFIG\" = \"$CURRENT_BACKUP_CONFIG\" ] \\\n      && [ \"$BACKUP_PATH\" = \"$CLUSTER_BACKUP_PATH\" ] \\\n      && ! grep -q \"\\\"backup_name\\\":\\\"$BACKUP_NAME\\\"\" /tmp/existing-backups\n    then\n      echo \"Deleting backup CR $BACKUP_CR_NAME since backup does not exists\"\n      kubectl delete \"$BACKUP_CRD_NAME\" -n \"$BACKUP_CR_NAMESPACE\" \"$BACKUP_CR_NAME\"\n    # if backup CR is a scheduled backup, is marked as running, has no pod or pod\n    # has been terminated, delete it\n    elif [ \"$BACKUP_SHEDULED_BACKUP\" = \"$RIGHT_VALUE\" ] \\\n      && [ \"$BACKUP_PHASE\" = \"$BACKUP_PHASE_RUNNING\" ] \\\n      && ([ -z \"$BACKUP_POD\" ] || ! grep -q \"^$BACKUP_POD$\" /tmp/pods)\n    then\n      echo \"Deleting backup CR $BACKUP_CR_NAME since backup is running but pod does not exists\"\n      kubectl delete \"$BACKUP_CRD_NAME\" -n \"$BACKUP_CR_NAMESPACE\" \"$BACKUP_CR_NAME\"\n    # if backup CR has backup internal name, is marked as completed, and is marked as\n    # stored as not managed lifecycle or managed lifecycle and is found as managed lifecycle or\n    # not managed lifecycle respectively, then mark it as stored as managed lifecycle or\n    # not managed lifecycle respectively\n    elif [ -n \"$BACKUP_NAME\" ] && [ \"$BACKUP_PHASE\" = \"$BACKUP_PHASE_COMPLETED\" ] \\\n      && ! grep \"\\\"backup_name\\\":\\\"$BACKUP_NAME\\\"\" /tmp/existing-backups \\\n        | grep -q \"\\\"is_permanent\\\":$BACKUP_IS_PERMANENT\"\n    then\n      EXISTING_BACKUP_IS_PERMANENT=\"$(grep \"\\\"backup_name\\\":\\\"$BACKUP_NAME\\\"\" /tmp/existing-backups \\\n        | tr -d '{}\"' | tr ',' '\\n' | grep \"^is_permanent:\" | cut -d : -f 2-)\"\n      IS_BACKUP_MANAGED_LIFECYCLE=\"\"\n      if [ \"$EXISTING_BACKUP_IS_PERMANENT\" = \"true\" ]\n      then\n        IS_BACKUP_MANAGED_LIFECYCLE=\"false\"\n      else\n        IS_BACKUP_MANAGED_LIFECYCLE=\"true\"\n      fi\n      echo \"Updating backup CR $BACKUP_CR_NAME .status.process.managedLifecycle to $IS_BACKUP_MANAGED_LIFECYCLE since was updated in the backup\"\n      retry_kubectl patch \"$BACKUP_CRD_NAME\" -n \"$BACKUP_CR_NAMESPACE\" \"$BACKUP_CR_NAME\" --type json --patch '[\n        {\"op\":\"replace\",\"path\":\"/status/process/managedLifecycle\",\"value\":'$IS_BACKUP_MANAGED_LIFECYCLE'}\n        ]'\n    fi\n  done\n}\n\nget_timeout_command() {\n  GLOBAL_TIMEOUT=\"$(eval \"printf %s \\\"\\$${1}_TIMEOUT\\\"\")\"\n  START_TIMESTAMP=\"$(eval \"printf %s \\\"\\$${1}_START_TIMESTAMP\\\"\")\"\n  if [ \"x$GLOBAL_TIMEOUT\" = x ] || [ \"x$GLOBAL_TIMEOUT\" = x0 ]\n  then\n    printf ''\n    return\n  fi\n  printf 'timeout %s' \"\\\"\\$(TIMEOUT=\\\"\\$(( $GLOBAL_TIMEOUT - \\$(date +%s) + $START_TIMESTAMP ))\\\"; [ \\\"\\$TIMEOUT\\\" -ge 60 ] && printf %s \\\"\\$TIMEOUT\\\" || printf 60)\\\"\"\n}\n\nis_timeout_expired() {\n  GLOBAL_TIMEOUT=\"$(eval \"printf %s \\\"\\$${1}_TIMEOUT\\\"\")\"\n  START_TIMESTAMP=\"$(eval \"printf %s \\\"\\$${1}_START_TIMESTAMP\\\"\")\"\n  if [ \"x$GLOBAL_TIMEOUT\" = x ] || [ \"x$GLOBAL_TIMEOUT\" = x0 ]\n  then\n    return 1\n  fi\n  if [ \"$(( $GLOBAL_TIMEOUT - $(date +%s) + $START_TIMESTAMP ))\" -le 0 ]\n  then\n    return\n  fi\n  return 1\n}\n\nretry_kubectl() {\n  RETRY=0\n  until kubectl \"$@\"\n  do\n    if [ \"$RETRY\" -ge 10 ]\n    then\n      exit 1\n    fi\n    BACKOFF=\"$(( (RETRY_DELAY << RETRY > 60 * 1000 ? 60 * 1000 : RETRY_DELAY << RETRY) / 1000))\"\n    echo \"Will retry command after backoff of $BACKOFF seconds ($((10 - RETRY)) retry left)\"\n    sleep \"$BACKOFF\"\n    RETRY=\"$((RETRY + 1))\"\n  done\n}\n\nrun\n",
                "exec-with-env": "#!/bin/sh\n\nLC_ALL=C.UTF-8; export LC_ALL\n\nset -e\n\nverify_shell_is_posix_or_exit() {\n  if [ -n \"${ZSH_VERSION+x}\" ]; then\n    error \"Running installation script with \\`zsh\\` is known to cause errors.\"\n    error \"Please use \\`sh\\` instead.\"\n    exit 1\n  elif [ -n \"${BASH_VERSION+x}\" ] && [ -z \"${POSIXLY_CORRECT+x}\" ]; then\n    error \"Running installation script with non-POSIX \\`bash\\` may cause errors.\"\n    error \"Please use \\`sh\\` instead.\"\n    exit 1\n  else\n    true  # No-op: no issues detected\n  fi\n}\n\ndie() {\n  >&2 echo \"$@\"\n  exit 1\n}\n\n# Non-POSIX shells can break once executing code due to semantic differences\nverify_shell_is_posix_or_exit\n\nREPLACES=\"\"\nOVERWRITE=false\n\nwhile [ \"$#\" -gt 0 ]\ndo\n  case \"$1\" in\n  -r|--replace)\n    shift\n    if [ -z \"$REPLACES\" ]\n    then\n      REPLACES=\"$1\"\n    else\n      REPLACES=\"$REPLACES,$1\"\n    fi\n    shift\n    ;;\n  -o|--overwrite)\n    shift\n    OVERWRITE=true\n    ;;\n  --)\n    shift\n    break\n    ;;\n  *)\n    if echo \"$1\" | grep -q \"^/\"\n    then\n      plain_envdir=\"$1\"\n      secret_envdir=\"\"\n      [ -d \"$plain_envdir\" ] \\\n        || die \"$plain_envdir is not a directory\"\n    else\n      secret_envdir=\"${BASE_SECRET_PATH}/$1\"\n      plain_envdir=\"${BASE_ENV_PATH}/$1\"\n      [ -d \"$plain_envdir\" -o -d \"$secret_envdir\" ] \\\n        || die \"None of $plain_envdir or $secret_envdir is a directory\"\n    fi\n    shift\n    for envdir in \"$plain_envdir\" \"$secret_envdir\"\n    do\n      [ -d \"$envdir\" ] || continue\n      # When md5sum of values of environment variables ordered alphabetically (excluding variable\n      # MD5SUM) does not match variable MD5SUM we fail since in transition state\n      [ \"$(ls -1a \"$envdir\" | grep -v \"^MD5SUM$\" \\\n        | while read envvar; do [ ! -f \"$envdir/$envvar\" ] || cat \"$envdir/$envvar\"; done \\\n        | md5sum | cut -d ' ' -f 1 | tr 'a-z' 'A-Z')\" = \"$(cat \"$envdir/MD5SUM\")\" ] \\\n        || die \"Environment variable in transient state\"\n      for envvar in $(ls -1a \"$envdir\")\n      do\n        # Only export if \"$envdir/$envvar\" is a file\n        # and environment variable with name $envvar is not set\n        [ ! -f \"$envdir/$envvar\" ] || [ \"$OVERWRITE\" != \"true\" -a -n \"$(eval \"echo \\\"\\$$envvar\\\"\")\" ] \\\n          || eval \"export $envvar='$(cat \"$envdir/$envvar\")'\"\n      done\n    done\n    ;;\n  esac\ndone\n\nif [ -n \"$REPLACES\" ]\nthen\n  for REPLACE in $(echo \"$REPLACES\" | tr ',' '\\n')\n  do\n    eval \"export ${REPLACE%=*}=\\\"\\$${REPLACE#*=}\\\"\"\n  done\nfi\n\nunset LC_ALL\n\nif [ -n \"$1\" ]\nthen\n  exec \"$@\"\nfi\n",
                "group": "root:x:0:\nbin:x:1:\ndaemon:x:2:\nsys:x:3:\nadm:x:4:\ntty:x:5:\ndisk:x:6:\nlp:x:7:\nmem:x:8:\nkmem:x:9:\nwheel:x:10:\ncdrom:x:11:\nmail:x:12:\nman:x:15:\ndialout:x:18:\nfloppy:x:19:\ngames:x:20:\ntape:x:33:\nvideo:x:39:\nftp:x:50:\nlock:x:54:\naudio:x:63:\nusers:x:100:\nnobody:x:65534:\n",
                "gshadow": "root:::\nbin:::\ndaemon:::\nsys:::\nadm:::\ntty:::\ndisk:::\nlp:::\nmem:::\nkmem:::\nwheel:::\ncdrom:::\nmail:::\nman:::\ndialout:::\nfloppy:::\ngames:::\ntape:::\nvideo:::\nftp:::\nlock:::\naudio:::\nusers:::\nnobody:::\n",
                "major-version-upgrade.sh": "#!/bin/sh\n\nset -e\n\nif [ \"$ROLLBACK\" = true ]\nthen\n  if [ -f \"$PG_UPGRADE_PATH/$SOURCE_VERSION/data/PG_VERSION\" ]\n  then\n    rm -rf \"$PG_DATA_PATH\"\n    mv \"$PG_UPGRADE_PATH/$SOURCE_VERSION/data\" \"$PG_DATA_PATH\"\n  fi\n  if [ -f \"$PG_UPGRADE_PATH/$TARGET_VERSION/copied-missing-lib64\" ]\n  then\n    cat \"$PG_UPGRADE_PATH/$TARGET_VERSION/copied-missing-lib64\" \\\n      | cut -d ' ' -f 3 | tr -d \"'\" \\\n      | while read FILE\n        do\n\t  if [ -f \"$FILE\" ]\n          then\n            chmod a+rw \"$FILE\" || true\n            rm -rfv \"$FILE\"\n\t  fi\n        done\n  fi\n  if [ -d \"$PG_UPGRADE_PATH/$TARGET_VERSION\" ]\n  then\n    rm -rf \"$PG_UPGRADE_PATH/$TARGET_VERSION\"\n  fi\n  rm -f \"$PG_UPGRADE_PATH/.upgrade-from-$SOURCE_VERSION-to-$TARGET_VERSION.done\"\n  if [ -d \"$PG_RELOCATED_BASE_PATH/$TARGET_VERSION\" ]\n  then\n    chmod -R a+rw \"$PG_RELOCATED_BASE_PATH/$TARGET_VERSION\" || true\n    rm -rf \"$PG_RELOCATED_BASE_PATH/$TARGET_VERSION\"\n  fi\n  if [ -d \"$PG_EXTENSIONS_BASE_PATH/${TARGET_VERSION%.*}\" ]\n  then\n    chmod -R a+rw \"$PG_EXTENSIONS_BASE_PATH/${TARGET_VERSION%.*}\" || true\n    rm -rf \"$PG_EXTENSIONS_BASE_PATH/${TARGET_VERSION%.*}\"\n  fi\n  exit 0\nfi\n\nif [ -f \"$PG_UPGRADE_PATH/.upgrade-from-$SOURCE_VERSION-to-$TARGET_VERSION.done\" ]\nthen\n  echo \"Major version upgrade already performed\"\n  exit 0\nfi\n\nif [ \"$POSTGRES_VERSION\" != \"$TARGET_VERSION\" ]\nthen\n  echo \"Can not perform major version upgrade, postgres version has not been updated\"\n  exit 1\nfi\n\nif [ \"$PRIMARY_INSTANCE\" != \"$POD_NAME\" ]\nthen\n  echo \"Removing data of non primary instance\"\n  rm -rf \"$PG_DATA_PATH\"\n  mkdir -p \"$PG_UPGRADE_PATH\"\n  touch \"$PG_UPGRADE_PATH/.upgrade-from-$SOURCE_VERSION-to-$TARGET_VERSION.done\"\n  echo \"Major version upgrade not needed for non primary instance\"\n  exit 0\nfi\n\nif [ ! -f \"$PG_UPGRADE_PATH/$TARGET_VERSION/data/.pg_upgrade-from-$SOURCE_VERSION-to-$TARGET_VERSION.done\" ]\nthen\n  echo \"Creating new database\"\n  rm -rf \"$PG_UPGRADE_PATH/$TARGET_VERSION/data\"\n  mkdir -p \"$PG_UPGRADE_PATH/$TARGET_VERSION/data\"\n  initdb \\\n    -D \"$PG_UPGRADE_PATH/$TARGET_VERSION/data\" \\\n    -E \"$ENCODING\" \\\n    --locale \"$LOCALE\" \\\n    $(\"$DATA_CHECKSUM\" && echo \"-k\" || true)\n  mv \"$PG_UPGRADE_PATH/$TARGET_VERSION/data/postgresql.conf\" \\\n    \"$PG_UPGRADE_PATH/$TARGET_VERSION/data/postgresql.init.conf\"\n  {\n    cat \"$PG_UPGRADE_PATH/$TARGET_VERSION/data/postgresql.init.conf\"\n    echo\n    cat \"$ETC_POSTGRES_PATH/postgresql.conf\"\n  } > \"$PG_UPGRADE_PATH/$TARGET_VERSION/data/postgresql.conf\"\n  (\n  cd \"$PG_UPGRADE_PATH/$TARGET_VERSION\"\n  if [ ! -f \"$PG_UPGRADE_PATH/$TARGET_VERSION/.copy-missing-lib64.done\" ]\n  then\n    cp -aunv \"$SOURCE_PG_LIB64_PATH\" \"${TARGET_PG_LIB64_PATH%/*}\" > \"$PG_UPGRADE_PATH/$TARGET_VERSION/copied-missing-lib64\"\n    if [ -s \"$PG_UPGRADE_PATH/$TARGET_VERSION/copied-missing-lib64\" ]\n    then\n      echo \"Following files where copied from $SOURCE_PG_LIB64_PATH to $TARGET_PG_LIB64_PATH\"\n      echo\n      cat \"$PG_UPGRADE_PATH/$TARGET_VERSION/copied-missing-lib64\"\n      echo\n    fi\n    touch \"$PG_UPGRADE_PATH/$TARGET_VERSION/.copy-missing-lib64.done\"\n  fi\n  chmod -R 700 \"$PG_DATA_PATH\"\n  if [ \"$CHECK\" = true ]\n  then\n    echo \"Checking major version upgrade\"\n    if ! pg_upgrade -c -r \\\n      -b \"/usr/lib/postgresql/$SOURCE_VERSION/bin\" \\\n      -B \"/usr/lib/postgresql/$TARGET_VERSION/bin\" \\\n      -d \"$PG_DATA_PATH\" \\\n      -D \"$PG_UPGRADE_PATH/$TARGET_VERSION/data\" \\\n      -s \"$PG_UPGRADE_PATH/$TARGET_VERSION\" \\\n      -o \"-c 'dynamic_library_path=$SOURCE_PG_LIB_PATH:$SOURCE_PG_EXTRA_LIB_PATH'\" \\\n      -O \"-c 'dynamic_library_path=$TARGET_PG_LIB_PATH:$TARGET_PG_EXTRA_LIB_PATH'\" \\\n      $(\"$LINK\" && printf %s \"-k\" || true) \\\n      $(\"$CLONE\" && printf %s \"--clone\" || true)\n    then\n      echo \"Major version upgrade check failed\"\n    fi\n    \n    echo\n    grep . *.{txt,log} */*.{txt,log} */*/*.{txt,log} */*/*/*.{txt,log} */*/*/*/*.{txt,log} 2>/dev/null | cat >&2\n    echo\n    \n    echo \"Major version upgrade check performed\"\n    \n    echo -n \"Wait for the major version upgrade rollback to happen\"\n    while true\n    do\n      printf .\n      sleep 30\n    done\n    exit 0\n  fi\n  echo \"Performing major version upgrade\"\n  if ! pg_upgrade -r \\\n    -b \"/usr/lib/postgresql/$SOURCE_VERSION/bin\" \\\n    -B \"/usr/lib/postgresql/$TARGET_VERSION/bin\" \\\n    -d \"$PG_DATA_PATH\" \\\n    -D \"$PG_UPGRADE_PATH/$TARGET_VERSION/data\" \\\n    -s \"$PG_UPGRADE_PATH/$TARGET_VERSION\" \\\n    -o \"-c 'dynamic_library_path=$SOURCE_PG_LIB_PATH:$SOURCE_PG_EXTRA_LIB_PATH'\" \\\n    -O \"-c 'dynamic_library_path=$TARGET_PG_LIB_PATH:$TARGET_PG_EXTRA_LIB_PATH'\" \\\n    $(\"$LINK\" && printf %s \"-k\" || true) \\\n    $(\"$CLONE\" && printf %s \"--clone\" || true)\n  then\n    echo\n    grep . *.{txt,log} */*.{txt,log} */*/*.{txt,log} */*/*/*.{txt,log} */*/*/*/*.{txt,log} 2>/dev/null | cat >&2\n    echo\n    exit 1\n  fi\n  echo\n  grep . *.{txt,log} */*.{txt,log} */*/*.{txt,log} */*/*/*.{txt,log} */*/*/*/*.{txt,log} 2>/dev/null | cat >&2\n  echo\n  touch \"$PG_UPGRADE_PATH/$TARGET_VERSION/data/.pg_upgrade-from-$SOURCE_VERSION-to-$TARGET_VERSION.done\"\n  )\nfi\n\nif [ ! -d \"$PG_UPGRADE_PATH/$SOURCE_VERSION/data\" ] \\\n  && [ -d \"$PG_UPGRADE_PATH/$TARGET_VERSION/data\" ]\nthen\n  mkdir -p \"$PG_UPGRADE_PATH/$SOURCE_VERSION\"\n  mv \"$PG_DATA_PATH\" \"$PG_UPGRADE_PATH/$SOURCE_VERSION/data\"\nfi\nif [ ! -d \"$PG_DATA_PATH\" ]\nthen\n  if [ ! -d \"$PG_UPGRADE_PATH/$TARGET_VERSION/data\" ]\n  then\n    echo \"Upgraded data not found!\"\n    exit 1\n  fi\n  mv \"$PG_UPGRADE_PATH/$TARGET_VERSION/data\" \"$PG_DATA_PATH\"\nfi\ncat \"$PG_UPGRADE_PATH/$TARGET_VERSION/copied-missing-lib64\" \\\n  | cut -d ' ' -f 3 | tr -d \"'\" \\\n  | while read FILE\n    do\n      if [ -f \"$FILE\" ]\n      then\n        chmod a+rw \"$FILE\" || true\n        rm -rfv \"$FILE\"\n     fi\n    done\ntouch \"$PG_UPGRADE_PATH/.upgrade-from-$SOURCE_VERSION-to-$TARGET_VERSION.done\"\necho \"Major version upgrade performed\"\n",
                "passwd": "root:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/sbin/nologin\ndaemon:x:2:2:daemon:/sbin:/sbin/nologin\nadm:x:3:4:adm:/var/adm:/sbin/nologin\nlp:x:4:7:lp:/var/spool/lpd:/sbin/nologin\nsync:x:5:0:sync:/sbin:/bin/sync\nshutdown:x:6:0:shutdown:/sbin:/sbin/shutdown\nhalt:x:7:0:halt:/sbin:/sbin/halt\nmail:x:8:12:mail:/var/spool/mail:/sbin/nologin\noperator:x:11:0:operator:/root:/sbin/nologin\ngames:x:12:100:games:/usr/games:/sbin/nologin\nftp:x:14:50:FTP User:/var/ftp:/sbin/nologin\n",
                "patronictl": "#!/bin/sh\n\nexec-with-env \"${PATRONI_ENV}\" -- /usr/bin/patronictl -c \"$PATRONI_CONFIG_FILE\" \"$@\"\n",
                "post-init.sh": "#!/bin/bash\nset -e\nIFS=$'\\n'\nINIT_SCRIPT_PATH=/etc/patroni/init-script.d\n\n# check if path exist\nif [ -d \"$INIT_SCRIPT_PATH\" -a \"$(ls -1 \"$INIT_SCRIPT_PATH\" 2>/dev/null|wc -l)\" -ge 1 ]\nthen\n  for FILE in $(ls -1 \"$INIT_SCRIPT_PATH\")\n  do\n    FILE=\"$(realpath \"$INIT_SCRIPT_PATH/$FILE\")\"\n    if [ \"${FILE: -3}\" == \".sh\" -a -f \"$FILE\" ]\n    then\n      echo \"Executing shell script $FILE\"\n      bash \"$FILE\"\n      echo \"Shell script $FILE executed\"\n    fi\n  done\n  # search for .sql file and execute them\n  for FILE in $(ls -1 \"$INIT_SCRIPT_PATH\" | sort -n -t -)\n  do\n    FILE=\"$(realpath \"$INIT_SCRIPT_PATH/$FILE\")\"\n    if [ \"${FILE: -4}\" == \".sql\" -a -f \"$FILE\" ]\n    then\n      DATABASE=\"$([ \"$(basename \"$FILE\" | tr '.' '\\n' | wc -l)\" -gt 2 ] \\\n        && echo \"$(basename \"$FILE\" | tr '.' '\\n' \\\n          | tail -n +2 | head -n -1 | tr '\\n' '.' \\\n          | sed 's#\\\\\\\\#\\\\#g' | sed 's#\\\\h#/#g')\" \\\n        || echo postgres)\"\n      DATABASE=\"${DATABASE%.}\"\n      echo \"Executing SQL script $FILE for DATABASE $DATABASE with user postgres on port ${POSTGRES_PORT}\"\n      cat \"$FILE\" | python3 -c \"$(cat << EOF\nimport psycopg2,sys\nconnection = psycopg2.connect(\"user=postgres dbname='$DATABASE' port=${POSTGRES_PORT}\")\nconnection.autocommit = True\ncursor = connection.cursor()\ncursor.execute(sys.stdin.read())\ntry: print(cursor.fetchall())\nexcept: print()\nEOF\n)\"\n      echo \"Shell SQL $FILE executed\"\n    fi\n  done\nfi\n",
                "relocate-binaries.sh": "#!/bin/sh\n\nset -eu\n\nmkdir -p \"$PG_EXTENSIONS_PATH\"\n\nchmod 700 \"$PG_EXTENSIONS_PATH\"\n\nmkdir -p \"$PG_EXTENSIONS_BIN_PATH\"\n\nmkdir -p \"$PG_EXTENSIONS_LIB_PATH\"\n\nmkdir -p \"$PG_EXTENSIONS_EXTENSION_PATH\"\n\nmkdir -p \"$PG_EXTENSIONS_LIB64_PATH\"\n\nmkdir -p \"$PG_RELOCATED_PATH\"\n\nif [ ! -f \"$PG_RELOCATED_PATH/.done\" ]\nthen\n  for RELOCATE_PATH in \"$PG_BIN_PATH:$PG_RELOCATED_BIN_PATH\" \\\n    \"$PG_LIB_PATH:$PG_RELOCATED_LIB_PATH\" \\\n    \"$PG_SHARE_PATH:$PG_RELOCATED_SHARE_PATH\" \\\n    \"$PG_LIB64_PATH:$PG_RELOCATED_LIB64_PATH\"\n  do\n    echo \"Relocating ${RELOCATE_PATH%:*} to ${RELOCATE_PATH#*:} ...\"\n    mkdir -p \"${RELOCATE_PATH#*:}\"\n    find \"${RELOCATE_PATH%:*}\" -printf '%p %s\\n' | sed \"s|^${RELOCATE_PATH%:*}/\\(.* [0-9]\\+\\)$|${RELOCATE_PATH#*:}/\\1|\" | sort > \"$PG_RELOCATED_PATH/.source\"\n    find \"${RELOCATE_PATH#*:}\" -printf '%p %s\\n' | sort > \"$PG_RELOCATED_PATH/.target\"\n    comm -23 \"$PG_RELOCATED_PATH/.source\" \"$PG_RELOCATED_PATH/.target\" \\\n      | sed \"s|^\\(.*\\) [0-9]\\+$|\\1|\" | sort > \"$PG_RELOCATED_PATH/.source-diff\"\n    comm -13 \"$PG_RELOCATED_PATH/.source\" \"$PG_RELOCATED_PATH/.target\" \\\n      | sed \"s|^\\(.*\\) [0-9]\\+$|\\1|\" | sort > \"$PG_RELOCATED_PATH/.target-diff\"\n    comm -12 \"$PG_RELOCATED_PATH/.source-diff\" \"$PG_RELOCATED_PATH/.target-diff\" \\\n      | xargs rm -f || true\n    cp -a -u \"${RELOCATE_PATH%:*}/.\" \"${RELOCATE_PATH#*:}\"\n    chmod -R 700 \"${RELOCATE_PATH#*:}\"\n    echo \"done.\"\n  done\n  touch \"$PG_RELOCATED_PATH/.done\"\nelse\n  echo \"$PG_RELOCATED_PATH already relocated, skipping\"\nfi\n\nif [ ! -f \"$PG_RELOCATED_PATH/.extensions-done\" ]\nthen\n  for EXTENSION_CONTROL_FILE in \"$PG_EXTENSION_PATH\"/*.control\n  do\n    if ! [ -f \"$EXTENSION_CONTROL_FILE\" ]\n    then\n      continue\n    fi\n    EXTENSION_NAME=\"${EXTENSION_CONTROL_FILE%.*}\"\n    EXTENSION_NAME=\"${EXTENSION_NAME##*/}\"\n    echo \"Relocating $EXTENSION_CONTROL_FILE (and $EXTENSION_NAME--*.sql) to $PG_EXTENSIONS_EXTENSION_PATH/. ...\"\n    {\n      find \"${EXTENSION_CONTROL_FILE%/*}\" -maxdepth 1 -name \"$EXTENSION_NAME.control\" -printf '%p %s\\n'\n      find \"${EXTENSION_CONTROL_FILE%/*}\" -maxdepth 1 -name \"$EXTENSION_NAME--*.sql\" -printf '%p %s\\n'\n    }\\\n      | sed \"s|^${EXTENSION_CONTROL_FILE%/*}/\\(.* [0-9]\\+\\)$|${PG_EXTENSIONS_EXTENSION_PATH}/\\1|\" | sort > \"$PG_RELOCATED_PATH/.source\"\n    find \"$PG_EXTENSIONS_EXTENSION_PATH\" -printf '%p %s\\n' | sort > \"$PG_RELOCATED_PATH/.target\"\n    comm -23 \"$PG_RELOCATED_PATH/.source\" \"$PG_RELOCATED_PATH/.target\" \\\n      | sed \"s|^\\(.*\\) [0-9]\\+$|${PG_EXTENSIONS_EXTENSION_PATH}/\\1|\" | sort > \"$PG_RELOCATED_PATH/.source-diff\"\n    comm -13 \"$PG_RELOCATED_PATH/.source\" \"$PG_RELOCATED_PATH/.target\" \\\n      | sed \"s|^\\(.*\\) [0-9]\\+$|${PG_EXTENSIONS_EXTENSION_PATH}/\\1|\" | sort > \"$PG_RELOCATED_PATH/.target-diff\"\n    comm -12 \"$PG_RELOCATED_PATH/.source-diff\" \"$PG_RELOCATED_PATH/.target-diff\" \\\n      | xargs rm -f || true\n    cp -a -u \"$EXTENSION_CONTROL_FILE\" \"${EXTENSION_CONTROL_FILE%/*}/$EXTENSION_NAME\"--*.sql \\\n      \"$PG_EXTENSIONS_EXTENSION_PATH/.\"\n    echo \"done.\"\n  done\n  touch \"$PG_RELOCATED_PATH/.extensions-done\"\nelse\n  echo \"$PG_EXTENSIONS_EXTENSION_PATH already relocated, skipping\"\nfi\n\nrm -f \"$PG_RELOCATED_PATH/.source\" \"$PG_RELOCATED_PATH/.target\" \\\n  \"$PG_RELOCATED_PATH/.source-diff\" \"$PG_RELOCATED_PATH/.target-diff\"",
                "reset-patroni.sh": "#!/bin/sh\n\nset -e\n\nif [ \"$PRIMARY_INSTANCE\" = \"$POD_NAME\" ]\nthen\n  if [ -f \"$PG_UPGRADE_PATH/.patroni-reset-for-upgrade-from-$SOURCE_VERSION-to-$TARGET_VERSION\" ]\n  then\n    echo \"Patroni reset already performed\"\n  else\n    PATRONI_INITIALIZATION=\"$(kubectl get endpoints -n \"$CLUSTER_NAMESPACE\" \"$PATRONI_ENDPOINT_NAME\" \\\n      --template='\n        {{- if and .metadata.annotations }}\n          {{- if .metadata.annotations.initialize }}true{{ end }}\n        {{- end }}')\"\n    if [ \"$PATRONI_INITIALIZATION\" = \"true\" ]\n    then\n      echo \"Resetting patroni\"\n      kubectl patch endpoints -n \"$CLUSTER_NAMESPACE\" \"$PATRONI_ENDPOINT_NAME\" \\\n        --type json -p '[{\"op\":\"remove\",\"path\":\"/metadata/annotations/initialize\"}]'\n    else\n      echo \"Patroni is already resetted\"\n    fi\n    mkdir -p \"$PG_UPGRADE_PATH\"\n    touch \"$PG_UPGRADE_PATH/.patroni-reset-for-upgrade-from-$SOURCE_VERSION-to-$TARGET_VERSION\"\n  fi\n\n  if [ -f \"$PG_UPGRADE_PATH/.patroni-reset-history-for-upgrade-from-$SOURCE_VERSION-to-$TARGET_VERSION\" ]\n  then\n    echo \"Patroni history reset already performed\"\n  else\n    PATRONI_HISTORY=\"$(kubectl get endpoints -n \"$CLUSTER_NAMESPACE\" \"$PATRONI_ENDPOINT_NAME\" \\\n      --template='\n        {{- if and .metadata.annotations }}\n          {{- if .metadata.annotations.history }}\n            {{- if not (eq .metadata.annotations.history \"[]\") }}true{{ end }}\n          {{- end }}\n        {{- end }}')\"\n    if [ \"$PATRONI_INITIALIZATION\" = \"true\" ]\n    then\n      echo \"Resetting patroni history\"\n      kubectl patch endpoints -n \"$CLUSTER_NAMESPACE\" \"$PATRONI_ENDPOINT_NAME\" \\\n        --type json -p '[{\"op\":\"replace\",\"path\":\"/metadata/annotations/history\",\"value\":\"[]\"}]'\n    else\n      echo \"Patroni history is already resetted\"\n    fi\n    mkdir -p \"$PG_UPGRADE_PATH\"\n    touch \"$PG_UPGRADE_PATH/.patroni-reset-history-for-upgrade-from-$SOURCE_VERSION-to-$TARGET_VERSION\"\n  fi\nelse\n  echo \"Skip resetting patroni\"\nfi\n",
                "run-dbops.sh": "#!/bin/sh\n\nLOCK_RESOURCE=\"$CLUSTER_CRD_NAME\"\nLOCK_RESOURCE_NAME=\"$CLUSTER_NAME\"\n\nRESOURCE_CRD_NAME=\"$DBOPS_CRD_NAME\"\nRESOURCE_NAME=\"$DBOPS_NAME\"\n\n. \"$LOCAL_BIN_SHELL_UTILS_PATH\"\n\nrun() {\n  set +e\n\n  touch \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n  touch \"$SHARED_PATH/$KEBAB_OP_NAME.err\"\n\n  sleep \"$TIMEOUT\" &\n\n  TIMEOUT_PID=\"$!\"\n\n  tail -q -f \"$SHARED_PATH/$KEBAB_OP_NAME.out\" \"$SHARED_PATH/$KEBAB_OP_NAME.err\" &\n\n  TAIL_PID=\"$!\"\n\n  if [ \"$EXCLUSIVE_OP\" = true ]\n  then\n    (set -e; acquire_lock) > \"$SHARED_PATH/try-lock\" 2>&1 &\n    ACQUIRE_LOCK_PID=$!\n    (\n    while { kill -0 \"$TIMEOUT_PID\" \\\n      && kill -0 \"$ACQUIRE_LOCK_PID\"; } 2>/dev/null\n    do\n      { sleep 1; } 2>/dev/null\n    done\n    )\n    if ! kill -0 \"$TIMEOUT_PID\" 2>/dev/null\n    then\n      kill_with_childs \"$ACQUIRE_LOCK_PID\"\n      release_lock >> \"$SHARED_PATH/try-lock\" 2>&1\n      echo \"Lock released\"\n      echo \"LOCK_LOST=false\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      echo \"TIMED_OUT=true\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      echo \"EXIT_CODE=1\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      kill_with_childs \"$TAIL_PID\"\n      return 0\n    else\n      wait \"$ACQUIRE_LOCK_PID\"\n      LOCK_ACQUIRED=\"$?\"\n      if [ \"$LOCK_ACQUIRED\" = 0 ]\n      then\n        echo \"Lock acquired\"\n        (set -e; maintain_lock) >> \"$SHARED_PATH/try-lock\" 2>&1 &\n        TRY_LOCK_PID=$!\n      else\n        kill_with_childs \"$TIMEOUT_PID\"\n        echo \"Can not acquire lock\"\n        cat \"$SHARED_PATH/try-lock\"\n        echo \"LOCK_LOST=true\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n        echo \"TIMED_OUT=false\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n        echo \"EXIT_CODE=1\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n        kill_with_childs \"$TAIL_PID\"\n        return 0\n      fi\n    fi\n  fi\n\n  run_op >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\" 2>> \"$SHARED_PATH/$KEBAB_OP_NAME.err\" &\n\n  PID=\"$!\"\n\n  (\n  while { kill -0 \"$PID\" && kill -0 \"$TIMEOUT_PID\" \\\n    && { [ \"$EXCLUSIVE_OP\" != true ] || kill -0 \"$TRY_LOCK_PID\"; }; } 2>/dev/null\n  do\n    { sleep 1; } 2>/dev/null\n  done\n  )\n\n  if kill -0 \"$PID\" 2>/dev/null\n  then\n    kill_with_childs \"$PID\"\n    if ! kill -0 \"$TIMEOUT_PID\" 2>/dev/null\n    then\n      if [ \"$EXCLUSIVE_OP\" = true ]\n      then\n        kill_with_childs \"$TRY_LOCK_PID\"\n        release_lock >> \"$SHARED_PATH/try-lock\" 2>&1\n        echo \"Lock released\"\n      fi\n      echo \"LOCK_LOST=false\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      echo \"TIMED_OUT=true\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      echo \"EXIT_CODE=1\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n    elif [ \"$EXCLUSIVE_OP\" = true ] && ! kill -0 \"$TRY_LOCK_PID\" 2>/dev/null\n    then\n      kill_with_childs \"$TIMEOUT_PID\"\n      echo \"LOCK_LOST=true\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      echo \"TIMED_OUT=false\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      echo \"EXIT_CODE=1\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n    else\n      if [ \"$EXCLUSIVE_OP\" = true ]\n      then\n        kill_with_childs \"$TRY_LOCK_PID\"\n        release_lock >> \"$SHARED_PATH/try-lock\" 2>&1\n        echo \"Lock released\"\n      fi\n      kill_with_childs \"$TIMEOUT_PID\"\n      echo \"LOCK_LOST=false\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      echo \"TIMED_OUT=false\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      echo \"EXIT_CODE=1\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n    fi\n  else\n    kill_with_childs \"$TIMEOUT_PID\"\n    if [ \"$EXCLUSIVE_OP\" = true ]\n    then\n      kill_with_childs \"$TRY_LOCK_PID\"\n      release_lock >> \"$SHARED_PATH/try-lock\" 2>&1\n      echo \"Lock released\"\n    fi\n    wait \"$PID\"\n    EXIT_CODE=\"$?\"\n    echo \"LOCK_LOST=false\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n    echo \"TIMED_OUT=false\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n    echo \"EXIT_CODE=$EXIT_CODE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n  fi\n\n  kill_with_childs \"$TAIL_PID\"\n\n  return 0\n}\n\nif [ -n \"$RUN_SCRIPT_PATH\" ]\nthen\n  . \"$RUN_SCRIPT_PATH\"\nfi\n\nrun\n",
                "run-major-version-upgrade.sh": "#!/bin/sh\n\nrun_op() {\n  set -e\n\n  PHASE=\"pre-checks\"\n  echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n  if [ -z \"$TARGET_BACKUP_PATH\" ]\n  then\n    echo \"Checking setting postgres version to $TARGET_VERSION and postgres config to $TARGET_POSTGRES_CONFIG...\"\n  else\n    echo \"Checking setting postgres version to $TARGET_VERSION, postgres config to $TARGET_POSTGRES_CONFIG and backup path to $TARGET_BACKUP_PATH...\"\n  fi\n  echo\n  until {\n    CLUSTER=\"$({ kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json || printf .; } | jq -c .)\"\n    CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '.spec.postgres.version = \"'\"$TARGET_VERSION\"'\"')\"\n    CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '.spec.postgres.extensions = '\"$TARGET_EXTENSIONS\")\"\n    CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '.spec.configurations.sgPostgresConfig = \"'\"$TARGET_POSTGRES_CONFIG\"'\"')\"\n    if [ -n \"$TARGET_BACKUP_PATH\" ]\n    then\n      CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '\n          if .spec.configurations.sgBackupConfig != null\n          then .spec.configurations.backupPath = \"'\"$TARGET_BACKUP_PATH\"'\"\n          else\n            if .spec.configurations.backups != null and (.spec.configurations.backups | length) > 0\n            then .spec.configurations.backups[0].path = \"'\"$TARGET_BACKUP_PATH\"'\"\n            else .\n            end\n          end')\"\n    fi\n    PATCH_OUTPUT=\"$(kubectl patch --dry-run \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" --type merge -p \"$CLUSTER\" 2>&1)\"\n    }\n  do\n    echo \"FAILURE=$NORMALIZED_OP_NAME failed. $PATCH_OUTPUT\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n    exit 1\n  done\n  echo \"done\"\n  echo\n\n  if [ \"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n    --template='{{ if .status.dbOps }}{{ if .status.dbOps.majorVersionUpgrade }}true{{ end }}{{ end }}')\" != \"true\" ]\n  then\n    INITIAL_PODS=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_POD_LABELS\" -o name)\"\n    INITIAL_INSTANCES=\"$(printf '%s' \"$INITIAL_PODS\" | cut -d / -f 2 | sort)\"\n    PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n    PRIMARY_INSTANCE=\"$(printf '%s' \"$PRIMARY_POD\" | cut -d / -f 2)\"\n    if [ \"x$PRIMARY_INSTANCE\" = \"x\" ] \\\n      || ! kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -o name > /dev/null\n    then\n      echo \"FAILURE=$NORMALIZED_OP_NAME failed. Primary instance $PRIMARY_INSTANCE not found!\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      return 1\n    fi\n    echo \"Found primary instance $PRIMARY_INSTANCE\"\n    echo\n    SOURCE_VERSION=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template='{{ .spec.postgres.version }}')\"\n    SOURCE_EXTENSIONS=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json \\\n      | jq '.spec.postgres.extensions')\"\n    SOURCE_POSTGRES_CONFIG=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template='{{ .spec.configurations.sgPostgresConfig }}')\"\n    SOURCE_BACKUP_PATH=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template='{{ if .spec.configurations.backups }}{{ (index .spec.configurations.backups 0).path }}{{ else }}{{ if .spec.configurations.backupPath }}{{ .spec.configurations.backupPath }}{{ end }}{{ end }}')\"\n    LOCALE=\"$(kubectl exec -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -c \"$PATRONI_CONTAINER_NAME\" \\\n      -- psql -t -A -c \"SHOW lc_collate\")\"\n    ENCODING=\"$(kubectl exec -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -c \"$PATRONI_CONTAINER_NAME\" \\\n      -- psql -t -A -c \"SHOW server_encoding\")\"\n    DATA_CHECKSUM=\"$(kubectl exec -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -c \"$PATRONI_CONTAINER_NAME\" \\\n      -- psql -t -A -c \"SELECT CASE WHEN current_setting('data_checksums')::bool THEN 'true' ELSE 'false' END\")\"\n\n    if [ -z \"${TARGET_VERSION}\" ] || [ \"${SOURCE_VERSION%%.*}\" -ge \"${TARGET_VERSION%%.*}\" ]\n    then\n      echo \"FAILURE=$NORMALIZED_OP_NAME failed. Can not perform major version upgrade from version $SOURCE_VERSION to version $TARGET_VERSION\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      exit 1\n    fi\n\n    echo \"Signaling major version upgrade started to cluster\"\n    echo\n    DBOPS_PATCH=\"$(cat << EOF\n      {\n        \"majorVersionUpgrade\":{\n          \"initialInstances\": [$(\n            FIRST=true\n            for INSTANCE in $INITIAL_INSTANCES\n            do\n              if \"$FIRST\"\n              then\n                printf '%s' \"\\\"$INSTANCE\\\"\"\n                FIRST=false\n              else\n                printf '%s' \",\\\"$INSTANCE\\\"\"\n              fi\n            done\n            )],\n          \"primaryInstance\": \"$PRIMARY_INSTANCE\",\n          \"phase\": \"$PHASE\",\n          \"sourcePostgresVersion\": \"$SOURCE_VERSION\",\n          \"sourcePostgresExtensions\": $SOURCE_EXTENSIONS,\n          \"sourceSgPostgresConfig\": \"$SOURCE_POSTGRES_CONFIG\",\n          $(\n          if [ -n \"$SOURCE_BACKUP_PATH\" ]\n          then\n            printf %s '\"sourceBackupPath\": \"$SOURCE_BACKUP_PATH\",'\n          fi\n          )\n          \"targetPostgresVersion\": \"$TARGET_VERSION\",\n          \"locale\": \"$LOCALE\",\n          \"encoding\": \"$ENCODING\",\n          \"dataChecksum\": $DATA_CHECKSUM,\n          \"link\": $LINK,\n          \"clone\": $CLONE,\n          \"check\": $CHECK\n        }\n      }\nEOF\n    )\"\n\n    until {\n      DBOPS=\"$({ kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json || printf .; } | jq -c .)\"\n      DBOPS=\"$(printf '%s' \"$DBOPS\" | jq -c '.status.dbOps = '\"$DBOPS_PATCH\")\"\n      printf '%s' \"$DBOPS\" | kubectl replace --raw /apis/\"$CRD_GROUP\"/v1/namespaces/\"$CLUSTER_NAMESPACE\"/\"$CLUSTER_CRD_NAME\"/\"$CLUSTER_NAME\" -f -\n      }\n    do\n      sleep 1\n    done\n  else\n    PREVIOUS_TARGET_VERSION=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template='{{ .status.dbOps.majorVersionUpgrade.targetPostgresVersion }}')\"\n    SOURCE_VERSION=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template='{{ .status.dbOps.majorVersionUpgrade.sourcePostgresVersion }}')\"\n    SOURCE_EXTENSIONS=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      -o json | jq '.status.dbOps.majorVersionUpgrade.sourcePostgresExtensions')\"\n    if [ \"${PREVIOUS_TARGET_VERSION%.*}\" != \"${TARGET_VERSION%.*}\" ]\n    then\n      echo \"FAILURE=$NORMALIZED_OP_NAME failed. Can not perform major version upgrade from version $SOURCE_VERSION to version $TARGET_VERSION since a major version upgrade to $PREVIOUS_TARGET_VERSION did not complete\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      exit 1\n    fi\n    SOURCE_POSTGRES_CONFIG=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template='{{ .status.dbOps.majorVersionUpgrade.sourceSgPostgresConfig }}')\"\n    SOURCE_BACKUP_PATH=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template='{{ if .status.dbOps.majorVersionUpgrade.sourceBackupPath }}{{ .status.dbOps.majorVersionUpgrade.sourceBackupPath }}{{ end }}')\"\n    INITIAL_INSTANCES=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template='{{ .status.dbOps.majorVersionUpgrade.initialInstances }}')\"\n    INITIAL_INSTANCES=\"$(printf '%s' \"$INITIAL_INSTANCES\" | tr -d '[]' | tr ' ' '\\n')\"\n    PRIMARY_INSTANCE=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template='{{ .status.dbOps.majorVersionUpgrade.primaryInstance }}')\"\n\n    PHASE=\"pre-upgrade\"\n    echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n    until kubectl patch \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" --type=json \\\n        -p \"$(cat << EOF\n[\n  {\"op\":\"replace\",\"path\":\"/status/dbOps/majorVersionUpgrade/targetPostgresVersion\",\"value\": \"$TARGET_VERSION\"},\n  {\"op\":\"replace\",\"path\":\"/status/dbOps/majorVersionUpgrade/link\",\"value\": $LINK},\n  {\"op\":\"replace\",\"path\":\"/status/dbOps/majorVersionUpgrade/clone\",\"value\": $CLONE},\n  {\"op\":\"replace\",\"path\":\"/status/dbOps/majorVersionUpgrade/check\",\"value\": $CHECK}\n]\nEOF\n        )\"\n    do\n      sleep 1\n    done\n  fi\n\n  PHASE=\"pre-upgrade\"\n  echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n  if [ -z \"$TARGET_BACKUP_PATH\" ]\n  then\n    echo \"Setting postgres version to $TARGET_VERSION and postgres config to $TARGET_POSTGRES_CONFIG...\"\n  else\n    echo \"Setting postgres version to $TARGET_VERSION, postgres config to $TARGET_POSTGRES_CONFIG and backup path to $TARGET_BACKUP_PATH...\"\n  fi\n  echo\n  until {\n    CLUSTER=\"$({ kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json || printf .; } | jq -c .)\"\n    CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '.spec.postgres.version = \"'\"$TARGET_VERSION\"'\"')\"\n    CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '.spec.postgres.extensions = '\"$TARGET_EXTENSIONS\")\"\n    CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '.spec.configurations.sgPostgresConfig = \"'\"$TARGET_POSTGRES_CONFIG\"'\"')\"\n    if [ -n \"$TARGET_BACKUP_PATH\" ]\n    then\n      CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '\n          if .spec.configurations.sgBackupConfig != null\n          then .spec.configurations.backupPath = \"'\"$TARGET_BACKUP_PATH\"'\"\n          else\n            if .spec.configurations.backups != null and (.spec.configurations.backups | length) > 0\n            then .spec.configurations.backups[0].path = \"'\"$TARGET_BACKUP_PATH\"'\"\n            else .\n            end\n          end')\"\n    fi\n    REPLACE_OUTPUT=\"$(printf '%s' \"$CLUSTER\" | kubectl replace --raw /apis/\"$CRD_GROUP\"/v1/namespaces/\"$CLUSTER_NAMESPACE\"/\"$CLUSTER_CRD_NAME\"/\"$CLUSTER_NAME\" -f - 2>&1)\"\n    }\n  do\n    if ! printf %s \"$REPLACE_OUTPUT\" | grep -q 'the object has been modified; please apply your changes to the latest version and try again'\n    then\n      echo \"FAILURE=$NORMALIZED_OP_NAME failed. $REPLACE_OUTPUT\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      exit 1\n    fi \n    sleep 1\n  done\n  echo \"done\"\n  echo\n\n  echo \"Waiting StatefulSet to be updated...\"\n  echo\n  while true\n  do\n    IS_STATEFULSET_UPDATED=\"$(kubectl get sts -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json \\\n      | jq \"(.spec.template.spec.initContainers | any(.name == \\\"$MAJOR_VERSION_UPGRADE_CONTAINER_NAME\\\"))\n        and (.spec.template.metadata.annotations[\\\"$POSTGRES_VERSION_KEY\\\"] == \\\"$TARGET_VERSION\\\")\" || printf false)\"\n    if [ \"$IS_STATEFULSET_UPDATED\" = \"true\" ]\n    then\n      break\n    fi\n    sleep 1\n  done\n  echo \"done\"\n  echo\n\n  INITIAL_INSTANCES_COUNT=\"$(printf '%s' \"$INITIAL_INSTANCES\" | tr ' ' 's' | tr '\\n' ' ' | wc -w)\"\n  echo \"Initial instances:\"\n  echo \"$INITIAL_INSTANCES\" | sed 's/^/ - /'\n  echo\n\n  update_status init\n\n  RETRY=3\n  while [ \"$RETRY\" != 0 ]\n  do\n    CURRENT_PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n    if [ -n \"$CURRENT_PRIMARY_POD\" ]\n    then\n      break\n    fi\n    RETRY=\"$((RETRY-1))\"\n    sleep 5\n  done\n  CURRENT_PRIMARY_INSTANCE=\"$(printf '%s' \"$CURRENT_PRIMARY_POD\" | cut -d / -f 2)\"\n  if [ \"x$CURRENT_PRIMARY_INSTANCE\" != \"x\" ] \\\n    && [ \"$PRIMARY_INSTANCE\" != \"$CURRENT_PRIMARY_INSTANCE\" ]\n  then\n    echo \"FAILURE=$NORMALIZED_OP_NAME failed. Please check pod $PRIMARY_INSTANCE logs for more info\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n    exit 1\n  fi\n\n  PHASE=\"downscale\"\n  echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n  downscale_cluster_instances\n\n  PHASE=\"checkpoint\"\n  echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n  echo \"Running a double CHECKPOINT on the primary instance $PRIMARY_INSTANCE before major version upgrade...\"\n  kubectl exec -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -c \"$PATRONI_CONTAINER_NAME\" \\\n      -- psql -t -A -c \"CHECKPOINT\" -c \"CHECKPOINT\"\n\n  PHASE=\"upgrade\"\n  echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n  if [ \"$CHECK\" != true ]\n  then\n    echo \"Restarting primary instance $PRIMARY_INSTANCE to perform major version upgrade...\"\n    create_event \"MajorVersionUpgradeStarted\" \"Normal\" \"Major version upgrade started on instance $PRIMARY_INSTANCE\"\n\n    kubectl delete pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\"\n\n    echo \"done\"\n    echo\n\n    echo \"Waiting primary instance $PRIMARY_INSTANCE major version upgrade...\"\n\n    wait_for_major_version_upgrade \"$PRIMARY_INSTANCE\"\n    if [ \"$?\" != 0 ] # TODO: check if this is needed only due to a shell test framework bug\n    then\n      return 1\n    fi\n    create_event \"MajorVersionUpgradeCompleted\" \"Normal\" \"Major version upgrade completed on instance $PRIMARY_INSTANCE\"\n\n    PHASE=\"post-upgrade\"\n    echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n    echo \"Major version upgrade completed successfully, removing old data from instance $PRIMARY_INSTANCE\"\n    kubectl exec -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -c \"$PATRONI_CONTAINER_NAME\" -- sh -c \"$(\n      cat << EOF\nrm -rf \"$PG_UPGRADE_PATH/$SOURCE_VERSION/data\"\nif [ -d \"$PG_RELOCATED_BASE_PATH/$SOURCE_VERSION\" ]\nthen\n  chmod -R a+rw \"$PG_RELOCATED_BASE_PATH/$SOURCE_VERSION\"\n  rm -rf \"$PG_RELOCATED_BASE_PATH/$SOURCE_VERSION\"\nfi\nif [ -d \"$PG_EXTENSIONS_BASE_PATH/${SOURCE_VERSION%.*}\" ]\nthen\n  chmod -R a+rw \"$PG_EXTENSIONS_BASE_PATH/${SOURCE_VERSION%.*}\"\n  rm -rf \"$PG_EXTENSIONS_BASE_PATH/${SOURCE_VERSION%.*}\"\nfi\nEOF\n      )\"\n  else\n    echo \"Restarting primary instance $PRIMARY_INSTANCE to perform major version upgrade check...\"\n    create_event \"MajorVersionUpgradeCheckStarted\" \"Normal\" \"Major version upgrade check started on instance $PRIMARY_INSTANCE\"\n\n    kubectl delete pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\"\n\n    echo \"done\"\n    echo\n\n    echo \"Waiting primary instance $PRIMARY_INSTANCE major version upgrade check...\"\n\n    wait_for_major_version_upgrade_check \"$PRIMARY_INSTANCE\"\n    if [ \"$?\" != 0 ] # TODO: check if this is needed only due to a shell test framework bug\n    then\n      return 1\n    fi\n    create_event \"MajorVersionUpgradeCheckCompleted\" \"Normal\" \"Major version upgrade check completed on instance $PRIMARY_INSTANCE\"\n  fi\n\n  CURRENT_PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n  CURRENT_PRIMARY_INSTANCE=\"$(printf '%s' \"$CURRENT_PRIMARY_POD\" | cut -d / -f 2)\"\n  if [ \"$PRIMARY_INSTANCE\" != \"$CURRENT_PRIMARY_INSTANCE\" ]\n  then\n    echo \"FAILURE=$NORMALIZED_OP_NAME failed. Please check pod $PRIMARY_INSTANCE logs for more info\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n    return 1\n  fi\n\n  echo \"done\"\n  echo\n\n  PHASE=\"upscale\"\n  echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n  update_status\n\n  upscale_cluster_instances\n\n  PHASE=\"cleanup\"\n  echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n  update_status\n\n  echo \"Signaling major version upgrade finished to cluster\"\n  echo\n\n  until kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json | \\\n      jq 'del(.status.dbOps)' | \\\n      kubectl replace --raw /apis/\"$CRD_GROUP\"/v1/namespaces/\"$CLUSTER_NAMESPACE\"/\"$CLUSTER_CRD_NAME\"/\"$CLUSTER_NAME\" -f -\n  do\n    sleep 1\n  done\n}\n\nupdate_status() {\n  PHASE=\"$(grep '^PHASE=' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" | tail -n 1 | cut -d = -f 2)\"\n  STATEFULSET_UPDATE_REVISION=\"$(kubectl get sts -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n    --template='{{ .status.updateRevision }}')\"\n  if [ \"$1\" = \"init\" ]\n  then\n    PENDING_TO_RESTART_INSTANCES=\"$INITIAL_INSTANCES\"\n  else\n    PENDING_TO_RESTART_INSTANCES=\"$(echo \"$INITIAL_INSTANCES\" | tr ' ' '\\n' | grep -vxF '' \\\n      | while read INSTANCE\n        do\n          PODS=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_POD_LABELS\" -o name)\"\n          if ! printf '%s' \"$PODS\" | cut -d / -f 2 | grep -q \"^$INSTANCE$\"\n          then\n            echo \"$INSTANCE\"\n            continue\n          fi\n          PATRONI_STATUS=\"$(kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\" \\\n            --template='{{ .metadata.annotations.status }}')\"\n          POD_STATEFULSET_REVISION=\"$(kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\" \\\n            --template='{{ index .metadata.labels \"controller-revision-hash\" }}')\"\n          if [ \"$STATEFULSET_UPDATE_REVISION\" != \"$POD_STATEFULSET_REVISION\" ] \\\n            || echo \"$PATRONI_STATUS\" | grep -q '\"pending_restart\":true'\n          then\n            echo \"$INSTANCE\"\n          fi\n        done)\"\n  fi\n  PENDING_TO_RESTART_INSTANCES_COUNT=\"$(echo \"$PENDING_TO_RESTART_INSTANCES\" | tr ' ' 's' | tr '\\n' ' ' | wc -w)\"\n  EXISTING_PODS=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_POD_LABELS\" -o name)\"\n  RESTARTED_INSTANCES=\"$(echo \"$EXISTING_PODS\" | cut -d / -f 2 | grep -v \"^\\($(\n      echo \"$PENDING_TO_RESTART_INSTANCES\" | tr '\\n' ' ' | sed '{s/ $//;s/ /\\\\|/g}'\n    )\\)$\" | sort)\"\n  RESTARTED_INSTANCES_COUNT=\"$(echo \"$RESTARTED_INSTANCES\" | tr ' ' 's' | tr '\\n' ' ' | wc -w)\"\n  echo \"Pending to $NORMALIZED_OP_NAME instances:\"\n  if [ \"$PENDING_TO_RESTART_INSTANCES_COUNT\" = 0 ]\n  then\n    echo '<none>'\n  else\n    echo \"$PENDING_TO_RESTART_INSTANCES\" | tr ' ' '\\n' | sed 's/^/ - /'\n  fi\n  echo\n\n  OPERATION=\"$(kubectl get \"$DBOPS_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$DBOPS_NAME\" \\\n    --template='{{ if .status.majorVersionUpgrade }}replace{{ else }}add{{ end }}')\"\n  kubectl patch \"$DBOPS_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$DBOPS_NAME\" --type=json \\\n    -p \"$(cat << EOF\n[\n  {\"op\":\"$OPERATION\",\"path\":\"/status/majorVersionUpgrade\",\"value\":{\n      \"phase\": \"$PHASE\",\n      \"sourcePostgresVersion\": \"$SOURCE_VERSION\",\n      \"targetPostgresVersion\": \"$TARGET_VERSION\",\n      \"primaryInstance\": \"$PRIMARY_INSTANCE\",\n      \"initialInstances\": [$(\n        FIRST=true\n        for INSTANCE in $INITIAL_INSTANCES\n        do\n          if \"$FIRST\"\n          then\n            printf '%s' \"\\\"$INSTANCE\\\"\"\n            FIRST=false\n          else\n            printf '%s' \",\\\"$INSTANCE\\\"\"\n          fi\n        done\n        )],\n      \"pendingToRestartInstances\": [$(\n        FIRST=true\n        for INSTANCE in $PENDING_TO_RESTART_INSTANCES\n        do\n          if \"$FIRST\"\n          then\n            printf '%s' \"\\\"$INSTANCE\\\"\"\n            FIRST=false\n          else\n            printf '%s' \",\\\"$INSTANCE\\\"\"\n          fi\n        done\n        )],\n      \"restartedInstances\": [$(\n        FIRST=true\n        for INSTANCE in $RESTARTED_INSTANCES\n        do\n          if \"$FIRST\"\n          then\n            printf '%s' \"\\\"$INSTANCE\\\"\"\n            FIRST=false\n          else\n            printf '%s' \",\\\"$INSTANCE\\\"\"\n          fi\n        done\n        )]\n    }\n  }\n]\nEOF\n    )\"\n}\n\nwait_for_instance() {\n  local INSTANCE=\"$1\"\n  until kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\" -o name >/dev/null 2>&1\n  do\n    sleep 1\n  done\n  until kubectl wait pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\" --for condition=Ready --timeout 0 >/dev/null 2>&1\n  do\n    sleep 1\n  done\n}\n\nwait_for_major_version_upgrade() {\n  local PRIMARY_INSTANCE=\"$1\"\n  until kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -o name >/dev/null 2>&1\n  do\n    sleep 1\n  done\n  until kubectl wait pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" --for condition=Ready --timeout 0 >/dev/null 2>&1\n  do\n    POD_INIT_CONTAINER_FAILURES=\"$(kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -o json \\\n      | jq '.status.containerStatuses + .status.initContainerStatuses + [] | map(select(.restartCount > 0)) | length' \\\n      || printf 0)\"\n    if [ \"$POD_INIT_CONTAINER_FAILURES\" -gt 0 ]\n    then\n      echo \"FAILURE=$NORMALIZED_OP_NAME failed. Please check pod $PRIMARY_INSTANCE logs for more info\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      echo\n      kubectl logs -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" --all-containers --prefix --timestamps --ignore-errors || true\n      echo\n      rollback_major_version_upgrade \"$PRIMARY_INSTANCE\"\n      return 1\n    fi\n    sleep 1\n  done\n}\n\nwait_for_major_version_upgrade_check() {\n  local PRIMARY_INSTANCE=\"$1\"\n  until kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -o name >/dev/null 2>&1\n  do\n    sleep 1\n  done\n  while true\n  do\n    MAJOR_VERSION_UPGRADE_LOGS=\"$(\n      kubectl logs -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -c \"$MAJOR_VERSION_UPGRADE_CONTAINER_NAME\" 2>/dev/null \\\n        | grep \"^Major version upgrade check \" || true)\"\n    POD_INIT_CONTAINER_FAILURES=\"$(kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -o json \\\n      | jq '.status.containerStatuses + .status.initContainerStatuses + [] | map(select(.restartCount > 0)) | length' \\\n      || printf 0)\"\n    if [ \"$POD_INIT_CONTAINER_FAILURES\" -gt 0 ] \\\n      || echo \"$MAJOR_VERSION_UPGRADE_LOGS\" | grep -qxF \"Major version upgrade check performed\"\n    then\n      if [ \"$POD_INIT_CONTAINER_FAILURES\" -gt 0 ]\n      then\n        echo \"Major version upgrade check failed\"\n        echo\n        kubectl logs -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" --all-containers --prefix --timestamps --ignore-errors || true\n        echo\n      else\n        if echo \"$MAJOR_VERSION_UPGRADE_LOGS\" | grep -qxF \"Major version upgrade check failed\"\n        then\n          echo \"Major version upgrade check failed\"\n        else\n          echo \"Major version upgrade check completed successfully\"\n        fi\n        echo\n        kubectl logs -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -c \"$MAJOR_VERSION_UPGRADE_CONTAINER_NAME\" || true\n        echo\n      fi\n      rollback_major_version_upgrade \"$PRIMARY_INSTANCE\"\n      if [ \"$POD_INIT_CONTAINER_FAILURES\" -gt 0 ] \\\n        || echo \"$MAJOR_VERSION_UPGRADE_LOGS\" | grep -qxF \"Major version upgrade check failed\"\n      then\n        return 1\n      fi\n      break\n    fi\n    sleep 1\n  done\n}\n\nrollback_major_version_upgrade() {\n  local PRIMARY_INSTANCE=\"$1\"\n\n  PHASE=\"pre-rollback\"\n  echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n  if [ -z \"$SOURCE_BACKUP_PATH\" ]\n  then\n    echo \"Rollback major version upgrade by setting postgres version to $SOURCE_VERSION and postgres config to $SOURCE_POSTGRES_CONFIG...\"\n  else\n    echo \"Rollback major version upgrade by setting postgres version to $SOURCE_VERSION, postgres config to $SOURCE_POSTGRES_CONFIG and backup path to $SOURCE_BACKUP_PATH...\"\n  fi\n  echo\n  until {\n    CLUSTER=\"$({ kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json || printf .; } | jq -c .)\"\n    CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '.spec.postgres.version = \"'\"$SOURCE_VERSION\"'\"')\"\n    CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '.spec.postgres.extensions = '\"$SOURCE_EXTENSIONS\")\"\n    CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '.spec.configurations.sgPostgresConfig = \"'\"$SOURCE_POSTGRES_CONFIG\"'\"')\"\n    if [ -n \"$SOURCE_BACKUP_PATH\" ]\n    then\n      CLUSTER=\"$(printf '%s' \"$CLUSTER\" | jq -c '\n          if .spec.configurations.sgBackupConfig != null\n          then .spec.configurations.backupPath = \"'\"$SOURCE_BACKUP_PATH\"'\"\n          else\n            if .spec.configurations.backups != null and (.spec.configurations.backups | length) > 0\n            then .spec.configurations.backups[0].path = \"'\"$SOURCE_BACKUP_PATH\"'\"\n            else .\n            end\n          end')\"\n    fi\n    printf '%s' \"$CLUSTER\" | kubectl replace --raw /apis/\"$CRD_GROUP\"/v1/namespaces/\"$CLUSTER_NAMESPACE\"/\"$CLUSTER_CRD_NAME\"/\"$CLUSTER_NAME\" -f -\n    }\n  do\n    sleep 1\n  done\n  echo \"done\"\n  echo\n\n  echo \"Signaling major version upgrade rollback started to cluster\"\n  echo\n  until {\n    DBOPS=\"$({ kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json || printf .; } | jq -c .)\"\n    DBOPS=\"$(printf '%s' \"$DBOPS\" | jq -c '.status.dbOps.majorVersionUpgrade.rollback = true')\"\n    printf '%s' \"$DBOPS\" | kubectl replace --raw /apis/\"$CRD_GROUP\"/v1/namespaces/\"$CLUSTER_NAMESPACE\"/\"$CLUSTER_CRD_NAME\"/\"$CLUSTER_NAME\" -f -\n    }\n  do\n    sleep 1\n  done\n\n  echo \"Waiting StatefulSet to be updated...\"\n  echo\n  while true\n  do\n    IS_STATEFULSET_UPDATED=\"$(kubectl get sts -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json \\\n      | jq \"(.spec.template.spec.initContainers | any(.name == \\\"$MAJOR_VERSION_UPGRADE_CONTAINER_NAME\\\"))\n        and (.spec.template.spec.initContainers[] | select(.name == \\\"$MAJOR_VERSION_UPGRADE_CONTAINER_NAME\\\")\n          | .env | any(.name == \\\"ROLLBACK\\\" and .value == \\\"true\\\"))\" || printf false)\"\n    if [ \"$IS_STATEFULSET_UPDATED\" = \"true\" ]\n    then\n      break\n    fi\n    sleep 1\n  done\n  echo \"done\"\n  echo\n\n  PHASE=\"rollback\"\n  echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n  echo \"Restarting primary instance $PRIMARY_INSTANCE to perform major version upgrade rollback...\"\n  create_event \"MajorVersionUpgradeRollbackStarted\" \"Normal\" \"Major version upgrade rollback started on instance $PRIMARY_INSTANCE\"\n\n  kubectl delete pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\"\n\n  echo \"done\"\n  echo\n\n  echo \"Waiting primary instance $PRIMARY_INSTANCE major version upgrade rollback...\"\n\n  wait_for_instance \"$PRIMARY_INSTANCE\"\n  create_event \"MajorVersionUpgradeRollbackCompleted\" \"Normal\" \"Major version upgrade rollback completed on instance $PRIMARY_INSTANCE\"\n\n  CURRENT_PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n  CURRENT_PRIMARY_INSTANCE=\"$(printf '%s' \"$CURRENT_PRIMARY_POD\" | cut -d / -f 2)\"\n  if [ \"$PRIMARY_INSTANCE\" != \"$CURRENT_PRIMARY_INSTANCE\" ]\n  then\n    echo \"FAILURE=$NORMALIZED_OP_NAME failed: expected primary pod to be $PRIMARY_INSTANCE but was $CURRENT_PRIMARY_INSTANCE.\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n    return 1\n  fi\n\n  echo \"done\"\n  echo\n\n  PHASE=\"cleanup\"\n  echo \"PHASE=$PHASE\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n\n  echo \"Signaling major version upgrade rollback finished to cluster\"\n  echo\n\n  until kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json | \\\n      jq 'del(.status.dbOps)' | \\\n      kubectl replace --raw /apis/\"$CRD_GROUP\"/v1/namespaces/\"$CLUSTER_NAMESPACE\"/\"$CLUSTER_CRD_NAME\"/\"$CLUSTER_NAME\" -f -\n  do\n    sleep 1\n  done\n}\n\ndownscale_cluster_instances() {\n  if [ \"$INITIAL_INSTANCES_COUNT\" -gt 1 ]\n  then\n    echo \"Downscaling cluster to 1 instance\"\n    create_event \"DecreasingInstances\" \"Normal\" \"Decreasing instances of $CLUSTER_CRD_NAME $CLUSTER_NAME\"\n    echo\n\n    kubectl patch \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" --type=json \\\n      -p \"$(cat << EOF\n[\n  {\"op\":\"replace\",\"path\":\"/spec/instances\",\"value\":1}\n]\nEOF\n        )\"\n\n    echo \"Waiting cluster downscale...\"\n\n    until [ \"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_POD_LABELS\" -o name | cut -d / -f 2)\" = \"$PRIMARY_INSTANCE\" ]\n    do\n      sleep 1\n    done\n\n    echo \"done\"\n    create_event \"InstancesDecreased\" \"Normal\" \"Decreased instances of $CLUSTER_CRD_NAME $CLUSTER_NAME\"\n    echo\n  fi\n}\n\nupscale_cluster_instances() {\n  if [ \"$INITIAL_INSTANCES_COUNT\" -gt 1 ]\n  then\n    echo \"Upscaling cluster to $INITIAL_INSTANCES_COUNT instances\"\n    create_event \"IncreasingInstances\" \"Normal\" \"Increasing instances of $CLUSTER_CRD_NAME $CLUSTER_NAME\"\n    echo\n\n    kubectl patch \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" --type=json \\\n      -p \"$(cat << EOF\n[\n  {\"op\":\"replace\",\"path\":\"/spec/instances\",\"value\":$INITIAL_INSTANCES_COUNT}\n]\nEOF\n        )\"\n\n    echo \"Waiting cluster upscale\"\n    echo\n\n    for INSTANCE in $INITIAL_INSTANCES\n    do\n      if [ \"$INSTANCE\" = \"$PRIMARY_INSTANCE\" ]\n      then\n        continue\n      fi\n\n      echo \"Waiting instance $INSTANCE to become ready...\"\n\n      wait_for_instance \"$INSTANCE\"\n\n      echo \"done\"\n      echo\n\n      update_status\n    done\n\n    echo \"Cluster upscale done\"\n    create_event \"InstancesIncreased\" \"Normal\" \"Increased instances of $CLUSTER_CRD_NAME $CLUSTER_NAME\"\n    echo\n  fi\n}\n",
                "run-pgbench.sh": "#!/bin/sh\n\nDATABASE_NAME=\"pgbench_$(printf '%x' \"$(date +%s)\")\"\n\nrun_op() {\n  set +e\n\n  (\n  set -e\n\n  run_pgbench\n  )\n\n  EXIT_CODE=\"$?\"\n\n  try_drop_pgbench_database\n\n  return \"$EXIT_CODE\"\n}\n\nrun_pgbench() {\n  (\n  export PGHOST=\"$PRIMARY_PGHOST\"\n\n  DATABASE_EXISTS=\"$(psql -t -A \\\n    -c \"SELECT EXISTS (SELECT * FROM pg_database WHERE datname = '$DATABASE_NAME')\")\"\n  if [ \"$DATABASE_EXISTS\" != 'f' ]\n  then\n    try_drop_pgbench_database\n  fi\n\n  if MESSAGE=\"$(psql -c \"CREATE DATABASE $DATABASE_NAME\" 2>&1)\"\n  then\n    echo \"$MESSAGE\"\n    create_event_service \"DatabaseCreated\" \"Normal\" \"Database $DATABASE_NAME created\"\n  else\n    echo \"$MESSAGE\"\n    create_event_service \"CreateDatabaseFailed\" \"Warning\" \"Can not create database $DATABASE_NAME: $MESSAGE\"\n    return 1\n  fi\n\n  create_event_service \"BenchmarkInitializationStarted\" \"Normal\" \"Benchamrk initialization started\"\n  if MESSAGE=\"$(pgbench -s \"$SCALE\" -i \"$DATABASE_NAME\" 2>&1)\"\n  then\n    echo \"$MESSAGE\"\n    create_event_service \"BenchmarkInitialized\" \"Normal\" \"Benchamrk initialized\"\n  else\n    echo \"$MESSAGE\"\n    create_event_service \"BenchmarkInitializationFailed\" \"Warning\" \"Can not initialize benchmark: $MESSAGE\"\n    return 1\n  fi\n  )\n\n  if \"$READ_WRITE\"\n  then\n    create_event_service \"BenchmarkStarted\" \"Normal\" \"Benchamrk started\"\n    if MESSAGE=\"$(pgbench -M \"$PROTOCOL\" -s \"$SCALE\" -T \"$DURATION\" -c \"$CLIENTS\" -j \"$JOBS\" -r -P 1 \"$DATABASE_NAME\" 2>&1)\"\n    then\n      echo \"$MESSAGE\"\n      create_event_service \"BenchmarkCompleted\" \"Normal\" \"Benchmark completed\"\n    else\n      echo \"$MESSAGE\"\n      create_event_service \"BenchmarkFailed\" \"Warning\" \"Can not complete benchmark: $MESSAGE\"\n      return 1\n    fi\n  else\n    create_event_service \"BenchmarkPostInitializationStarted\" \"Normal\" \"Benchamrk post initialization started\"\n    PGBENCH_ACCOUNTS_COUNT=\"$(PGHOST=\"$PRIMARY_PGHOST\" psql -t -A -d \"$DATABASE_NAME\" \\\n      -c \"SELECT COUNT(*) FROM pgbench_accounts\")\"\n\n    until [ \"$(psql -t -A -d \"$DATABASE_NAME\" \\\n      -c \"SELECT COUNT(*) FROM pgbench_accounts\")\" = \"$PGBENCH_ACCOUNTS_COUNT\" ]\n    do\n      sleep 1\n    done\n    create_event_service \"BenchmarkPostInitializationCompleted\" \"Normal\" \"Benchamrk post initialization completed\"\n\n    create_event_service \"BenchmarkStarted\" \"Normal\" \"Benchamrk started\"\n    if MESSAGE=\"$(pgbench -b \"select-only\" -M \"$PROTOCOL\" -s \"$SCALE\" -T \"$DURATION\" -c \"$CLIENTS\" -j \"$JOBS\" -r -P 1 \"$DATABASE_NAME\" 2>&1)\"\n    then\n      echo \"$MESSAGE\"\n      create_event_service \"BenchmarkCompleted\" \"Normal\" \"Benchmark completed\"\n    else\n      echo \"$MESSAGE\"\n      create_event_service \"BenchmarkFailed\" \"Warning\" \"Can not complete benchmark: $MESSAGE\"\n      return 1\n    fi\n  fi\n}\n\ntry_drop_pgbench_database() {\n  (\n  set +e\n  DROP_RETRY=3\n  while [ \"$DROP_RETRY\" -ge 0 ]\n  do\n      if MESSAGE=\"$(psql \\\n        -c \"SELECT pg_cancel_backend(pid) FROM pg_stat_activity WHERE datname = '$DATABASE_NAME' AND pid != pg_backend_pid()\" \\\n        -c \"DROP DATABASE $DATABASE_NAME\" 2>&1)\"\n    then\n      break\n    fi\n    create_event_service \"DropDatabaseFailed\" \"Warning\" \"Can not drop $DATABASE_NAME database: $MESSAGE\"\n    DROP_RETRY=\"$((DROP_RETRY - 1))\"\n    sleep 3\n  done\n  )\n}\n\n",
                "run-repack.sh": "#!/bin/sh\n\nrun_op() {\n  set -e\n\n  if [ -z \"$DATABASES\" ]\n  then\n    run_command -a\n  else\n    echo \"$DATABASES\" | while read CONFIG DATABASE\n      do\n        eval \"$CONFIG\"\n        run_command -d \"$DATABASE\"\n      done\n  fi\n}\n\nrun_command() {\n  if \"$NO_ORDER\"\n  then\n    COMMAND=\"$COMMAND\"' -n'\n  fi\n  if [ -n \"$WAIT_TIMEOUT\" ]\n  then\n    COMMAND=\"$COMMAND\"\" -T $WAIT_TIMEOUT\"\n  fi\n  if \"$NO_KILL_BACKEND\"\n  then\n    COMMAND=\"$COMMAND\"' -D'\n  fi\n  if \"$NO_ANALYZE\"\n  then\n    COMMAND=\"$COMMAND\"' -Z'\n  fi\n  if \"$EXCLUDE_EXTENSION\"\n  then\n    COMMAND=\"$COMMAND\"' -C'\n  fi\n  get_primary_instance\n  kubectl exec -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -c \"$PATRONI_CONTAINER_NAME\" -- pg_repack $ARGS \"$@\"\n}\n\nget_primary_instance() {\n  PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n  PRIMARY_INSTANCE=\"$(printf '%s' \"$PRIMARY_POD\" | cut -d / -f 2)\"\n  until kubectl wait pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" --for condition=Ready --timeout 0 >/dev/null 2>&1\n  do\n    sleep 1\n    PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n    PRIMARY_INSTANCE=\"$(printf '%s' \"$PRIMARY_POD\" | cut -d / -f 2)\"\n  done\n}\n",
                "run-restart.sh": "#!/bin/sh\n\nrun_op() {\n  set -e\n\n  START_TIMESTAMP=\"$(date +%s)\"\n\n  if [ \"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n    --template=\"{{ if .status.dbOps }}{{ if .status.dbOps.$OP_NAME }}true{{ end }}{{ end }}\")\" != \"true\" ]\n  then\n    INITIAL_PODS=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_POD_LABELS\" -o name)\"\n    INITIAL_INSTANCES=\"$(printf '%s' \"$INITIAL_PODS\" | cut -d / -f 2 | sort)\"\n    PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n    PRIMARY_INSTANCE=\"$(printf '%s' \"$PRIMARY_POD\" | cut -d / -f 2)\"\n\n    echo \"Signaling $NORMALIZED_OP_NAME started to cluster\"\n    echo\n\n    DBOPS_PATCH=\"$(cat << EOF\n      {\n        \"dbOps\": {\n          \"$OP_NAME\":{\n            \"initialInstances\": [$(\n              FIRST=true\n              for INSTANCE in $INITIAL_INSTANCES\n              do\n                if \"$FIRST\"\n                then\n                  printf '%s' \"\\\"$INSTANCE\\\"\"\n                  FIRST=false\n                else\n                  printf '%s' \",\\\"$INSTANCE\\\"\"\n                fi\n              done\n              )],\n            \"primaryInstance\": \"$PRIMARY_INSTANCE\"\n          }\n        }\n      }\nEOF\n    )\"\n    until (\n      DBOPS=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json)\"\n      DBOPS=\"$(printf '%s' \"$DBOPS\" | jq '.status |= . + '\"$DBOPS_PATCH\")\"\n      printf '%s' \"$DBOPS\" | kubectl replace --raw /apis/\"$CRD_GROUP\"/v1/namespaces/\"$CLUSTER_NAMESPACE\"/\"$CLUSTER_CRD_NAME\"/\"$CLUSTER_NAME\" -f -\n      )\n    do\n      (\n      DBOPS=\"$(printf '%s' \"$DBOPS\" | kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json)\"\n      DBOPS=\"$(printf '%s' \"$DBOPS\" | jq 'del(.status.dbOps)')\"\n      printf '%s' \"$DBOPS\" | kubectl replace --raw /apis/\"$CRD_GROUP\"/v1/namespaces/\"$CLUSTER_NAMESPACE\"/\"$CLUSTER_CRD_NAME\"/\"$CLUSTER_NAME\" -f -\n      )\n    done\n\n  else\n    INITIAL_INSTANCES=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template=\"{{ .status.dbOps.$OP_NAME.initialInstances }}\")\"\n    INITIAL_INSTANCES=\"$(printf '%s' \"$INITIAL_INSTANCES\" | tr -d '[]' | tr ' ' '\\n')\"\n    PRIMARY_INSTANCE=\"$(kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n      --template=\"{{ .status.dbOps.$OP_NAME.primaryInstance }}\")\"\n\n    CURRENT_PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n    CURRENT_PRIMARY_INSTANCE=\"$(printf '%s' \"$CURRENT_PRIMARY_POD\" | cut -d / -f 2)\"\n    if [ \"$PRIMARY_INSTANCE\" != \"$CURRENT_PRIMARY_INSTANCE\" ]\n    then\n      PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n      PRIMARY_INSTANCE=\"$(printf '%s' \"$PRIMARY_POD\" | cut -d / -f 2)\"\n    fi\n  fi\n\n  if ! kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -o name > /dev/null\n  then\n    echo FAILURE=\"Primary instance not found!\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n    return 1\n  fi\n  echo \"Found primary instance $PRIMARY_INSTANCE\"\n  echo\n\n  INITIAL_INSTANCES_COUNT=\"$(printf '%s' \"$INITIAL_INSTANCES\" | tr ' ' 's' | tr '\\n' ' ' | wc -w)\"\n  echo \"Initial instances:\"\n  if [ \"$INITIAL_INSTANCES_COUNT\" = 0 ]\n  then\n    echo '<none>'\n  else\n    echo \"$INITIAL_INSTANCES\" | sed 's/^/ - /'\n  fi\n  echo\n\n  update_status\n\n  if [ \"$RESTART_PRIMARY_FIRST\" = \"true\" ]\n  then\n    echo \"Restarting primary inscante first...\"\n\n    kubectl exec -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -c \"$PATRONI_CONTAINER_NAME\" -- \\\n      patronictl restart \"$CLUSTER_NAME\" -r master --force \\\n\n    echo \"Waiting primary instance $PRIMARY_INSTANCE to be ready...\"\n\n    wait_for_instance \"$PRIMARY_INSTANCE\"\n\n    CURRENT_PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n    CURRENT_PRIMARY_INSTANCE=\"$(printf '%s' \"$CURRENT_PRIMARY_POD\" | cut -d / -f 2)\"\n    if [ \"$PRIMARY_INSTANCE\" != \"$CURRENT_PRIMARY_INSTANCE\" ]\n    then\n      echo \"FAILURE=$NORMALIZED_OP_NAME failed. Please check pod $PRIMARY_INSTANCE logs for more info\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      return 1\n    fi\n\n    echo \"done\"\n    echo\n\n    update_status\n  fi\n\n  if [ \"$REDUCED_IMPACT\" = \"true\" ]\n  then\n    echo \"Upscaling cluster to $((INITIAL_INSTANCES_COUNT + 1)) instances\"\n    echo\n\n    kubectl patch \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" --type=json \\\n      -p \"$(cat << EOF\n[\n  {\"op\":\"replace\",\"path\":\"/spec/instances\",\"value\":$((INITIAL_INSTANCES_COUNT + 1))}\n]\nEOF\n        )\"\n\n    INSTANCE=\"${PRIMARY_INSTANCE%-*}-$INITIAL_INSTANCES_COUNT\"\n\n    echo \"Waiting instance $INSTANCE to be ready...\"\n\n    wait_for_instance \"$INSTANCE\"\n\n    echo \"done\"\n    echo\n\n    update_status\n  fi\n\n  echo \"Restarting replicas\"\n  echo\n\n  while true\n  do\n    if [ \"$PENDING_TO_RESTART_REPLICAS_COUNT\" = 0 ]\n    then\n      break\n    fi\n\n    INSTANCE=\"$(printf '%s' \"$PENDING_TO_RESTART_REPLICAS\" | head -n 1)\"\n\n    echo \"Restarting instance $INSTANCE...\"\n\n    kubectl delete pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\"\n\n    echo \"done\"\n    echo\n\n    echo \"Waiting instance $INSTANCE to be ready...\"\n\n    wait_for_instance \"$INSTANCE\"\n\n    echo \"done\"\n    echo\n\n    update_status\n  done\n\n  if echo \"$PENDING_TO_RESTART_INSTANCES\" | grep -q '^'\"$PRIMARY_INSTANCE\"'$'\n  then\n    PREVIOUS_PRIMARY_INSTANCE=\"$PRIMARY_INSTANCE\"\n    TARGET_INSTANCE=\"$(echo \"$RESTARTED_REPLICAS\" | head -n 1)\"\n    if kubectl wait pod -n \"$CLUSTER_NAMESPACE\" \"$TARGET_INSTANCE\" --for condition=Ready --timeout 0 >/dev/null 2>&1\n    then\n      echo \"Performing switchover from primary $PRIMARY_INSTANCE to replica $TARGET_INSTANCE...\"\n\n      kubectl exec -n \"$CLUSTER_NAMESPACE\" \"$PRIMARY_INSTANCE\" -c \"$PATRONI_CONTAINER_NAME\" -- \\\n        patronictl switchover \"$CLUSTER_NAME\" --primary \"$PRIMARY_INSTANCE\" --candidate \"$TARGET_INSTANCE\" --force \\\n\n      echo \"done\"\n      echo\n\n      PRIMARY_INSTANCE=\"$TARGET_INSTANCE\"\n\n      echo \"Waiting primary instance $PRIMARY_INSTANCE to be ready...\"\n\n      wait_for_instance \"$PRIMARY_INSTANCE\"\n\n      echo \"done\"\n      echo\n\n      RETRY=3\n      while [ \"$RETRY\" != 0 ]\n      do\n        CURRENT_PRIMARY_POD=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_PRIMARY_POD_LABELS\" -o name)\"\n        if [ -n \"$CURRENT_PRIMARY_POD\" ]\n        then\n          break\n        fi\n        RETRY=\"$((RETRY-1))\"\n        sleep 5\n      done\n      CURRENT_PRIMARY_INSTANCE=\"$(printf '%s' \"$CURRENT_PRIMARY_POD\" | cut -d / -f 2)\"\n      if [ \"$PRIMARY_INSTANCE\" != \"$CURRENT_PRIMARY_INSTANCE\" ]\n      then\n        echo \"FAILURE=$NORMALIZED_OP_NAME failed. Please check pod $PRIMARY_INSTANCE logs for more info\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n        return 1\n      fi\n    fi\n\n    if [ \"$PREVIOUS_PRIMARY_INSTANCE\" = \"$PRIMARY_INSTANCE\" ]\n    then\n      echo \"Restarting instance $PREVIOUS_PRIMARY_INSTANCE...\"\n    else\n      echo \"Restarting primary instance $PREVIOUS_PRIMARY_INSTANCE...\"\n    fi\n\n    kubectl delete pod -n \"$CLUSTER_NAMESPACE\" \"$PREVIOUS_PRIMARY_INSTANCE\"\n\n    echo \"done\"\n    echo\n\n    if [ \"$PREVIOUS_PRIMARY_INSTANCE\" = \"$PRIMARY_INSTANCE\" ]\n    then\n      echo \"Waiting instance $PREVIOUS_PRIMARY_INSTANCE to be ready...\"\n    else\n      echo \"Waiting primary instance $PREVIOUS_PRIMARY_INSTANCE to be ready...\"\n    fi\n\n    wait_for_instance \"$PREVIOUS_PRIMARY_INSTANCE\"\n\n    echo \"done\"\n    echo\n\n    update_status\n  fi\n\n  if [ \"$REDUCED_IMPACT\" = \"true\" ]\n  then\n    echo \"Downscaling cluster to $INITIAL_INSTANCES_COUNT instances\"\n    echo\n\n    kubectl patch \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" --type=json \\\n      -p \"$(cat << EOF\n[\n  {\"op\":\"replace\",\"path\":\"/spec/instances\",\"value\":$INITIAL_INSTANCES_COUNT}\n]\nEOF\n        )\"\n\n    echo \"Waiting cluster downscale...\"\n\n    until [ \"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_POD_LABELS\" -o name | cut -d / -f 2 | sort)\" = \"$INITIAL_INSTANCES\" ]\n    do\n      sleep 1\n    done\n\n    echo \"done\"\n    echo\n  fi\n\n  echo \"Signaling $NORMALIZED_OP_NAME finished to cluster\"\n  echo\n\n  until kubectl get \"$CLUSTER_CRD_NAME.$CRD_GROUP\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" -o json | \\\n    jq 'del(.status.dbOps)' | \\\n    kubectl replace --raw /apis/\"$CRD_GROUP\"/v1/namespaces/\"$CLUSTER_NAMESPACE\"/\"$CLUSTER_CRD_NAME\"/\"$CLUSTER_NAME\" -f -\n  do\n    sleep 1\n  done\n}\n\nupdate_status() {\n  STATEFULSET_UPDATE_REVISION=\"$(kubectl get sts -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n    --template='{{ .status.updateRevision }}')\"\n  PENDING_TO_RESTART_INSTANCES=\"$(echo \"$INITIAL_INSTANCES\" \\\n    | while read -r INSTANCE\n      do\n        PODS=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_POD_LABELS\" -o name)\"\n        if ! printf '%s' \"$PODS\" | cut -d / -f 2 | grep -q \"^$INSTANCE$\"\n        then\n          echo \"$INSTANCE\"\n          continue\n        fi\n        if [ \"$ONLY_PENDING_RESTART\" != true ]\n        then\n          POD_CREATION_TIMESTAMP=\"$(kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\" \\\n            --template '{{ .metadata.creationTimestamp }}')\"\n          POD_CREATION_TIMESTAMP=\"$(from_date_iso8601_to_unix_timestamp \"$POD_CREATION_TIMESTAMP\")\"\n          if [ \"$POD_CREATION_TIMESTAMP\" -lt \"$START_TIMESTAMP\" ]\n          then\n            echo \"$INSTANCE\"\n          fi\n        else\n          CLUSTER_POD_STATUS=\"$(kubectl get \"$CLUSTER_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$CLUSTER_NAME\" \\\n            -o=jsonpath='{ .status.podStatuses[?(@.name == \"'\"$INSTANCE\"'\")].pendingRestart }')\"\n          PATRONI_STATUS=\"$(kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\" \\\n            --template='{{ .metadata.annotations.status }}')\"\n          POD_STATEFULSET_REVISION=\"$(kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\" \\\n            --template='{{ index .metadata.labels \"controller-revision-hash\" }}')\"\n          if [ \"$CLUSTER_POD_STATUS\" = true ] \\\n            || echo \"$PATRONI_STATUS\" | grep -q '\"pending_restart\":true' \\\n            || [ \"$STATEFULSET_UPDATE_REVISION\" != \"$POD_STATEFULSET_REVISION\" ]\n          then\n            echo \"$INSTANCE\"\n          fi\n        fi\n      done)\"\n  PENDING_TO_RESTART_INSTANCES_COUNT=\"$(echo \"$PENDING_TO_RESTART_INSTANCES\" | tr ' ' 's' | tr '\\n' ' ' | wc -w)\"\n  PENDING_TO_RESTART_REPLICAS=\"$(printf '%s' \"$PENDING_TO_RESTART_INSTANCES\" | grep -v '^'\"$PRIMARY_INSTANCE\"'$' || true)\"\n  PENDING_TO_RESTART_REPLICAS_COUNT=\"$(printf '%s' \"$PENDING_TO_RESTART_REPLICAS\" | tr ' ' 's' | tr '\\n' ' ' | wc -w)\"\n  EXISTING_PODS=\"$(kubectl get pods -n \"$CLUSTER_NAMESPACE\" -l \"$CLUSTER_POD_LABELS\" -o name)\"\n  RESTARTED_INSTANCES=\"$(echo \"$EXISTING_PODS\" | cut -d / -f 2 | grep -v \"^\\($(\n      echo \"$PENDING_TO_RESTART_INSTANCES\" | tr '\\n' ' ' | sed '{s/ $//;s/ /\\\\|/g}'\n    )\\)$\" | sort)\"\n  RESTARTED_INSTANCES_COUNT=\"$(echo \"$RESTARTED_INSTANCES\" | tr ' ' 's' | tr '\\n' ' ' | wc -w)\"\n  RESTARTED_REPLICAS=\"$(echo \"$RESTARTED_INSTANCES\" | grep -v '^'\"$PRIMARY_INSTANCE\"'$' || true)\"\n  RESTARTED_REPLICAS_COUNT=\"$(echo \"$RESTARTED_REPLICAS\" | tr ' ' 's' | tr '\\n' ' ' | wc -w)\"\n  echo \"Pending to $NORMALIZED_OP_NAME instances:\"\n  if [ \"$PENDING_TO_RESTART_INSTANCES_COUNT\" = 0 ]\n  then\n    echo '<none>'\n  else\n    echo \"$PENDING_TO_RESTART_INSTANCES\" | sed 's/^/ - /'\n  fi\n  echo\n\n  OPERATION=\"$(kubectl get \"$DBOPS_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$DBOPS_NAME\" \\\n    --template=\"{{ if .status.$OP_NAME }}replace{{ else }}add{{ end }}\")\"\n  kubectl patch \"$DBOPS_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$DBOPS_NAME\" --type=json \\\n    -p \"$(cat << EOF\n[\n  {\"op\":\"$OPERATION\",\"path\":\"/status/$OP_NAME\",\"value\":{\n      \"primaryInstance\": \"$PRIMARY_INSTANCE\",\n      \"initialInstances\": [$(\n        FIRST=true\n        for INSTANCE in $INITIAL_INSTANCES\n        do\n          if \"$FIRST\"\n          then\n            printf '%s' \"\\\"$INSTANCE\\\"\"\n            FIRST=false\n          else\n            printf '%s' \",\\\"$INSTANCE\\\"\"\n          fi\n        done\n        )],\n      \"pendingToRestartInstances\": [$(\n        FIRST=true\n        for INSTANCE in $PENDING_TO_RESTART_INSTANCES\n        do\n          if \"$FIRST\"\n          then\n            printf '%s' \"\\\"$INSTANCE\\\"\"\n            FIRST=false\n          else\n            printf '%s' \",\\\"$INSTANCE\\\"\"\n          fi\n        done\n        )],\n      \"restartedInstances\": [$(\n        FIRST=true\n        for INSTANCE in $RESTARTED_INSTANCES\n        do\n          if \"$FIRST\"\n          then\n            printf '%s' \"\\\"$INSTANCE\\\"\"\n            FIRST=false\n          else\n            printf '%s' \",\\\"$INSTANCE\\\"\"\n          fi\n        done\n        )]\n    }\n  }\n]\nEOF\n    )\"\n}\n\nwait_for_instance() {\n  local INSTANCE=\"$1\"\n  until kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\" -o name >/dev/null 2>&1\n  do\n    sleep 1\n  done\n  until kubectl wait pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\" --for condition=Ready --timeout 0 >/dev/null 2>&1\n  do\n    PHASE=\"$(kubectl get pod -n \"$CLUSTER_NAMESPACE\" \"$INSTANCE\" --template='{{ .status.phase }}')\"\n    if [ \"$PHASE\" = \"Failed\" ] || [ \"$PHASE\" = \"Unknown\" ]\n    then\n      echo \"FAILURE=$NORMALIZED_OP_NAME failed. Please check pod $INSTANCE logs for more info\" >> \"$SHARED_PATH/$KEBAB_OP_NAME.out\"\n      return 1\n    fi\n    sleep 1\n  done\n}\n",
                "run-vacuum.sh": "#!/bin/sh\n\nrun_op() {\n  set -e\n  \n  if [ -z \"$DATABASES\" ]\n  then\n    run_command -a\n  else\n    echo \"$DATABASES\" | while read CONFIG DATABASE\n      do\n        eval \"$CONFIG\"\n        run_command -d \"$DATABASE\"\n      done\n  fi\n}\n\nrun_command() {\n  COMMAND='vacuumdb -v'\n  if \"$FULL\"\n  then\n    COMMAND=\"$COMMAND\"' -f'\n  else\n    if \"$FREEZE\"\n    then\n      COMMAND=\"$COMMAND\"' -F'\n    fi\n    if \"$DISABLE_PAGE_SKIPPING\"\n    then\n      COMMAND=\"$COMMAND\"' --disable-page-skipping'\n    fi\n  fi\n  if \"$ANALYZE\"\n  then\n    COMMAND=\"$COMMAND\"' -z'\n  fi\n  $COMMAND \"$@\"\n}\n",
                "set-dbops-result.sh": "#!/bin/sh\n\nRESOURCE_CRD_NAME=\"$DBOPS_CRD_NAME\"\nRESOURCE_NAME=\"$DBOPS_NAME\"\n\n. \"$LOCAL_BIN_SHELL_UTILS_PATH\"\n\neval_in_place() {\neval \"cat << EVAL_IN_PLACE_EOF\n$*\nEVAL_IN_PLACE_EOF\n\"\n}\n\nset_completed() {\n  create_event \"DbOpCompleted\" \"Normal\" \"Database operation $OP_NAME completed\"\n  kubectl patch \"$DBOPS_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$DBOPS_NAME\" --type=merge \\\n    -p \"$(cat << EOF\n{\n  \"status\": {\n    \"conditions\":[\n      $(eval_in_place \"$CONDITION_DBOPS_FALSE_RUNNING\"),\n      $(eval_in_place \"$CONDITION_DBOPS_COMPLETED\"),\n      $(eval_in_place \"$CONDITION_DBOPS_FALSE_FAILED\")\n    ]\n  }\n}\nEOF\n    )\"\n}\n\nset_timed_out() {\n  create_event \"DbOpTimeOut\" \"Warning\" \"Database operation $OP_NAME timed out\"\n  kubectl patch \"$DBOPS_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$DBOPS_NAME\" --type=merge \\\n    -p \"$(cat << EOF\n{\n  \"status\": {\n    \"conditions\":[\n      $(eval_in_place \"$CONDITION_DBOPS_FALSE_RUNNING\"),\n      $(eval_in_place \"$CONDITION_DBOPS_FALSE_COMPLETED\"),\n      $(eval_in_place \"$CONDITION_DBOPS_TIMED_OUT\")\n    ]\n  }\n}\nEOF\n    )\"\n}\n\nset_lock_lost() {\n  create_event \"DbOpTimeOut\" \"Warning\" \"Database operation $OP_NAME lost the lock\"\n  kubectl patch \"$DBOPS_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$DBOPS_NAME\" --type=merge \\\n    -p \"$(cat << EOF\n{\n  \"status\": {\n    \"conditions\":[\n      $(eval_in_place \"$CONDITION_DBOPS_FALSE_RUNNING\"),\n      $(eval_in_place \"$CONDITION_DBOPS_FALSE_COMPLETED\"),\n      $(eval_in_place \"$CONDITION_DBOPS_LOCK_LOST\")\n    ]\n  }\n}\nEOF\n    )\"\n}\n\nset_failed() {\n  create_event \"DbOpFailed\" \"Warning\" \"Database operation $OP_NAME failed\"\n  kubectl patch \"$DBOPS_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$DBOPS_NAME\" --type=merge \\\n    -p \"$(cat << EOF\n{\n  \"status\": {\n    \"conditions\":[\n      $(eval_in_place \"$CONDITION_DBOPS_FALSE_RUNNING\"),\n      $(eval_in_place \"$CONDITION_DBOPS_FALSE_COMPLETED\"),\n      $(eval_in_place \"$CONDITION_DBOPS_FAILED\")\n    ]\n$(\n    if [ -n \"$FAILURE\" ] || [ -n \"$PHASE\" ]\n    then\n      cat << OP_EOF\n    ,\n    \"$OP_NAME\": {\n$(\n    if [ -n \"$PHASE\" ]\n    then\n      cat << PHASE_EOF\n      \"phase\": $(printf %s \"$PHASE\" | to_json_string)$([ -z \"$FAILURE\" ] || printf ,)\nPHASE_EOF\n    fi\n    if [ -n \"$FAILURE\" ]\n    then\n      cat << FAILURE_EOF\n      \"failure\": $(printf %s \"$FAILURE\" | to_json_string)\nFAILURE_EOF\n    fi\n)\n    }\nOP_EOF\n    fi\n)\n  }\n}\nEOF\n      )\"\n}\n\nset_result() {\n  read_events_service_loop &\n  READ_EVENTS_SERVICE_PID=\"$!\"\n  until grep -q '^EXIT_CODE=' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" 2>/dev/null\n  do\n    sleep 1\n  done\n\n  kill \"$READ_EVENTS_SERVICE_PID\" || true\n  wait \"$READ_EVENTS_SERVICE_PID\" 2>/dev/null || true\n\n  EXIT_CODE=\"$(grep '^EXIT_CODE=' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" | tail -n 1 | cut -d = -f 2)\"\n  TIMED_OUT=\"$(grep '^TIMED_OUT=' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" | tail -n 1 | cut -d = -f 2)\"\n  LOCK_LOST=\"$(grep '^LOCK_LOST=' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" | tail -n 1 | cut -d = -f 2)\"\n  FAILURE=\"$(grep '^FAILURE=' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" | tail -n 1 | cut -d = -f 2)\"\n  PHASE=\"$(grep '^PHASE=' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" | tail -n 1 | cut -d = -f 2)\"\n  LAST_TRANSITION_TIME=\"$(date_iso8601)\"\n\n  if [ \"$EXIT_CODE\" = 0 ]\n  then\n    set_completed\n  elif [ \"$TIMED_OUT\" = \"true\" ]\n  then\n    set_timed_out\n  elif [ \"$LOCK_LOST\" = \"true\" ]\n  then\n    set_lock_lost\n  else\n    set_failed\n  fi\n\n  return \"$EXIT_CODE\"\n}\n\nif [ -n \"$SET_RESULT_SCRIPT_PATH\" ]\nthen\n  . \"$SET_RESULT_SCRIPT_PATH\"\nfi\n\nset_result\n",
                "set-dbops-running.sh": "#!/bin/sh\n\nRESOURCE_CRD_NAME=\"$DBOPS_CRD_NAME\"\nRESOURCE_NAME=\"$DBOPS_NAME\"\n\n. \"$LOCAL_BIN_SHELL_UTILS_PATH\"\n\neval_in_place() {\neval \"cat << EVAL_IN_PLACE_EOF\n$*\nEVAL_IN_PLACE_EOF\n\"\n}\n\nLAST_TRANSITION_TIME=\"$(date_iso8601)\"\nSTARTED=\"$LAST_TRANSITION_TIME\"\n\nkubectl patch \"$DBOPS_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$DBOPS_NAME\" --type=merge \\\n  -p \"$(cat << EOF\n{\n  \"status\": {\n    \"conditions\":[\n        $(eval_in_place \"$CONDITION_DBOPS_RUNNING\"),\n        $(eval_in_place \"$CONDITION_DBOPS_FALSE_COMPLETED\"),\n        $(eval_in_place \"$CONDITION_DBOPS_FALSE_FAILED\")\n    ],\n    \"opStarted\": \"$STARTED\"\n  }\n}\nEOF\n    )\"\n\ncreate_event_queue\n\ncreate_event \"DbOpStarted\" \"Normal\" \"Database operation $OP_NAME started\"\n",
                "set-pgbench-result.sh": "#!/bin/sh\n\nFORMAT_LOCALE=\"$(locale -a | grep -i '^C\\.UTF' | head -n 1)\"\n\nset_completed() {\n  if ! locale -a | grep -qxF \"$FORMAT_LOCALE\"\n  then\n    FAILURE=\"Required locale $FORMAT_LOCALE is not installed\"\n    EXIT_CODE=1\n    set_failed\n    return\n  fi\n  SCALE_FACTOR=\"$(grep '^\\s*scaling factor: ' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" | sed 's/\\s\\+//g' | cut -d : -f 2 \\\n    | grep -v '^$' || echo null)\"\n  TRANSACTION_PROCESSED=\"$(grep '^\\s*number of transactions actually processed: ' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" \\\n    | sed 's/\\s\\+//g' | cut -d : -f 2 | cut -d / -f 1 | grep -v '^$' || echo null)\"\n  LATENCY_AVERAGE=\"$(grep '^\\s*latency average = ' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" \\\n    | sed 's/\\s\\+//g' | cut -d = -f 2 | sed 's/[^0-9.]\\+$//' | grep -v '^$' | format_measure || echo null)\"\n  LATENCY_STDDEV=\"$(grep '^\\s*latency stddev = ' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" \\\n    | sed 's/\\s\\+//g' | cut -d = -f 2 | sed 's/[^0-9.]\\+$//' | grep -v '^$' | format_measure || echo null)\"\n  TPS_INCLUDING_CONNECTIONS_ESTABLISHING=\"$(grep '^\\s*tps = ' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" \\\n    | grep '(including connections establishing)$' | sed 's/\\s\\+//g' | cut -d = -f 2 | cut -d '(' -f 1 \\\n    | grep -v '^$' | format_measure || echo null)\"\n  TPS_EXCLUDING_CONNECTIONS_ESTABLISHING=\"$(grep '^\\s*tps = ' \"$SHARED_PATH/$KEBAB_OP_NAME.out\" \\\n    | grep '(excluding connections establishing)$' | sed 's/\\s\\+//g' | cut -d = -f 2 | cut -d '(' -f 1 \\\n    | grep -v '^$' | format_measure || echo null)\"\n  kubectl patch \"$DBOPS_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$DBOPS_NAME\" --type=json \\\n    -p \"$(cat << EOF\n[\n  {\"op\":\"replace\",\"path\":\"/status/conditions\",\"value\":[\n      $(eval_in_place \"$CONDITION_DBOPS_FALSE_RUNNING\"),\n      $(eval_in_place \"$CONDITION_DBOPS_COMPLETED\"),\n      $(eval_in_place \"$CONDITION_DBOPS_FALSE_FAILED\")\n    ]\n  },\n  {\"op\":\"replace\",\"path\":\"/status/benchmark\",\"value\":{\n      \"pgbench\": {\n        \"scaleFactor\": $SCALE_FACTOR,\n        \"transactionsProcessed\": $TRANSACTION_PROCESSED,\n        \"latency\": {\n          \"average\": {\n            \"value\": $LATENCY_AVERAGE,\n            \"unit\": \"ms\"\n          },\n          \"standardDeviation\": {\n            \"value\": $LATENCY_STDDEV,\n            \"unit\": \"ms\"\n          }\n        },\n        \"transactionsPerSecond\": {\n          \"includingConnectionsEstablishing\": {\n            \"value\": $TPS_INCLUDING_CONNECTIONS_ESTABLISHING,\n            \"unit\": \"tps\"\n          },\n          \"excludingConnectionsEstablishing\": {\n            \"value\": $TPS_EXCLUDING_CONNECTIONS_ESTABLISHING,\n            \"unit\": \"tps\"\n          }\n        }\n      }\n    }\n  }\n]\nEOF\n    )\"\n  create_event \"DbOpCompleted\" \"Normal\" \"Database operation $OP_NAME completed\"\n}\n\nformat_measure() {\n  LC_NUMERIC=\"$FORMAT_LOCALE\" printf '%.2f' \"$(cat)\"\n}\n",
                "setup-arbitrary-user.sh": "#!/bin/sh\n\nset -e\n\nUSER_NAME=postgres\nUSER_ID=\"$(id -u)\"\nGROUP_ID=\"$(id -g)\"\nUSER_SHELL=/bin/sh\ncp \"$TEMPLATES_PATH/passwd\" /local/etc/.\ncp \"$TEMPLATES_PATH/group\" /local/etc/.\ncp \"$TEMPLATES_PATH/shadow\" /local/etc/.\ncp \"$TEMPLATES_PATH/gshadow\" /local/etc/.\nchmod 644 /local/etc/passwd\necho \"$USER_NAME:x:$USER_ID:$GROUP_ID::$PG_BASE_PATH:$USER_SHELL\" >> /local/etc/passwd\nchmod 644 /local/etc/group\necho \"$USER_NAME:x:$GROUP_ID:\" >> /local/etc/group\nchmod 600 /local/etc/shadow\necho \"$USER_NAME\"':!!:18179:0:99999:7:::' >> /local/etc/shadow\nchmod 600 /local/etc/gshadow\necho \"$USER_NAME\"':!::' >> /local/etc/gshadow\n",
                "setup-scripts.sh": "#!/bin/sh\n\nset -e\n\ncp -f \"$TEMPLATES_PATH/start-patroni.sh\" \"$LOCAL_BIN_PATH\"\ncp -f \"$TEMPLATES_PATH/post-init.sh\" \"$LOCAL_BIN_PATH\"\ncp -f \"$TEMPLATES_PATH/exec-with-env\" \"$LOCAL_BIN_PATH\"\ncp -f \"$TEMPLATES_PATH/patronictl\" \"$LOCAL_BIN_PATH\"\nsed -i \"s#\\${POSTGRES_PORT}#${POSTGRES_PORT}#g\" \\\n  \"$LOCAL_BIN_PATH/post-init.sh\"\nsed -i \"s#\\${BASE_ENV_PATH}#${BASE_ENV_PATH}#g\" \\\n  \"$LOCAL_BIN_PATH/exec-with-env\"\nsed -i \"s#\\${BASE_SECRET_PATH}#${BASE_SECRET_PATH}#g\" \\\n  \"$LOCAL_BIN_PATH/exec-with-env\"\nchmod a+x \"$LOCAL_BIN_PATH/start-patroni.sh\"\nchmod a+x \"$LOCAL_BIN_PATH/post-init.sh\"\nchmod a+x \"$LOCAL_BIN_PATH/exec-with-env\"\nchmod a+x \"$LOCAL_BIN_PATH/patronictl\"\n",
                "shadow": "root:!locked::0:99999:7:::\nbin:*:18199:0:99999:7:::\ndaemon:*:18199:0:99999:7:::\nadm:*:18199:0:99999:7:::\nlp:*:18199:0:99999:7:::\nsync:*:18199:0:99999:7:::\nshutdown:*:18199:0:99999:7:::\nhalt:*:18199:0:99999:7:::\nmail:*:18199:0:99999:7:::\noperator:*:18199:0:99999:7:::\ngames:*:18199:0:99999:7:::\nftp:*:18199:0:99999:7:::\nnobody:*:18199:0:99999:7:::\n",
                "shell-utils": "#!/bin/sh\n\nLOCK_DURATION=\"${LOCK_DURATION:-60}\"\nLOCK_SLEEP=\"${LOCK_SLEEP:-5}\"\nQUEUE_NAME=create_event.pipe\n\nSHELL=\"$(readlink /proc/$$/exe || true)\"\nif ! command -v \"$SHELL\" >/dev/null 2>&1 \\\n  || [ \"x$(basename \"$SHELL\")\" = x ] \\\n  || [ \"x$(basename \"$SHELL\")\" = xbusybox ]\nthen\n  SHELL=sh\nfi\nSHELL_XTRACE=$(! echo $- | grep -q x || echo \" -x\")\n\nacquire_lock() {\n  try_lock true\n}\n\nmaintain_lock() {\n  while true\n  do\n    sleep \"$LOCK_SLEEP\"\n    try_lock false\n    if [ \"$?\" != 0 ]\n    then\n      return 1\n    fi\n  done\n}\n\ntry_lock() {\n  if [ -z \"$CLUSTER_NAMESPACE\" -o -z \"$POD_NAME\" -o -z \"$SERVICE_ACCOUNT\" \\\n    -o -z \"$LOCK_RESOURCE\" -o -z \"$LOCK_RESOURCE_NAME\" ]\n  then\n    echo \"CLUSTER_NAMESPACE, SERVICE_ACCOUNT, POD_NAME, LOCK_RESOURCE and LOCK_RESOURCE_NAME environmant variables must be defined\"\n    return 1\n  fi\n  local AQUIRE=\"$1\"\n  local TEMPLATE='\n  LOCK_POD={{ if .metadata.annotations }}{{ if (index .metadata.annotations \"'\"$LOCK_POD_KEY\"'\") }}{{ (index .metadata.annotations \"'\"$LOCK_POD_KEY\"'\") }}{{ else }}{{ end }}{{ else }}{{ end }}\n  LOCK_TIMEOUT={{ if .metadata.annotations }}{{ if (index .metadata.annotations \"'\"$LOCK_TIMEOUT_KEY\"'\") }}{{ (index .metadata.annotations \"'\"$LOCK_TIMEOUT_KEY\"'\") }}{{ else }}0{{ end }}{{ else }}0{{ end }}\n  RESOURCE_VERSION={{ .metadata.resourceVersion }}\n  '\n  kubectl get \"$LOCK_RESOURCE\" -n \"$CLUSTER_NAMESPACE\" \"$LOCK_RESOURCE_NAME\" --template=\"$TEMPLATE\" > /tmp/lock-resource\n  . /tmp/lock-resource\n  CURRENT_TIMESTAMP=\"$(date +%s)\"\n  if [ \"$POD_NAME\" != \"$LOCK_POD\" ]\n  then\n    if \"$AQUIRE\"\n    then\n      if [ \"$CURRENT_TIMESTAMP\" -lt \"$LOCK_TIMEOUT\" ]\n      then\n        local WAIT_DURATION=\"$((LOCK_DURATION + LOCK_SLEEP))\"\n        echo \"Locked already by $LOCK_POD until $(date -d @\"$LOCK_TIMEOUT\" -Iseconds --utc), will retry in $WAIT_DURATION seconds\"\n        sleep \"$WAIT_DURATION\"\n        try_lock true\n      fi\n    else\n      echo \"Locked already by $LOCK_POD until $(date -d @\"$LOCK_TIMEOUT\" -Iseconds --utc)\"\n      return 1\n    fi\n  else\n    if ! \"$AQUIRE\" && [ \"$CURRENT_TIMESTAMP\" -gt \"$LOCK_TIMEOUT\" ]\n    then\n      echo \"Lock expired!\"\n      return 1\n    fi\n  fi\n  if ! kubectl annotate \"$LOCK_RESOURCE\" -n \"$CLUSTER_NAMESPACE\" \"$LOCK_RESOURCE_NAME\" \\\n    --resource-version \"$RESOURCE_VERSION\" --overwrite \\\n    \"$LOCK_SERVICE_ACCOUNT_KEY=$SERVICE_ACCOUNT\" \"$LOCK_POD_KEY=$POD_NAME\" \"$LOCK_TIMEOUT_KEY=$((CURRENT_TIMESTAMP + LOCK_DURATION))\"\n  then\n    kubectl get \"$LOCK_RESOURCE\" -n \"$CLUSTER_NAMESPACE\" \"$LOCK_RESOURCE_NAME\" --template=\"$TEMPLATE\" > /tmp/lock-resource\n    . /tmp/lock-resource\n    if [ \"$POD_NAME\" = \"$LOCK_POD\" ]\n    then\n      try_lock \"$AQUIRE\"\n      return 0\n    fi\n    echo \"Locked by $LOCK_POD until $(date -d @\"$LOCK_TIMEOUT\" -Iseconds --utc)\"\n    if \"$AQUIRE\"\n    then\n      sleep \"$((LOCK_SLEEP * 4))\"\n      try_lock true\n    else\n      return 1\n    fi\n  fi\n}\n\nrelease_lock() {\n  if [ -z \"$CLUSTER_NAMESPACE\" -o -z \"$SERVICE_ACCOUNT\" -o -z \"$POD_NAME\" \\\n    -o -z \"$LOCK_RESOURCE\" -o -z \"$LOCK_RESOURCE_NAME\" ]\n  then\n    echo \"CLUSTER_NAMESPACE, SERVICE_ACCOUNT, POD_NAME, LOCK_RESOURCE and LOCK_RESOURCE_NAME environmant variables must be defined\"\n    return 1\n  fi\n  local TEMPLATE='\n  LOCK_POD={{ if and .metadata.annotations (index .metadata.annotations \"'\"$LOCK_POD_KEY\"'\") }}{{ (index .metadata.annotations \"'\"$LOCK_POD_KEY\"'\") }}{{ else }}{{ end }}\n  LOCK_TIMEOUT={{ if and .metadata.annotations (index .metadata.annotations \"'\"$LOCK_TIMEOUT_KEY\"'\") }}{{ (index .metadata.annotations \"'\"$LOCK_TIMEOUT_KEY\"'\") }}{{ else }}0{{ end }}\n  RESOURCE_VERSION={{ .metadata.resourceVersion }}\n  '\n  kubectl get \"$LOCK_RESOURCE\" -n \"$CLUSTER_NAMESPACE\" \"$LOCK_RESOURCE_NAME\" --template=\"$TEMPLATE\" > /tmp/lock-resource\n  . /tmp/lock-resource\n  if [ \"$POD_NAME\" != \"$LOCK_POD\" ]\n  then\n    return 0\n  fi\n  if ! kubectl annotate \"$LOCK_RESOURCE\" -n \"$CLUSTER_NAMESPACE\" \"$LOCK_RESOURCE_NAME\" \\\n    --resource-version \"$RESOURCE_VERSION\" --overwrite \"$LOCK_SERVICE_ACCOUNT_KEY-\" \"$LOCK_POD_KEY-\" \"$LOCK_TIMEOUT_KEY-\"\n  then\n    kubectl get \"$LOCK_RESOURCE\" -n \"$CLUSTER_NAMESPACE\" \"$LOCK_RESOURCE_NAME\" --template=\"$TEMPLATE\" > /tmp/lock-resource\n    . /tmp/lock-resource\n    if [ \"$POD_NAME\" = \"$LOCK_POD\" ]\n    then\n      release_lock\n    fi\n    return 0\n  fi\n}\n\nto_json_string() {\n  jq -s -R .\n}\n\ndate_iso8601() {\n  date +%Y-%m-%dT%H:%M:%SZ --utc\n}\n\ncreate_event() {\n  create_event_try \"$@\" || true\n}\n\ncreate_event_try() {\n  local REASON=\"$1\"\n  local TYPE=\"$2\"\n  local MESSAGE=\"$3\"\n  local EVENT_ID=\"$(get_event_id)\"\n  local EVENT_NAME=\"$RESOURCE_NAME.$EVENT_ID\"\n  local EVENT_TIMESTAMP=\"$(date_iso8601)\"\n  local COMPONENT=\"$OP_NAME\"\n  local RESULT\n\n  echo \"Creating event with reason '$REASON' of type '$TYPE' with message '$MESSAGE'\"\n  RESULT=\"$({ kubectl get \"$RESOURCE_CRD_NAME\" -n \"$CLUSTER_NAMESPACE\" \"$RESOURCE_NAME\" -o json || printf .; } | jq -c .)\"\n  MESSAGE=\"$(printf '%s' \"$MESSAGE\" | jq -s -R .)\"\n  RESULT=\"$(printf '%s' \"$RESULT\" | jq -c '{\n      apiVersion: \"v1\",\n      type: \"'\"$TYPE\"'\",\n      reason: \"'\"$REASON\"'\",\n      message: '\"$MESSAGE\"',\n      metadata: {\n        name: \"'\"$EVENT_NAME\"'\",\n        namespace: \"'\"$CLUSTER_NAMESPACE\"'\",\n        labels: .metadata.labels\n      },\n      count: 1,\n      firstTimestamp: \"'\"$EVENT_TIMESTAMP\"'\",\n      lastTimestamp: \"'\"$EVENT_TIMESTAMP\"'\",\n      source: {\n        component: \"'\"$COMPONENT\"'\"\n      },\n      involvedObject: {\n        apiVersion: .apiVersion,\n        kind: .kind,\n        namespace: .metadata.namespace,\n        name: .metadata.name,\n        resourceVersion: .metadata.resourceVersion,\n        uid: .metadata.uid\n      }\n    }')\"\n  printf '%s' \"$RESULT\" | kubectl create --raw \"/api/v1/namespaces/$CLUSTER_NAMESPACE/events\" -f -\n}\n\nget_event_id() {\n  local MILLIS_SINCE_EPOCH=\"$(date +%s%N | cut -b1-13)\"\n  local RANDOM_LONG=\"$(get_random_long)\"\n  local HEX_MILLIS=\"$(printf '%x\\n' \"$MILLIS_SINCE_EPOCH\")\"\n  local HEX_RANDOM_LONG=\"$(printf '%x\\n' \"$RANDOM_LONG\")\"\n  echo \"$HEX_MILLIS$HEX_RANDOM_LONG\"\n}\n\nget_random_long() {\n  cat /dev/urandom | tr -dc '0-9' | head -c 15 | sed 's/^0\\+//'\n}\n\nfrom_date_iso8601_to_unix_timestamp() {\n  [ -n \"$1\" ]\n  date -d \"$1\" +%s\n}\n\nis_child() {\n  local PID=\"$1\"\n  grep -q \"^PPid:[[:space:]]$$\" \"/proc/$PID/status\" 2>/dev/null\n}\n\nkill_with_childs() {\n  (\n  set +e\n  local PID=\"$1\"\n  local SPIDS=\"x\"\n  local OPIDS\n  OPIDS=\"$PID\"\n  local OPPID=\"$OPIDS\"\n  while [ -n \"$OPPID\" ]\n  do\n      OPPID=\"$(grep '^PPid:[[:space:]]'\"\\($(\n            echo \"$OPPID\" | sed '{s/ $//;s/ /\\\\|/g}'\n          )\\)\"'$' /proc/[0-9]*/status 2>/dev/null \\\n        | cut -d / -f 3 | tr '\\n' ' ')\"\n      OPIDS=\"$OPIDS $OPPID\"\n  done\n  kill -13 $OPIDS 2>/dev/null || true\n  )\n}\n\nkill_session_siblings() {\n  (\n  set +e\n  local PID=\"$(exec \"$SHELL\" -c 'echo $PPID')\"\n  local NSUID=\"$(id -u)\"\n  local NSSID=\"$(grep '^NSsid:[[:space:]]' \"/proc/$PID/status\" \\\n        | tr -d '[:space:]' | cut -d : -f 2)\"\n  local SPIDS=\"x\"\n  local OPIDS\n  OPIDS=\"$PID\"\n  local OPPID=\"$OPIDS\"\n  while [ \"$OPPID\" != \"$NSSID\" ]\n  do\n      OPPID=\"$(grep '^PPid:[[:space:]]' \"/proc/$OPPID/status\" \\\n        | tr -d '[:space:]' | cut -d : -f 2)\"\n      OPIDS=\"$OPIDS $OPPID\"\n  done\n  while [ \"$SPIDS\" = x ] \\\n    || [ \"$(ls -d $(echo \"$SPIDS\" | sed 's#\\([0-9]\\+\\) #/proc/\\1 #g') 2>&1 | grep -i 'no such' | wc -l)\" \\\n      -lt \"$(echo \"$SPIDS\" | wc -w)\" ]\n  do\n    test \"$SPIDS\" = \"x\" || kill -13 $SPIDS 2>/dev/null || true\n    SPIDS=\"$(grep '\\(^Uid:[[:space:]]\\+'\"$NSUID\"'[[:space:]]\\|^NSsid:[[:space:]]'\"$NSSID\"'$\\)' -c /proc/[0-9]*/status 2>/dev/null \\\n      | grep ':2$' | cut -d / -f 3 | grep -v '^'\"\\($(echo \"$OPIDS\" | sed 's/ /\\\\|/g')\\)\"'$' | tr '\\n' ' ')\"\n  done\n  ) || true\n}\n\ntrap_callback() {\n  kill_session_siblings\n}\n\ntrap_callback_and_exit() {\n  trap_callback\n  exit \"$1\"\n}\n\nset_trap() {\n  trap 'trap_callback_and_exit $?' HUP INT QUIT PIPE TERM ABRT\n  trap 'trap_callback $?' EXIT\n}\n\ncreate_event_queue() {\n  local PIPELINE_MODE=\"p\"\n  rm -f \"$SHARED_PATH/$QUEUE_NAME\" \n  mknod \"$SHARED_PATH/$QUEUE_NAME\" \"$PIPELINE_MODE\"\n}\n\ncreate_event_service() {\n  echo \"$1\" \"$2\" \"$3\" >> \"$SHARED_PATH/$QUEUE_NAME\"\n}\n\nread_events_service_loop() {\n  while true\n  do\n    read_events_service\n  done\n}\n\nread_events_service() {\n  while read -r REASON TYPE MESSAGE\n  do\n    create_event \"$REASON\" \"$TYPE\" \"$MESSAGE\"\n  done < \"$SHARED_PATH/$QUEUE_NAME\"\n}\n",
                "start-fluentbit.sh": "#!/bin/sh\n\n. \"$TEMPLATES_PATH/${LOCAL_BIN_SHELL_UTILS_PATH##*/}\"\n\nCONFIG_PATH=/etc/fluent-bit\n\nupdate_config() {\n  rm -Rf \"$FLUENT_BIT_LAST_CONFIG_PATH\"\n  cp -Lr \"$CONFIG_PATH\" \"$FLUENT_BIT_LAST_CONFIG_PATH\"\n}\n\nhas_config_changed() {\n  for file in $(ls -1 \"$CONFIG_PATH\")\n  do\n    [ \"$(cat \"$CONFIG_PATH/$file\" | md5sum)\" \\\n      != \"$(cat \"$FLUENT_BIT_LAST_CONFIG_PATH/$file\" | md5sum)\" ] \\\n      && return || true\n  done\n  return 1\n}\n\nrun_fluentbit() {\n  set -x\n  exec /usr/local/bin/fluent-bit \\\n    -c /etc/fluent-bit/fluentbit.conf\n}\n\nset +x\nPID=\nwhile true\ndo\n  if ! is_child \"$PID\" || has_config_changed\n  then\n    update_config\n    if [ -n \"$PID\" ] && is_child \"$PID\"\n    then\n      kill \"$PID\" || true\n      wait \"$PID\" || true\n    fi\n    run_fluentbit &\n    PID=\"$!\"\n  fi\n  sleep 5\ndone\n",
                "start-patroni.sh": "export SHELL_XTRACE=$(! echo $- | grep -q x || printf %s -x)\nexport HOME=\"$PG_BASE_PATH\"\nexport PATRONI_POSTGRESQL_LISTEN=\"$(eval \"echo $PATRONI_POSTGRESQL_LISTEN\")\"\nexport PATRONI_POSTGRESQL_CONNECT_ADDRESS=\"$(eval \"echo $PATRONI_POSTGRESQL_CONNECT_ADDRESS\")\"\nexport PATRONI_RESTAPI_CONNECT_ADDRESS=\"$(eval \"echo $PATRONI_RESTAPI_CONNECT_ADDRESS\")\"\n\nif [ -n \"$RECOVERY_FROM_BACKUP\" ]\nthen\n  cat << 'PREPARE_RECOVERY_FROM_BACKUP_EOF' > \"$PATRONI_CONFIG_PATH/prepare-recovery-from-backup\"\n#!/bin/sh\n\nset -e\n\nif [ \"x$SHELL_XTRACE\" = x-x ]\nthen\n  set -x\nfi\n\nif [ \"$RESTORE_VOLUME_SNAPSHOT\" = true ] \\\n  && [ -d \"$PG_DATA_PATH\" ] \\\n  && ! [ -d \"$PG_DATA_PATH\".backup ] \\\n  && ! [ -f \"$PG_DATA_PATH\".backup/backup_label ]\nthen\n  mv \"$PG_DATA_PATH\" \"$PG_DATA_PATH\".backup\nfi\nPREPARE_RECOVERY_FROM_BACKUP_EOF\n  chmod 700 \"$PATRONI_CONFIG_PATH/prepare-recovery-from-backup\"\n\n  exec-with-env \"${RESTORE_ENV}\" -- \"$PATRONI_CONFIG_PATH/prepare-recovery-from-backup\"\n\n  cat << 'RECOVERY_FROM_BACKUP_EOF' > \"$PATRONI_CONFIG_PATH/recovery-from-backup\"\n#!/bin/sh\n\nset -e\n\nif [ \"x$SHELL_XTRACE\" = x-x ]\nthen\n  set -x\nfi\n\nif [ -n \"$RESTORE_BACKUP_ERROR\" ]\nthen\n  echo \"$RESTORE_BACKUP_ERROR\" >&2\n  exit 1\nfi\n\nif [ \"$RESTORE_VOLUME_SNAPSHOT\" = true ]\nthen\n  if [ -d \"$PG_DATA_PATH\".backup ]\n  then\n    mv \"$PG_DATA_PATH\".backup \"$PG_DATA_PATH\"\n  fi\n  printf %s \"$RESTORE_BACKUP_LABEL\" | base64 -d > \"$PG_DATA_PATH\"/backup_label\n  chmod 600 \"$PG_DATA_PATH\"/backup_label\n  if [ \"x$RESTORE_TABLESPACE_MAP\" != x ]\n  then\n    printf %s \"$RESTORE_TABLESPACE_MAP\" | base64 -d > \"$PG_DATA_PATH\"/tablespace_map\n    chmod 600 \"$PG_DATA_PATH\"/tablespace_map\n  fi\nelse\n  wal-g backup-fetch \"$PG_DATA_PATH\" \"$RESTORE_BACKUP_ID\"\nfi\nRECOVERY_FROM_BACKUP_EOF\n  chmod 700 \"$PATRONI_CONFIG_PATH/recovery-from-backup\"\nfi\n\ncat << 'PATRONI_CONFIG_EOF' | exec-with-env \"${PATRONI_ENV}\" -- sh -e $SHELL_XTRACE\ncat << EOF > \"$PATRONI_CONFIG_FILE_PATH\"\n\n#Custom initial config\n$PATRONI_INITIAL_CONFIG\n\n#Reset ignored sections\nconsul: null\netcd: null\netcdv3: null\nzookeeper: null\nexhibitor: null\nkubernetes: null\nraft: null\nctl: null\n\nscope: ${PATRONI_SCOPE}\nname: ${PATRONI_NAME}\n\nbootstrap:\n  post_init: '${LOCAL_BIN_PATH}/post-init.sh'\n$(\nif [ -n \"$RECOVERY_FROM_BACKUP\" ]\nthen\n  cat << RECOVERY_EOF\n  method: recovery\n  recovery:\n    command: 'exec-with-env \"${RESTORE_ENV}\" -- ${PATRONI_CONFIG_PATH}/recovery-from-backup'\n    keep_existing_recovery_conf: False\n    recovery_conf:\n      restore_command: 'exec-with-env \"${RESTORE_ENV}\" -- wal-g wal-fetch %f %p'\n$(\n  [ -z \"$RECOVERY_TARGET\" ] || cat << RECOVERY_TARGET_EOF\n      recovery_target: '$RECOVERY_TARGET'\nRECOVERY_TARGET_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_TIMELINE\" ] || cat << RECOVERY_TARGET_TIMELINE_EOF\n      recovery_target_timeline: '$RECOVERY_TARGET_TIMELINE'\nRECOVERY_TARGET_TIMELINE_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_INCUSIVE\" ] || cat << RECOVERY_TARGET_INCUSIVE_EOF\n      recovery_target_incusive: '$RECOVERY_TARGET_INCUSIVE'\nRECOVERY_TARGET_INCUSIVE_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_NAME\" ] || cat << RECOVERY_TARGET_NAME_EOF\n      recovery_target_name: '$RECOVERY_TARGET_NAME'\nRECOVERY_TARGET_NAME_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_XID\" ] || cat << RECOVERY_TARGET_XID_EOF\n      recovery_target_xid: '$RECOVERY_TARGET_XID'\nRECOVERY_TARGET_XID_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_LSN\" ] || cat << RECOVERY_TARGET_LSN_EOF\n      recovery_target_lsn: '$RECOVERY_TARGET_LSN'\nRECOVERY_TARGET_LSN_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_TIME\" ] || cat << RECOVERY_TARGET_TIME_EOF\n      recovery_target_time: '$RECOVERY_TARGET_TIME'\nRECOVERY_TARGET_TIME_EOF\n)\n      recovery_target_action: 'promote'\nRECOVERY_EOF\nfi\n)\n  initdb:\n  - auth-host: ${INITDB_AUTH_HOST:-scram-sha-256}\n  - auth-local: trust\n  - encoding: UTF8\n  - locale: C.UTF-8\n  - data-checksums\n  pg_hba:\n  - 'host all all 0.0.0.0/0 md5'\n  - 'host replication ${PATRONI_REPLICATION_USERNAME} 0.0.0.0/0 md5'\nrestapi:\n  connect_address: '${PATRONI_KUBERNETES_POD_IP}:8008'\n  listen: 0.0.0.0:8008\npostgresql:\n  use_slots: true\n  use_pg_rewind: true\n  remove_data_directory_on_rewind_failure: true\n  use_unix_socket: true\n  connect_address: '${PATRONI_KUBERNETES_POD_IP}:5432'\n  listen: 0.0.0.0:5432\n  authentication:\n    superuser:\n      username: '${PATRONI_SUPERUSER_USERNAME}'\n      password: '${PATRONI_SUPERUSER_PASSWORD}'\n    replication:\n      username: '${PATRONI_REPLICATION_USERNAME}'\n      password: '${PATRONI_REPLICATION_PASSWORD}'\n  parameters:\n    unix_socket_directories: '${PATRONI_POSTGRES_UNIX_SOCKET_DIRECTORY}'\n    dynamic_library_path: '${PG_LIB_PATH}:${PG_EXTRA_LIB_PATH}'\n  create_replica_methods:\n  - basebackup\n  basebackup:\n$(\n  [ \"$PATRONI_LOG_LEVEL\" != DEVEL ] || cat << 'BASEBACKUP_VERBOSE_EOF'\n    - verbose\nBASEBACKUP_VERBOSE_EOF\n)\n    - checkpoint: 'fast'\n$(\nif [ -n \"$RECOVERY_FROM_BACKUP\" ] \\\n  && [ -n \"$REPLICATE_FROM_BACKUP\" ]\nthen\n  cat << RECOVERY_EOF\n  replicate:\n    command: 'exec-with-env \"${RESTORE_ENV}\" -- ${PATRONI_CONFIG_PATH}/recovery-from-backup'\n    keep_existing_recovery_conf: False\n    recovery_conf:\n      restore_command: 'exec-with-env \"${RESTORE_ENV}\" -- wal-g wal-fetch %f %p'\n$(\n  [ -z \"$RECOVERY_TARGET\" ] || cat << RECOVERY_TARGET_EOF\n      recovery_target: '$RECOVERY_TARGET'\nRECOVERY_TARGET_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_TIMELINE\" ] || cat << RECOVERY_TARGET_TIMELINE_EOF\n      recovery_target_timeline: '$RECOVERY_TARGET_TIMELINE'\nRECOVERY_TARGET_TIMELINE_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_INCUSIVE\" ] || cat << RECOVERY_TARGET_INCUSIVE_EOF\n      recovery_target_incusive: '$RECOVERY_TARGET_INCUSIVE'\nRECOVERY_TARGET_INCUSIVE_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_NAME\" ] || cat << RECOVERY_TARGET_NAME_EOF\n      recovery_target_name: '$RECOVERY_TARGET_NAME'\nRECOVERY_TARGET_NAME_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_XID\" ] || cat << RECOVERY_TARGET_XID_EOF\n      recovery_target_xid: '$RECOVERY_TARGET_XID'\nRECOVERY_TARGET_XID_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_LSN\" ] || cat << RECOVERY_TARGET_LSN_EOF\n      recovery_target_lsn: '$RECOVERY_TARGET_LSN'\nRECOVERY_TARGET_LSN_EOF\n)\n$(\n  [ -z \"$RECOVERY_TARGET_TIME\" ] || cat << RECOVERY_TARGET_TIME_EOF\n      recovery_target_time: '$RECOVERY_TARGET_TIME'\nRECOVERY_TARGET_TIME_EOF\n)\n      recovery_target_action: 'shutdown'\nRECOVERY_EOF\nfi\n)\nwatchdog:\n  mode: off\ntags: {}\nEOF\nPATRONI_CONFIG_EOF\nchmod 600 \"$PATRONI_CONFIG_FILE_PATH\"\n\ncat << EOF > \"${LOCAL_BIN_PATH}/postgres\"\n#!/bin/sh\nchmod -R 700 \"$PG_DATA_PATH\"\nexec \"$PG_BIN_PATH/postgres\" \"\\$@\"\nEOF\nchmod 755 \"${LOCAL_BIN_PATH}/postgres\"\n\nfor POSTGRES_BIN_FILE in \"${PG_BIN_PATH}\"/*\ndo\n  if [ ! -f \"${LOCAL_BIN_PATH}/${POSTGRES_BIN_FILE##*/}\" ]\n  then\n    ln -s \"${POSTGRES_BIN_FILE}\" \"${LOCAL_BIN_PATH}/${POSTGRES_BIN_FILE##*/}\"\n  fi\ndone\n\nPATRONI_POSTGRESQL_BIN_DIR=\"${LOCAL_BIN_PATH}\" exec exec-with-env \"${PATRONI_ENV}\" -- /usr/bin/patroni \"$PATRONI_CONFIG_FILE_PATH\"\n",
                "start-pgbouncer.sh": "exec /usr/local/bin/pgbouncer \"$PGBOUNCER_CONFIG_FILE_PATH\"\n",
                "start-postgres-exporter.sh": "#!/bin/sh\n\n. \"$TEMPLATES_PATH/${LOCAL_BIN_SHELL_UTILS_PATH##*/}\"\n\nrun_postgres_exporter() {\n  set -x\n  exec /usr/local/bin/postgres_exporter --log.level=\"$PG_EXPORTER_LOG_LEVEL\"\n}\n\nset +x\nPID=\nwhile true\ndo\n  if ! is_child \"$PID\" \\\n    && [ -S \"$PG_RUN_PATH/.s.PGSQL.$PG_PORT\" ]\n  then\n    if [ -n \"$PID\" ] && is_child \"$PID\"\n    then\n      kill \"$PID\" || true\n      wait \"$PID\" || true\n    fi\n    run_postgres_exporter &\n    PID=\"$!\"\n  fi\n  sleep 5\ndone"
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:create-backup.sh": {},
                                "f:exec-with-env": {},
                                "f:group": {},
                                "f:gshadow": {},
                                "f:major-version-upgrade.sh": {},
                                "f:passwd": {},
                                "f:patronictl": {},
                                "f:post-init.sh": {},
                                "f:relocate-binaries.sh": {},
                                "f:reset-patroni.sh": {},
                                "f:run-dbops.sh": {},
                                "f:run-major-version-upgrade.sh": {},
                                "f:run-pgbench.sh": {},
                                "f:run-repack.sh": {},
                                "f:run-restart.sh": {},
                                "f:run-vacuum.sh": {},
                                "f:set-dbops-result.sh": {},
                                "f:set-dbops-running.sh": {},
                                "f:set-pgbench-result.sh": {},
                                "f:setup-arbitrary-user.sh": {},
                                "f:setup-scripts.sh": {},
                                "f:shadow": {},
                                "f:shell-utils": {},
                                "f:start-fluentbit.sh": {},
                                "f:start-patroni.sh": {},
                                "f:start-pgbouncer.sh": {},
                                "f:start-postgres-exporter.sh": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-templates",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1598",
                "self_link": null,
                "uid": "1e1fc81f-02ad-4982-8672-43019c72d431"
            }
        }
    },
    "cron_job": {},
    "daemon_set": {},
    "deployment": {
        "stackgres-operator": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": 1,
                "labels": {
                    "app": "stackgres-operator",
                    "app.kubernetes.io/managed-by": "Helm",
                    "group": "stackgres.io",
                    "version": "1.8.0"
                },
                "managed_fields": [
                    {
                        "api_version": "apps/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:app.kubernetes.io/managed-by": {},
                                    "f:group": {},
                                    "f:version": {}
                                }
                            },
                            "f:spec": {
                                "f:progressDeadlineSeconds": {},
                                "f:replicas": {},
                                "f:revisionHistoryLimit": {},
                                "f:selector": {},
                                "f:strategy": {
                                    "f:rollingUpdate": {
                                        ".": {},
                                        "f:maxSurge": {},
                                        "f:maxUnavailable": {}
                                    },
                                    "f:type": {}
                                },
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:group": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"stackgres-operator\"}": {
                                                ".": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"DISABLE_RECONCILIATION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"EXTENSIONS_REPOSITORY_URLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"INSTALL_CERTS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"INSTALL_CRDS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"INSTALL_WEBHOOKS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"OPERATOR_IMAGE_VERSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"OPERATOR_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"OPERATOR_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"OPERATOR_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"OPERATOR_POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"OPERATOR_SERVICE_ACCOUNT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"PROMETHEUS_AUTOBIND\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"SG_CONTAINER_REGISTRY\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"SG_IMAGE_PULL_POLICY\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/operator/certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:fsGroup": {},
                                            "f:runAsGroup": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {}
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"operator-certs\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:optional": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    },
                    {
                        "api_version": "apps/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:17:57+00:00"
                    }
                ],
                "name": "stackgres-operator",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "1076",
                "self_link": null,
                "uid": "dca0d0db-6a31-4596-bf0c-730bf9fab504"
            },
            "spec": {
                "min_ready_seconds": null,
                "paused": null,
                "progress_deadline_seconds": 600,
                "replicas": 1,
                "revision_history_limit": 10,
                "selector": {
                    "match_expressions": null,
                    "match_labels": {
                        "app": "stackgres-operator",
                        "group": "stackgres.io"
                    }
                },
                "strategy": {
                    "rolling_update": {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": null,
                        "creation_timestamp": null,
                        "deletion_grace_period_seconds": null,
                        "deletion_timestamp": null,
                        "finalizers": null,
                        "generate_name": null,
                        "generation": null,
                        "labels": {
                            "app": "stackgres-operator",
                            "group": "stackgres.io"
                        },
                        "managed_fields": null,
                        "name": null,
                        "namespace": null,
                        "owner_references": null,
                        "resource_version": null,
                        "self_link": null,
                        "uid": null
                    },
                    "spec": {
                        "active_deadline_seconds": null,
                        "affinity": null,
                        "automount_service_account_token": null,
                        "containers": [
                            {
                                "args": null,
                                "command": null,
                                "env": [
                                    {
                                        "name": "OPERATOR_NAME",
                                        "value": "stackgres-operator",
                                        "value_from": null
                                    },
                                    {
                                        "name": "OPERATOR_NAMESPACE",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "metadata.namespace"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_IMAGE_VERSION",
                                        "value": "1.8.0",
                                        "value_from": null
                                    },
                                    {
                                        "name": "DISABLE_RECONCILIATION",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "INSTALL_CRDS",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "INSTALL_WEBHOOKS",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "INSTALL_CERTS",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PROMETHEUS_AUTOBIND",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "OPERATOR_SERVICE_ACCOUNT",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "spec.serviceAccountName"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_POD_NAME",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "metadata.name"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_IP",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "status.podIP"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "SG_CONTAINER_REGISTRY",
                                        "value": "quay.io",
                                        "value_from": null
                                    },
                                    {
                                        "name": "SG_IMAGE_PULL_POLICY",
                                        "value": "IfNotPresent",
                                        "value_from": null
                                    },
                                    {
                                        "name": "EXTENSIONS_REPOSITORY_URLS",
                                        "value": "https://extensions.stackgres.io/postgres/repository",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/stackgres/operator:1.8.0",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": {
                                    "_exec": null,
                                    "failure_threshold": 3,
                                    "grpc": null,
                                    "http_get": {
                                        "host": null,
                                        "http_headers": null,
                                        "path": "/q/health/live",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initial_delay_seconds": 10,
                                    "period_seconds": 60,
                                    "success_threshold": 1,
                                    "tcp_socket": null,
                                    "termination_grace_period_seconds": null,
                                    "timeout_seconds": 10
                                },
                                "name": "stackgres-operator",
                                "ports": [
                                    {
                                        "container_port": 8080,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 8443,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readiness_probe": {
                                    "_exec": null,
                                    "failure_threshold": 3,
                                    "grpc": null,
                                    "http_get": {
                                        "host": null,
                                        "http_headers": null,
                                        "path": "/q/health/ready",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initial_delay_seconds": null,
                                    "period_seconds": 2,
                                    "success_threshold": 1,
                                    "tcp_socket": null,
                                    "termination_grace_period_seconds": null,
                                    "timeout_seconds": 1
                                },
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": null
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/etc/operator/certs",
                                        "mount_propagation": null,
                                        "name": "operator-certs",
                                        "read_only": true,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            }
                        ],
                        "dns_config": null,
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": null,
                        "ephemeral_containers": null,
                        "host_aliases": null,
                        "host_ipc": null,
                        "host_network": null,
                        "host_pid": null,
                        "host_users": null,
                        "hostname": null,
                        "image_pull_secrets": null,
                        "init_containers": null,
                        "node_name": null,
                        "node_selector": null,
                        "os": null,
                        "overhead": null,
                        "preemption_policy": null,
                        "priority": null,
                        "priority_class_name": null,
                        "readiness_gates": null,
                        "resource_claims": null,
                        "restart_policy": "Always",
                        "runtime_class_name": null,
                        "scheduler_name": "default-scheduler",
                        "scheduling_gates": null,
                        "security_context": {
                            "fs_group": 1000,
                            "fs_group_change_policy": null,
                            "run_as_group": 1000,
                            "run_as_non_root": true,
                            "run_as_user": 1000,
                            "se_linux_options": null,
                            "seccomp_profile": null,
                            "supplemental_groups": null,
                            "sysctls": null,
                            "windows_options": null
                        },
                        "service_account": "stackgres-operator",
                        "service_account_name": "stackgres-operator",
                        "set_hostname_as_fqdn": null,
                        "share_process_namespace": null,
                        "subdomain": null,
                        "termination_grace_period_seconds": 30,
                        "tolerations": null,
                        "topology_spread_constraints": null,
                        "volumes": [
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "operator-certs",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": {
                                    "default_mode": 420,
                                    "items": null,
                                    "optional": true,
                                    "secret_name": "stackgres-operator-certs"
                                },
                                "storageos": null,
                                "vsphere_volume": null
                            }
                        ]
                    }
                }
            },
            "status": {
                "available_replicas": 1,
                "collision_count": null,
                "conditions": [
                    {
                        "last_transition_time": "2024-02-06T19:17:57+00:00",
                        "last_update_time": "2024-02-06T19:17:57+00:00",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "last_transition_time": "2024-02-06T19:17:39+00:00",
                        "last_update_time": "2024-02-06T19:17:57+00:00",
                        "message": "ReplicaSet \"stackgres-operator-868bb9f79d\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observed_generation": 1,
                "ready_replicas": 1,
                "replicas": 1,
                "unavailable_replicas": null,
                "updated_replicas": 1
            }
        },
        "stackgres-restapi": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                },
                "creation_timestamp": "2024-02-06T19:18:09+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": 1,
                "labels": {
                    "app": "StackGresConfig",
                    "stackgres.io/config-name": "stackgres-operator"
                },
                "managed_fields": [
                    {
                        "api_version": "apps/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/config-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"917865c8-90f9-416e-af45-5e86379bc632\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {},
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            "f:app": {},
                                            "f:stackgres.io/config-name": {},
                                            "f:stackgres.io/config-uid": {},
                                            "f:stackgres.io/restapi": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {},
                                        "f:containers": {
                                            "k:{\"name\":\"stackgres-adminui\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    "k:{\"name\":\"GRAFANA_DASHBOARD_LIST\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_DASHBOARD_URLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_EMBEDDED\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_SCHEMA\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_TOKEN\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_WEB_HOST\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"SHOW_DEBUG\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    "k:{\"containerPort\":9080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    "f:runAsGroup": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/etc/nginx/conf.d\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/nginx/nginx.conf\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/nginx/template.d\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/operator/certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/local/bin/start-nginx.sh\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/cache/nginx\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/log/nginx\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"stackgres-restapi\"}": {
                                                ".": {},
                                                "f:env": {
                                                    "k:{\"name\":\"APP_OPTS\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"DEBUG_RESTAPI\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DEBUG_RESTAPI_SUSPEND\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"EXTENSIONS_REPOSITORY_URLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_EMBEDDED\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"JAVA_OPTS\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"OPERATOR_VERSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"RESTAPI_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"RESTAPI_LOG_LEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"RESTAPI_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"RESTAPI_SHOW_STACK_TRACES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"STACKGRES_AUTH_TYPE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"USE_ARBITRARY_USER\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    "f:httpGet": {
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    "f:httpGet": {
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    "f:runAsGroup": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/etc/operator/certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:securityContext": {
                                            "f:fsGroup": {},
                                            "f:runAsNonRoot": {}
                                        },
                                        "f:serviceAccount": {},
                                        "f:volumes": {
                                            "k:{\"name\":\"adminui-nginx\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    "f:name": {},
                                                    "f:optional": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"adminui-nginx-etc\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"web-certs\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    "f:optional": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:18:09+00:00"
                    },
                    {
                        "api_version": "apps/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/revision": {}
                                }
                            },
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:conditions": {
                                    ".": {},
                                    "k:{\"type\":\"Available\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Progressing\"}": {
                                        ".": {},
                                        "f:lastTransitionTime": {},
                                        "f:lastUpdateTime": {},
                                        "f:message": {},
                                        "f:reason": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:18:39+00:00"
                    }
                ],
                "name": "stackgres-restapi",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGConfig",
                        "name": "stackgres-operator",
                        "uid": "917865c8-90f9-416e-af45-5e86379bc632"
                    }
                ],
                "resource_version": "1203",
                "self_link": null,
                "uid": "722a8148-550a-4eca-a9f0-88461eb7bc3d"
            },
            "spec": {
                "min_ready_seconds": null,
                "paused": null,
                "progress_deadline_seconds": 600,
                "replicas": 1,
                "revision_history_limit": 10,
                "selector": {
                    "match_expressions": null,
                    "match_labels": {
                        "app": "StackGresConfig",
                        "stackgres.io/config-name": "stackgres-operator",
                        "stackgres.io/config-uid": "917865c8-90f9-416e-af45-5e86379bc632",
                        "stackgres.io/restapi": "true"
                    }
                },
                "strategy": {
                    "rolling_update": {
                        "max_surge": "25%",
                        "max_unavailable": "25%"
                    },
                    "type": "RollingUpdate"
                },
                "template": {
                    "metadata": {
                        "annotations": null,
                        "creation_timestamp": null,
                        "deletion_grace_period_seconds": null,
                        "deletion_timestamp": null,
                        "finalizers": null,
                        "generate_name": null,
                        "generation": null,
                        "labels": {
                            "app": "StackGresConfig",
                            "stackgres.io/config-name": "stackgres-operator",
                            "stackgres.io/config-uid": "917865c8-90f9-416e-af45-5e86379bc632",
                            "stackgres.io/restapi": "true"
                        },
                        "managed_fields": null,
                        "name": null,
                        "namespace": null,
                        "owner_references": null,
                        "resource_version": null,
                        "self_link": null,
                        "uid": null
                    },
                    "spec": {
                        "active_deadline_seconds": null,
                        "affinity": {
                            "node_affinity": null,
                            "pod_affinity": null,
                            "pod_anti_affinity": null
                        },
                        "automount_service_account_token": null,
                        "containers": [
                            {
                                "args": null,
                                "command": null,
                                "env": [
                                    {
                                        "name": "RESTAPI_NAMESPACE",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "metadata.namespace"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "RESTAPI_IP",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "status.podIP"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "RESTAPI_LOG_LEVEL",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "RESTAPI_SHOW_STACK_TRACES",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "APP_OPTS",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "JAVA_OPTS",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "DEBUG_RESTAPI",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "DEBUG_RESTAPI_SUSPEND",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_EMBEDDED",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "USE_ARBITRARY_USER",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "EXTENSIONS_REPOSITORY_URLS",
                                        "value": "https://extensions.stackgres.io/postgres/repository",
                                        "value_from": null
                                    },
                                    {
                                        "name": "STACKGRES_AUTH_TYPE",
                                        "value": "jwt",
                                        "value_from": null
                                    },
                                    {
                                        "name": "OPERATOR_VERSION",
                                        "value": "1.8.0",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/stackgres/restapi:1.8.0",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": {
                                    "_exec": null,
                                    "failure_threshold": 3,
                                    "grpc": null,
                                    "http_get": {
                                        "host": null,
                                        "http_headers": null,
                                        "path": "/q/health/live",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initial_delay_seconds": 5,
                                    "period_seconds": 30,
                                    "success_threshold": 1,
                                    "tcp_socket": null,
                                    "termination_grace_period_seconds": null,
                                    "timeout_seconds": 10
                                },
                                "name": "stackgres-restapi",
                                "ports": [
                                    {
                                        "container_port": 8080,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "resthttp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 8443,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "resthttps",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readiness_probe": {
                                    "_exec": null,
                                    "failure_threshold": 3,
                                    "grpc": null,
                                    "http_get": {
                                        "host": null,
                                        "http_headers": null,
                                        "path": "/q/health/ready",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initial_delay_seconds": null,
                                    "period_seconds": 2,
                                    "success_threshold": 1,
                                    "tcp_socket": null,
                                    "termination_grace_period_seconds": null,
                                    "timeout_seconds": 1
                                },
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": null
                                },
                                "security_context": {
                                    "allow_privilege_escalation": null,
                                    "capabilities": null,
                                    "privileged": null,
                                    "proc_mount": null,
                                    "read_only_root_filesystem": null,
                                    "run_as_group": 185,
                                    "run_as_non_root": true,
                                    "run_as_user": 185,
                                    "se_linux_options": null,
                                    "seccomp_profile": null,
                                    "windows_options": null
                                },
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/etc/operator/certs",
                                        "mount_propagation": null,
                                        "name": "web-certs",
                                        "read_only": true,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": null,
                                "command": [
                                    "/bin/sh",
                                    "-ex",
                                    "/usr/local/bin/start-nginx.sh"
                                ],
                                "env": [
                                    {
                                        "name": "SHOW_DEBUG",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_DASHBOARD_LIST",
                                        "value": "archiving.json\nconnection-pooling.json\ncurrent-activity.json\ndb-info.json\ndb-objects.json\ndb-os.json\nqueries.json\nreplication.json",
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_EMBEDDED",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_DASHBOARD_URLS",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_SCHEMA",
                                        "value": "http",
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_WEB_HOST",
                                        "value": "localhost:8080",
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_TOKEN",
                                        "value": "unknown",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/stackgres/admin-ui:1.8.0",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "stackgres-adminui",
                                "ports": [
                                    {
                                        "container_port": 9080,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 9443,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": null
                                },
                                "security_context": {
                                    "allow_privilege_escalation": null,
                                    "capabilities": null,
                                    "privileged": null,
                                    "proc_mount": null,
                                    "read_only_root_filesystem": null,
                                    "run_as_group": 996,
                                    "run_as_non_root": true,
                                    "run_as_user": 998,
                                    "se_linux_options": null,
                                    "seccomp_profile": null,
                                    "windows_options": null
                                },
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/etc/operator/certs",
                                        "mount_propagation": null,
                                        "name": "web-certs",
                                        "read_only": true,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/local/bin/start-nginx.sh",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx",
                                        "read_only": true,
                                        "sub_path": "start-nginx.sh",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/nginx/nginx.conf",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx",
                                        "read_only": true,
                                        "sub_path": "nginx.conf",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/nginx/template.d",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/nginx/conf.d",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx-etc",
                                        "read_only": null,
                                        "sub_path": "etc/nginx/conf.d",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/cache/nginx",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx-etc",
                                        "read_only": null,
                                        "sub_path": "var/cache/nginx",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/run",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx-etc",
                                        "read_only": null,
                                        "sub_path": "var/run",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/log/nginx",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx-etc",
                                        "read_only": null,
                                        "sub_path": "var/log/nginx",
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            }
                        ],
                        "dns_config": null,
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": null,
                        "ephemeral_containers": null,
                        "host_aliases": null,
                        "host_ipc": null,
                        "host_network": null,
                        "host_pid": null,
                        "host_users": null,
                        "hostname": null,
                        "image_pull_secrets": null,
                        "init_containers": null,
                        "node_name": null,
                        "node_selector": null,
                        "os": null,
                        "overhead": null,
                        "preemption_policy": null,
                        "priority": null,
                        "priority_class_name": null,
                        "readiness_gates": null,
                        "resource_claims": null,
                        "restart_policy": "Always",
                        "runtime_class_name": null,
                        "scheduler_name": "default-scheduler",
                        "scheduling_gates": null,
                        "security_context": {
                            "fs_group": 185,
                            "fs_group_change_policy": null,
                            "run_as_group": null,
                            "run_as_non_root": true,
                            "run_as_user": null,
                            "se_linux_options": null,
                            "seccomp_profile": null,
                            "supplemental_groups": null,
                            "sysctls": null,
                            "windows_options": null
                        },
                        "service_account": "stackgres-restapi",
                        "service_account_name": "stackgres-restapi",
                        "set_hostname_as_fqdn": null,
                        "share_process_namespace": null,
                        "subdomain": null,
                        "termination_grace_period_seconds": 30,
                        "tolerations": null,
                        "topology_spread_constraints": null,
                        "volumes": [
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "web-certs",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": {
                                    "default_mode": 420,
                                    "items": null,
                                    "optional": false,
                                    "secret_name": "stackgres-operator-web-certs"
                                },
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": {
                                    "default_mode": 420,
                                    "items": null,
                                    "name": "stackgres-restapi-nginx",
                                    "optional": false
                                },
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "adminui-nginx",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": null,
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "adminui-nginx-etc",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            }
                        ]
                    }
                }
            },
            "status": {
                "available_replicas": 1,
                "collision_count": null,
                "conditions": [
                    {
                        "last_transition_time": "2024-02-06T19:18:39+00:00",
                        "last_update_time": "2024-02-06T19:18:39+00:00",
                        "message": "Deployment has minimum availability.",
                        "reason": "MinimumReplicasAvailable",
                        "status": "True",
                        "type": "Available"
                    },
                    {
                        "last_transition_time": "2024-02-06T19:18:09+00:00",
                        "last_update_time": "2024-02-06T19:18:39+00:00",
                        "message": "ReplicaSet \"stackgres-restapi-7867b48c76\" has successfully progressed.",
                        "reason": "NewReplicaSetAvailable",
                        "status": "True",
                        "type": "Progressing"
                    }
                ],
                "observed_generation": 1,
                "ready_replicas": 1,
                "replicas": 1,
                "unavailable_replicas": null,
                "updated_replicas": 1
            }
        }
    },
    "endpoint": {
        "kubernetes": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:46+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "endpointslice.kubernetes.io/skip-mirror": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:endpointslice.kubernetes.io/skip-mirror": {}
                                }
                            },
                            "f:subsets": {}
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:46+00:00"
                    }
                ],
                "name": "kubernetes",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "232",
                "self_link": null,
                "uid": "50813c48-d3ae-4cd5-a9ce-e331090ebcf8"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": null,
                            "ip": "172.18.0.4",
                            "node_name": null,
                            "target_ref": null
                        }
                    ],
                    "not_ready_addresses": null,
                    "ports": [
                        {
                            "app_protocol": null,
                            "name": "https",
                            "port": 6443,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        "stackgres": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "acquireTime": "2024-02-06T19:23:22.679731+00:00",
                    "leader": "stackgres-0",
                    "optime": "83886408",
                    "renewTime": "2024-02-06T19:44:42.489393+00:00",
                    "stackgres.io/operatorVersion": "1.8.0",
                    "transitions": "0",
                    "ttl": "30"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:acquireTime": {},
                                    "f:leader": {},
                                    "f:optime": {},
                                    "f:renewTime": {},
                                    "f:transitions": {},
                                    "f:ttl": {}
                                }
                            },
                            "f:subsets": {}
                        },
                        "manager": "Patroni",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:44:42+00:00"
                    }
                ],
                "name": "stackgres",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "4583",
                "self_link": null,
                "uid": "e3b52412-2002-4542-8a50-198a999a267e"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": "stackgres-0",
                            "ip": "10.244.2.3",
                            "node_name": "kind-worker2",
                            "target_ref": {
                                "api_version": null,
                                "field_path": null,
                                "kind": "Pod",
                                "name": "stackgres-0",
                                "namespace": "default",
                                "resource_version": "1835",
                                "uid": "2d2680aa-244a-4147-9b8e-d2097a443be0"
                            }
                        }
                    ],
                    "not_ready_addresses": null,
                    "ports": [
                        {
                            "app_protocol": null,
                            "name": "pgport",
                            "port": 7432,
                            "protocol": "TCP"
                        },
                        {
                            "app_protocol": null,
                            "name": "pgreplication",
                            "port": 7433,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        "stackgres-config": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "config": "{\"ttl\":30,\"postgresql\":{\"use_slots\":true,\"use_pg_rewind\":true,\"parameters\":{\"archive_command\":\"/bin/true\",\"archive_mode\":\"on\",\"autovacuum_max_workers\":\"3\",\"autovacuum_vacuum_cost_delay\":\"2ms\",\"autovacuum_work_mem\":\"512MB\",\"checkpoint_completion_target\":\"0.9\",\"checkpoint_timeout\":\"15min\",\"default_statistics_target\":\"200\",\"enable_partitionwise_aggregate\":\"on\",\"enable_partitionwise_join\":\"on\",\"fsync\":\"on\",\"hot_standby\":\"on\",\"huge_pages\":\"off\",\"jit_inline_above_cost\":\"-1\",\"lc_messages\":\"C\",\"listen_addresses\":\"localhost\",\"log_autovacuum_min_duration\":\"0ms\",\"log_checkpoints\":\"on\",\"log_connections\":\"on\",\"log_destination\":\"stderr\",\"log_directory\":\"log\",\"log_disconnections\":\"on\",\"log_filename\":\"postgres-%M.log\",\"log_line_prefix\":\"%t [%p]: db=%d,user=%u,app=%a,client=%h \",\"log_lock_waits\":\"on\",\"log_min_duration_statement\":\"1s\",\"log_rotation_age\":\"30min\",\"log_rotation_size\":\"0kB\",\"log_statement\":\"none\",\"log_temp_files\":\"0kB\",\"log_truncate_on_rotation\":\"on\",\"logging_collector\":\"off\",\"maintenance_work_mem\":\"2GB\",\"max_locks_per_transaction\":\"128\",\"max_pred_locks_per_transaction\":\"128\",\"max_prepared_transactions\":\"32\",\"max_replication_slots\":\"20\",\"max_wal_senders\":\"20\",\"max_wal_size\":\"2GB\",\"min_wal_size\":\"1GB\",\"password_encryption\":\"scram-sha-256\",\"pg_stat_statements.track_utility\":\"off\",\"port\":\"5432\",\"random_page_cost\":\"1.5\",\"shared_buffers\":\"512MB\",\"shared_preload_libraries\":\"pg_stat_statements, auto_explain\",\"superuser_reserved_connections\":\"8\",\"track_activity_query_size\":\"4kB\",\"track_commit_timestamp\":\"on\",\"track_functions\":\"pl\",\"track_io_timing\":\"on\",\"wal_compression\":\"on\",\"wal_keep_segments\":\"96\",\"wal_level\":\"logical\",\"wal_log_hints\":\"on\",\"work_mem\":\"10MB\"}},\"loop_wait\":10,\"retry_timeout\":10,\"synchronous_mode\":false,\"synchronous_mode_strict\":false,\"check_timeline\":true,\"synchronous_node_count\":1}",
                    "initialize": "7332571733469684287",
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:config": {},
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "fabric8-kubernetes-client",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:initialize": {}
                                }
                            }
                        },
                        "manager": "Patroni",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:23:22+00:00"
                    }
                ],
                "name": "stackgres-config",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1836",
                "self_link": null,
                "uid": "ce5d1b4c-068b-43e2-83fd-1b3051c576ac"
            },
            "subsets": null
        },
        "stackgres-failover": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-failover",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1608",
                "self_link": null,
                "uid": "a3aea5e8-e3cc-4c74-8a76-48b16f09bb72"
            },
            "subsets": null
        },
        "stackgres-operator": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2024-02-06T19:17:57Z"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            },
                            "f:subsets": {}
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:57+00:00"
                    }
                ],
                "name": "stackgres-operator",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "1073",
                "self_link": null,
                "uid": "53b553b9-4d1b-4197-a286-b8ce06c530b2"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": null,
                            "ip": "10.244.3.2",
                            "node_name": "kind-worker",
                            "target_ref": {
                                "api_version": null,
                                "field_path": null,
                                "kind": "Pod",
                                "name": "stackgres-operator-868bb9f79d-92nln",
                                "namespace": "default",
                                "resource_version": null,
                                "uid": "0b4d960b-dfee-4ce1-a5ab-305d27d50c63"
                            }
                        }
                    ],
                    "not_ready_addresses": null,
                    "ports": [
                        {
                            "app_protocol": null,
                            "name": "https",
                            "port": 8443,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        "stackgres-replicas": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2024-02-06T19:27:11Z"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                }
                            },
                            "f:subsets": {}
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:27:11+00:00"
                    }
                ],
                "name": "stackgres-replicas",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "2466",
                "self_link": null,
                "uid": "2539f472-00f4-4db7-9762-34972b43ff88"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": null,
                            "ip": "10.244.1.3",
                            "node_name": "kind-worker3",
                            "target_ref": {
                                "api_version": null,
                                "field_path": null,
                                "kind": "Pod",
                                "name": "stackgres-1",
                                "namespace": "default",
                                "resource_version": null,
                                "uid": "22cb0617-4399-4a4c-8dde-c8aacb619cf0"
                            }
                        },
                        {
                            "hostname": null,
                            "ip": "10.244.3.5",
                            "node_name": "kind-worker",
                            "target_ref": {
                                "api_version": null,
                                "field_path": null,
                                "kind": "Pod",
                                "name": "stackgres-2",
                                "namespace": "default",
                                "resource_version": null,
                                "uid": "a9e5e28c-eb2a-4d98-895d-8d8bc2206347"
                            }
                        }
                    ],
                    "not_ready_addresses": null,
                    "ports": [
                        {
                            "app_protocol": null,
                            "name": "pgport",
                            "port": 7432,
                            "protocol": "TCP"
                        },
                        {
                            "app_protocol": null,
                            "name": "pgreplication",
                            "port": 7433,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        "stackgres-rest": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2024-02-06T19:27:11Z"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                }
                            },
                            "f:subsets": {}
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:27:11+00:00"
                    }
                ],
                "name": "stackgres-rest",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "2463",
                "self_link": null,
                "uid": "61aaffe7-6ba5-4367-9b30-9f5df941716f"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": null,
                            "ip": "10.244.1.3",
                            "node_name": "kind-worker3",
                            "target_ref": {
                                "api_version": null,
                                "field_path": null,
                                "kind": "Pod",
                                "name": "stackgres-1",
                                "namespace": "default",
                                "resource_version": null,
                                "uid": "22cb0617-4399-4a4c-8dde-c8aacb619cf0"
                            }
                        },
                        {
                            "hostname": null,
                            "ip": "10.244.2.3",
                            "node_name": "kind-worker2",
                            "target_ref": {
                                "api_version": null,
                                "field_path": null,
                                "kind": "Pod",
                                "name": "stackgres-0",
                                "namespace": "default",
                                "resource_version": null,
                                "uid": "2d2680aa-244a-4147-9b8e-d2097a443be0"
                            }
                        },
                        {
                            "hostname": null,
                            "ip": "10.244.3.5",
                            "node_name": "kind-worker",
                            "target_ref": {
                                "api_version": null,
                                "field_path": null,
                                "kind": "Pod",
                                "name": "stackgres-2",
                                "namespace": "default",
                                "resource_version": null,
                                "uid": "a9e5e28c-eb2a-4d98-895d-8d8bc2206347"
                            }
                        }
                    ],
                    "not_ready_addresses": null,
                    "ports": [
                        {
                            "app_protocol": null,
                            "name": "patroniport",
                            "port": 8008,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        "stackgres-restapi": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "endpoints.kubernetes.io/last-change-trigger-time": "2024-02-06T19:18:39Z"
                },
                "creation_timestamp": "2024-02-06T19:18:09+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresConfig",
                    "stackgres.io/config-name": "stackgres-operator"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:endpoints.kubernetes.io/last-change-trigger-time": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:stackgres.io/config-name": {}
                                }
                            },
                            "f:subsets": {}
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:18:39+00:00"
                    }
                ],
                "name": "stackgres-restapi",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "1200",
                "self_link": null,
                "uid": "7aabe810-dc62-4418-a98b-8b34c2941ce0"
            },
            "subsets": [
                {
                    "addresses": [
                        {
                            "hostname": null,
                            "ip": "10.244.3.3",
                            "node_name": "kind-worker",
                            "target_ref": {
                                "api_version": null,
                                "field_path": null,
                                "kind": "Pod",
                                "name": "stackgres-restapi-7867b48c76-6v4cz",
                                "namespace": "default",
                                "resource_version": null,
                                "uid": "4afecca8-c9ac-43fc-848b-b82a74d8b13d"
                            }
                        }
                    ],
                    "not_ready_addresses": null,
                    "ports": [
                        {
                            "app_protocol": null,
                            "name": "https",
                            "port": 9443,
                            "protocol": "TCP"
                        }
                    ]
                }
            ]
        },
        "stackgres-sync": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-sync",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1609",
                "self_link": null,
                "uid": "ae91347a-5018-466e-ac12-fc02183f0fed"
            },
            "subsets": null
        }
    },
    "ingress": {},
    "job": {},
    "network_policy": {},
    "persistent_volume_claim": {
        "stackgres-data-stackgres-0": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "pv.kubernetes.io/bind-completed": "yes",
                    "pv.kubernetes.io/bound-by-controller": "yes",
                    "stackgres.io/operatorVersion": "1.8.0",
                    "volume.beta.kubernetes.io/storage-provisioner": "rancher.io/local-path",
                    "volume.kubernetes.io/selected-node": "kind-worker2",
                    "volume.kubernetes.io/storage-provisioner": "rancher.io/local-path"
                },
                "creation_timestamp": "2024-02-06T19:22:11+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": [
                    "kubernetes.io/pvc-protection"
                ],
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d",
                    "stackgres.io/disruptible": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {},
                                    "f:volume.beta.kubernetes.io/storage-provisioner": {},
                                    "f:volume.kubernetes.io/selected-node": {},
                                    "f:volume.kubernetes.io/storage-provisioner": {}
                                },
                                "f:finalizers": {
                                    "v:\"kubernetes.io/pvc-protection\"": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {},
                                    "f:stackgres.io/disruptible": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:accessModes": {},
                                "f:resources": {
                                    "f:requests": {
                                        "f:storage": {}
                                    }
                                },
                                "f:storageClassName": {},
                                "f:volumeMode": {}
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:11+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:volume.kubernetes.io/selected-node": {}
                                }
                            }
                        },
                        "manager": "kube-scheduler",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:22:11+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:pv.kubernetes.io/bind-completed": {},
                                    "f:pv.kubernetes.io/bound-by-controller": {},
                                    "f:stackgres.io/operatorVersion": {},
                                    "f:volume.beta.kubernetes.io/storage-provisioner": {},
                                    "f:volume.kubernetes.io/storage-provisioner": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {},
                                    "f:stackgres.io/disruptible": {}
                                }
                            },
                            "f:spec": {
                                "f:accessModes": {},
                                "f:resources": {
                                    "f:requests": {
                                        ".": {},
                                        "f:storage": {}
                                    }
                                },
                                "f:volumeMode": {},
                                "f:volumeName": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:22:17+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:accessModes": {},
                                "f:capacity": {
                                    ".": {},
                                    "f:storage": {}
                                },
                                "f:phase": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:22:17+00:00"
                    }
                ],
                "name": "stackgres-data-stackgres-0",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1669",
                "self_link": null,
                "uid": "9ceb2c35-86d2-4a3d-a999-124925ba9cc5"
            },
            "spec": {
                "access_modes": [
                    "ReadWriteOnce"
                ],
                "data_source": null,
                "data_source_ref": null,
                "resources": {
                    "claims": null,
                    "limits": null,
                    "requests": {
                        "storage": "10Gi"
                    }
                },
                "selector": null,
                "storage_class_name": "standard",
                "volume_mode": "Filesystem",
                "volume_name": "pvc-9ceb2c35-86d2-4a3d-a999-124925ba9cc5"
            },
            "status": {
                "access_modes": [
                    "ReadWriteOnce"
                ],
                "allocated_resources": null,
                "capacity": {
                    "storage": "10Gi"
                },
                "conditions": null,
                "phase": "Bound",
                "resize_status": null
            }
        },
        "stackgres-data-stackgres-1": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "pv.kubernetes.io/bind-completed": "yes",
                    "pv.kubernetes.io/bound-by-controller": "yes",
                    "stackgres.io/operatorVersion": "1.8.0",
                    "volume.beta.kubernetes.io/storage-provisioner": "rancher.io/local-path",
                    "volume.kubernetes.io/selected-node": "kind-worker3",
                    "volume.kubernetes.io/storage-provisioner": "rancher.io/local-path"
                },
                "creation_timestamp": "2024-02-06T19:23:50+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": [
                    "kubernetes.io/pvc-protection"
                ],
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d",
                    "stackgres.io/disruptible": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:volume.kubernetes.io/selected-node": {}
                                }
                            }
                        },
                        "manager": "kube-scheduler",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:23:51+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:pv.kubernetes.io/bind-completed": {},
                                    "f:pv.kubernetes.io/bound-by-controller": {},
                                    "f:stackgres.io/operatorVersion": {},
                                    "f:volume.beta.kubernetes.io/storage-provisioner": {},
                                    "f:volume.kubernetes.io/storage-provisioner": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {},
                                    "f:stackgres.io/disruptible": {}
                                }
                            },
                            "f:spec": {
                                "f:accessModes": {},
                                "f:resources": {
                                    "f:requests": {
                                        ".": {},
                                        "f:storage": {}
                                    }
                                },
                                "f:volumeMode": {},
                                "f:volumeName": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:23:57+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:accessModes": {},
                                "f:capacity": {
                                    ".": {},
                                    "f:storage": {}
                                },
                                "f:phase": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:23:57+00:00"
                    }
                ],
                "name": "stackgres-data-stackgres-1",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "1947",
                "self_link": null,
                "uid": "0705b7c0-ce9c-44ec-a533-f124c6ff1541"
            },
            "spec": {
                "access_modes": [
                    "ReadWriteOnce"
                ],
                "data_source": null,
                "data_source_ref": null,
                "resources": {
                    "claims": null,
                    "limits": null,
                    "requests": {
                        "storage": "10Gi"
                    }
                },
                "selector": null,
                "storage_class_name": "standard",
                "volume_mode": "Filesystem",
                "volume_name": "pvc-0705b7c0-ce9c-44ec-a533-f124c6ff1541"
            },
            "status": {
                "access_modes": [
                    "ReadWriteOnce"
                ],
                "allocated_resources": null,
                "capacity": {
                    "storage": "10Gi"
                },
                "conditions": null,
                "phase": "Bound",
                "resize_status": null
            }
        },
        "stackgres-data-stackgres-2": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "pv.kubernetes.io/bind-completed": "yes",
                    "pv.kubernetes.io/bound-by-controller": "yes",
                    "stackgres.io/operatorVersion": "1.8.0",
                    "volume.beta.kubernetes.io/storage-provisioner": "rancher.io/local-path",
                    "volume.kubernetes.io/selected-node": "kind-worker",
                    "volume.kubernetes.io/storage-provisioner": "rancher.io/local-path"
                },
                "creation_timestamp": "2024-02-06T19:25:34+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": [
                    "kubernetes.io/pvc-protection"
                ],
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d",
                    "stackgres.io/disruptible": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:volume.kubernetes.io/selected-node": {}
                                }
                            }
                        },
                        "manager": "kube-scheduler",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:25:34+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:pv.kubernetes.io/bind-completed": {},
                                    "f:pv.kubernetes.io/bound-by-controller": {},
                                    "f:stackgres.io/operatorVersion": {},
                                    "f:volume.beta.kubernetes.io/storage-provisioner": {},
                                    "f:volume.kubernetes.io/storage-provisioner": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {},
                                    "f:stackgres.io/disruptible": {}
                                }
                            },
                            "f:spec": {
                                "f:accessModes": {},
                                "f:resources": {
                                    "f:requests": {
                                        ".": {},
                                        "f:storage": {}
                                    }
                                },
                                "f:volumeMode": {},
                                "f:volumeName": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:25:40+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:accessModes": {},
                                "f:capacity": {
                                    ".": {},
                                    "f:storage": {}
                                },
                                "f:phase": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:25:40+00:00"
                    }
                ],
                "name": "stackgres-data-stackgres-2",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "2237",
                "self_link": null,
                "uid": "b5293e3a-62cd-48f5-9fa0-80f85fad88f1"
            },
            "spec": {
                "access_modes": [
                    "ReadWriteOnce"
                ],
                "data_source": null,
                "data_source_ref": null,
                "resources": {
                    "claims": null,
                    "limits": null,
                    "requests": {
                        "storage": "10Gi"
                    }
                },
                "selector": null,
                "storage_class_name": "standard",
                "volume_mode": "Filesystem",
                "volume_name": "pvc-b5293e3a-62cd-48f5-9fa0-80f85fad88f1"
            },
            "status": {
                "access_modes": [
                    "ReadWriteOnce"
                ],
                "allocated_resources": null,
                "capacity": {
                    "storage": "10Gi"
                },
                "conditions": null,
                "phase": "Bound",
                "resize_status": null
            }
        }
    },
    "persistent_volume": {
        "pvc-0705b7c0-ce9c-44ec-a533-f124c6ff1541": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "pv.kubernetes.io/provisioned-by": "rancher.io/local-path"
                },
                "creation_timestamp": "2024-02-06T19:23:57+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": [
                    "kubernetes.io/pv-protection"
                ],
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:phase": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:23:57+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:pv.kubernetes.io/provisioned-by": {}
                                }
                            },
                            "f:spec": {
                                "f:accessModes": {},
                                "f:capacity": {
                                    ".": {},
                                    "f:storage": {}
                                },
                                "f:claimRef": {
                                    ".": {},
                                    "f:apiVersion": {},
                                    "f:kind": {},
                                    "f:name": {},
                                    "f:namespace": {},
                                    "f:resourceVersion": {},
                                    "f:uid": {}
                                },
                                "f:hostPath": {
                                    ".": {},
                                    "f:path": {},
                                    "f:type": {}
                                },
                                "f:nodeAffinity": {
                                    ".": {},
                                    "f:required": {}
                                },
                                "f:persistentVolumeReclaimPolicy": {},
                                "f:storageClassName": {},
                                "f:volumeMode": {}
                            }
                        },
                        "manager": "local-path-provisioner",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:23:57+00:00"
                    }
                ],
                "name": "pvc-0705b7c0-ce9c-44ec-a533-f124c6ff1541",
                "namespace": null,
                "owner_references": null,
                "resource_version": "1945",
                "self_link": null,
                "uid": "ea0f49ac-179d-442e-b0f4-b105cf763d4f"
            },
            "spec": {
                "access_modes": [
                    "ReadWriteOnce"
                ],
                "aws_elastic_block_store": null,
                "azure_disk": null,
                "azure_file": null,
                "capacity": {
                    "storage": "10Gi"
                },
                "cephfs": null,
                "cinder": null,
                "claim_ref": {
                    "api_version": "v1",
                    "field_path": null,
                    "kind": "PersistentVolumeClaim",
                    "name": "stackgres-data-stackgres-1",
                    "namespace": "default",
                    "resource_version": "1914",
                    "uid": "0705b7c0-ce9c-44ec-a533-f124c6ff1541"
                },
                "csi": null,
                "fc": null,
                "flex_volume": null,
                "flocker": null,
                "gce_persistent_disk": null,
                "glusterfs": null,
                "host_path": {
                    "path": "/var/local-path-provisioner/pvc-0705b7c0-ce9c-44ec-a533-f124c6ff1541_default_stackgres-data-stackgres-1",
                    "type": "DirectoryOrCreate"
                },
                "iscsi": null,
                "local": null,
                "mount_options": null,
                "nfs": null,
                "node_affinity": {
                    "required": {
                        "node_selector_terms": [
                            {
                                "match_expressions": [
                                    {
                                        "key": "kubernetes.io/hostname",
                                        "operator": "In",
                                        "values": [
                                            "kind-worker3"
                                        ]
                                    }
                                ],
                                "match_fields": null
                            }
                        ]
                    }
                },
                "persistent_volume_reclaim_policy": "Delete",
                "photon_persistent_disk": null,
                "portworx_volume": null,
                "quobyte": null,
                "rbd": null,
                "scale_io": null,
                "storage_class_name": "standard",
                "storageos": null,
                "volume_mode": "Filesystem",
                "vsphere_volume": null
            },
            "status": {
                "message": null,
                "phase": "Bound",
                "reason": null
            }
        },
        "pvc-9ceb2c35-86d2-4a3d-a999-124925ba9cc5": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "pv.kubernetes.io/provisioned-by": "rancher.io/local-path"
                },
                "creation_timestamp": "2024-02-06T19:22:17+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": [
                    "kubernetes.io/pv-protection"
                ],
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:phase": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:22:17+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:pv.kubernetes.io/provisioned-by": {}
                                }
                            },
                            "f:spec": {
                                "f:accessModes": {},
                                "f:capacity": {
                                    ".": {},
                                    "f:storage": {}
                                },
                                "f:claimRef": {
                                    ".": {},
                                    "f:apiVersion": {},
                                    "f:kind": {},
                                    "f:name": {},
                                    "f:namespace": {},
                                    "f:resourceVersion": {},
                                    "f:uid": {}
                                },
                                "f:hostPath": {
                                    ".": {},
                                    "f:path": {},
                                    "f:type": {}
                                },
                                "f:nodeAffinity": {
                                    ".": {},
                                    "f:required": {}
                                },
                                "f:persistentVolumeReclaimPolicy": {},
                                "f:storageClassName": {},
                                "f:volumeMode": {}
                            }
                        },
                        "manager": "local-path-provisioner",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:22:17+00:00"
                    }
                ],
                "name": "pvc-9ceb2c35-86d2-4a3d-a999-124925ba9cc5",
                "namespace": null,
                "owner_references": null,
                "resource_version": "1666",
                "self_link": null,
                "uid": "a5e1da32-d733-4971-a118-c1ec4cbabdda"
            },
            "spec": {
                "access_modes": [
                    "ReadWriteOnce"
                ],
                "aws_elastic_block_store": null,
                "azure_disk": null,
                "azure_file": null,
                "capacity": {
                    "storage": "10Gi"
                },
                "cephfs": null,
                "cinder": null,
                "claim_ref": {
                    "api_version": "v1",
                    "field_path": null,
                    "kind": "PersistentVolumeClaim",
                    "name": "stackgres-data-stackgres-0",
                    "namespace": "default",
                    "resource_version": "1634",
                    "uid": "9ceb2c35-86d2-4a3d-a999-124925ba9cc5"
                },
                "csi": null,
                "fc": null,
                "flex_volume": null,
                "flocker": null,
                "gce_persistent_disk": null,
                "glusterfs": null,
                "host_path": {
                    "path": "/var/local-path-provisioner/pvc-9ceb2c35-86d2-4a3d-a999-124925ba9cc5_default_stackgres-data-stackgres-0",
                    "type": "DirectoryOrCreate"
                },
                "iscsi": null,
                "local": null,
                "mount_options": null,
                "nfs": null,
                "node_affinity": {
                    "required": {
                        "node_selector_terms": [
                            {
                                "match_expressions": [
                                    {
                                        "key": "kubernetes.io/hostname",
                                        "operator": "In",
                                        "values": [
                                            "kind-worker2"
                                        ]
                                    }
                                ],
                                "match_fields": null
                            }
                        ]
                    }
                },
                "persistent_volume_reclaim_policy": "Delete",
                "photon_persistent_disk": null,
                "portworx_volume": null,
                "quobyte": null,
                "rbd": null,
                "scale_io": null,
                "storage_class_name": "standard",
                "storageos": null,
                "volume_mode": "Filesystem",
                "vsphere_volume": null
            },
            "status": {
                "message": null,
                "phase": "Bound",
                "reason": null
            }
        },
        "pvc-b5293e3a-62cd-48f5-9fa0-80f85fad88f1": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "pv.kubernetes.io/provisioned-by": "rancher.io/local-path"
                },
                "creation_timestamp": "2024-02-06T19:25:40+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": [
                    "kubernetes.io/pv-protection"
                ],
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:phase": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:25:40+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:pv.kubernetes.io/provisioned-by": {}
                                }
                            },
                            "f:spec": {
                                "f:accessModes": {},
                                "f:capacity": {
                                    ".": {},
                                    "f:storage": {}
                                },
                                "f:claimRef": {
                                    ".": {},
                                    "f:apiVersion": {},
                                    "f:kind": {},
                                    "f:name": {},
                                    "f:namespace": {},
                                    "f:resourceVersion": {},
                                    "f:uid": {}
                                },
                                "f:hostPath": {
                                    ".": {},
                                    "f:path": {},
                                    "f:type": {}
                                },
                                "f:nodeAffinity": {
                                    ".": {},
                                    "f:required": {}
                                },
                                "f:persistentVolumeReclaimPolicy": {},
                                "f:storageClassName": {},
                                "f:volumeMode": {}
                            }
                        },
                        "manager": "local-path-provisioner",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:25:40+00:00"
                    }
                ],
                "name": "pvc-b5293e3a-62cd-48f5-9fa0-80f85fad88f1",
                "namespace": null,
                "owner_references": null,
                "resource_version": "2235",
                "self_link": null,
                "uid": "fa0e0067-381c-4315-8bf1-b3b7accce99a"
            },
            "spec": {
                "access_modes": [
                    "ReadWriteOnce"
                ],
                "aws_elastic_block_store": null,
                "azure_disk": null,
                "azure_file": null,
                "capacity": {
                    "storage": "10Gi"
                },
                "cephfs": null,
                "cinder": null,
                "claim_ref": {
                    "api_version": "v1",
                    "field_path": null,
                    "kind": "PersistentVolumeClaim",
                    "name": "stackgres-data-stackgres-2",
                    "namespace": "default",
                    "resource_version": "2206",
                    "uid": "b5293e3a-62cd-48f5-9fa0-80f85fad88f1"
                },
                "csi": null,
                "fc": null,
                "flex_volume": null,
                "flocker": null,
                "gce_persistent_disk": null,
                "glusterfs": null,
                "host_path": {
                    "path": "/var/local-path-provisioner/pvc-b5293e3a-62cd-48f5-9fa0-80f85fad88f1_default_stackgres-data-stackgres-2",
                    "type": "DirectoryOrCreate"
                },
                "iscsi": null,
                "local": null,
                "mount_options": null,
                "nfs": null,
                "node_affinity": {
                    "required": {
                        "node_selector_terms": [
                            {
                                "match_expressions": [
                                    {
                                        "key": "kubernetes.io/hostname",
                                        "operator": "In",
                                        "values": [
                                            "kind-worker"
                                        ]
                                    }
                                ],
                                "match_fields": null
                            }
                        ]
                    }
                },
                "persistent_volume_reclaim_policy": "Delete",
                "photon_persistent_disk": null,
                "portworx_volume": null,
                "quobyte": null,
                "rbd": null,
                "scale_io": null,
                "storage_class_name": "standard",
                "storageos": null,
                "volume_mode": "Filesystem",
                "vsphere_volume": null
            },
            "status": {
                "message": null,
                "phase": "Bound",
                "reason": null
            }
        }
    },
    "pod": {
        "stackgres-0": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/cluster-controller-version": "1.8.0",
                    "stackgres.io/envoy-version": "1.24.12",
                    "stackgres.io/operatorVersion": "1.8.0",
                    "stackgres.io/patroni-version": "3.2.0",
                    "stackgres.io/pgbouncer-version": "1.21.0",
                    "stackgres.io/postgresql-version": "12.17",
                    "stackgres.io/prometheus-postgres-exporter-version": "0.12.1",
                    "status": "{\"conn_url\":\"postgres://10.244.2.3:7433/postgres\",\"api_url\":\"http://10.244.2.3:8009/patroni\",\"state\":\"running\",\"role\":\"master\",\"version\":\"3.2.0\",\"xlog_location\":83886408,\"timeline\":1}"
                },
                "creation_timestamp": "2024-02-06T19:22:11+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": "stackgres-",
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "controller-revision-hash": "stackgres-56fbd68cdc",
                    "nofailover": "false",
                    "noloadbalance": "false",
                    "role": "master",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d",
                    "stackgres.io/disruptible": "true",
                    "statefulset.kubernetes.io/pod-name": "stackgres-0"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:stackgres.io/cluster-controller-version": {},
                                    "f:stackgres.io/envoy-version": {},
                                    "f:stackgres.io/operatorVersion": {},
                                    "f:stackgres.io/patroni-version": {},
                                    "f:stackgres.io/pgbouncer-version": {},
                                    "f:stackgres.io/postgresql-version": {},
                                    "f:stackgres.io/prometheus-postgres-exporter-version": {}
                                },
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:controller-revision-hash": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {},
                                    "f:stackgres.io/disruptible": {},
                                    "f:statefulset.kubernetes.io/pod-name": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"bf6aee0d-56cb-4c67-91fe-a8ed8b5c9c86\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:podAntiAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"cluster-controller\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"APP_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_POD_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PATRONI\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SHOW_STACK_TRACES\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER_SUSPEND\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"JAVA_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"MEMORY_REQUEST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:resourceFieldRef": {}
                                                }
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/auth\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/updated\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl-copy\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"envoy\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":7432,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":7433,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8001,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8008,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/envoy\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"patroni\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"BACKUP_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BACKUP_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BACKUP_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BASE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HUGEPAGES_1G_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HUGEPAGES_2M_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"INITDB_AUTH_HOST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LD_LIBRARY_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_CONFIG_FILE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_CONFIG_MD5SUM\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_CONFIG_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_KUBERNETES_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"PATRONI_KUBERNETES_POD_IP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"PATRONI_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"PATRONI_RESTAPI_CONNECT_ADDRESS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_SECRET_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_UPGRADE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"REPLICATE_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"REPLICATE_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"REPLICATE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"RESTORE_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"RESTORE_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"RESTORE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:envFrom": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":7432,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":7433,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8008,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:limits": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            },
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/dev/shm\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/.secret/backup\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/.secret/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/.secret/replicate\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/backup\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/replicate\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/extra/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/extra/lib\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/lib\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib64\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/local/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/share/postgresql/12.17\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/share/postgresql/12.17/extension\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/log/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"pgbouncer\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"PGBOUNCER_CONFIG_FILE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PGBOUNCER_CONFIG_UPDATED_FILE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/auth\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"postgres-util\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:stdin": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:tty": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"prometheus-postgres-exporter\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"DATA_SOURCE_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PGAPPNAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXPORTER_CONSTANT_LABELS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXPORTER_EXTEND_QUERY_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXPORTER_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RUN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":9187,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/opt/postgres-exporter/queries.yaml\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:hostname": {},
                                "f:initContainers": {
                                    ".": {},
                                    "k:{\"name\":\"cluster-reconciliation-cycle\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"APP_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_POD_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PATRONI\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SHOW_STACK_TRACES\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"COMMAND\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER_SUSPEND\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"MEMORY_REQUEST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:resourceFieldRef": {}
                                                }
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl-copy\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"pgbouncer-auth-file\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/pgbouncer-admin-password\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/pgbouncer-stats-password\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"relocate-binaries\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LD_LIBRARY_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_UPGRADE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"setup-arbitrary-user\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HOME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/local/etc\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"setup-scripts\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"BASE_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BASE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HOME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"POSTGRES_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/local/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {
                                    ".": {},
                                    "f:fsGroup": {},
                                    "f:runAsGroup": {},
                                    "f:runAsNonRoot": {},
                                    "f:runAsUser": {}
                                },
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:shareProcessNamespace": {},
                                "f:subdomain": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"backup-env\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"backup-secret\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"dshm\"}": {
                                        ".": {},
                                        "f:emptyDir": {
                                            ".": {},
                                            "f:medium": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"empty-base\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"envoy\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"local-bin\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"log\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"patroni-config\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"patroni-env\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"patroni-secret-env\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"pgbouncer\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"pgbouncer-dynamic-config\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"pgbouncer-secrets\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"queries\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"replicate-env\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"replicate-secret\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"socket\"}": {
                                        ".": {},
                                        "f:emptyDir": {
                                            ".": {},
                                            "f:medium": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"ssl\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"ssl-copy\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"stackgres-data\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:persistentVolumeClaim": {
                                            ".": {},
                                            "f:claimName": {}
                                        }
                                    },
                                    "k:{\"name\":\"templates\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"user\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    }
                                }
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:22:11+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:labels": {
                                    "f:nofailover": {},
                                    "f:noloadbalance": {}
                                }
                            }
                        },
                        "manager": "fabric8-kubernetes-client",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:23:50+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:initContainerStatuses": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.244.2.3\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        },
                        "manager": "kubelet",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:23:50+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:status": {}
                                },
                                "f:labels": {
                                    "f:role": {}
                                }
                            }
                        },
                        "manager": "Patroni",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:41:42+00:00"
                    }
                ],
                "name": "stackgres-0",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "apps/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "stackgres",
                        "uid": "bf6aee0d-56cb-4c67-91fe-a8ed8b5c9c86"
                    }
                ],
                "resource_version": "4226",
                "self_link": null,
                "uid": "2d2680aa-244a-4147-9b8e-d2097a443be0"
            },
            "spec": {
                "active_deadline_seconds": null,
                "affinity": {
                    "node_affinity": null,
                    "pod_affinity": null,
                    "pod_anti_affinity": {
                        "preferred_during_scheduling_ignored_during_execution": null,
                        "required_during_scheduling_ignored_during_execution": [
                            {
                                "label_selector": {
                                    "match_expressions": [
                                        {
                                            "key": "app",
                                            "operator": "In",
                                            "values": [
                                                "StackGresCluster"
                                            ]
                                        },
                                        {
                                            "key": "stackgres.io/cluster",
                                            "operator": "In",
                                            "values": [
                                                "true"
                                            ]
                                        }
                                    ],
                                    "match_labels": null
                                },
                                "namespace_selector": null,
                                "namespaces": null,
                                "topology_key": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "automount_service_account_token": null,
                "containers": [
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/usr/local/bin/start-patroni.sh"
                        ],
                        "env": [
                            {
                                "name": "LOCAL_BIN_PATH",
                                "value": "/usr/local/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_BASE_PATH",
                                "value": "/var/lib/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "PG_DATA_PATH",
                                "value": "/var/lib/postgresql/data",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BASE_PATH",
                                "value": "/var/lib/postgresql/extensions",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BINARIES_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BIN_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_SHARE_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB64_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB64_PATH",
                                "value": "/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_BINARIES_PATH",
                                "value": "/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_SHARE_PATH",
                                "value": "/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSION_PATH",
                                "value": "/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BASE_PATH",
                                "value": "/var/lib/postgresql/relocated",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB64_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BINARIES_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BIN_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_SHARE_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_UPGRADE_PATH",
                                "value": "/var/lib/postgresql/upgrade",
                                "value_from": null
                            },
                            {
                                "name": "PATH",
                                "value": "/usr/lib/postgresql/12.17/bin:/usr/lib/postgresql/12.17/extra/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                "value_from": null
                            },
                            {
                                "name": "LD_LIBRARY_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_NAME",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "PATRONI_KUBERNETES_NAMESPACE",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.namespace"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "PATRONI_KUBERNETES_POD_IP",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "status.podIP"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "PATRONI_RESTAPI_CONNECT_ADDRESS",
                                "value": "${PATRONI_KUBERNETES_POD_IP}:8009",
                                "value_from": null
                            },
                            {
                                "name": "INITDB_AUTH_HOST",
                                "value": "scram-sha-256",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_ENV",
                                "value": "patroni",
                                "value_from": null
                            },
                            {
                                "name": "BASE_SECRET_PATH",
                                "value": "/etc/env/.secret",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_ENV_PATH",
                                "value": "/etc/env/patroni",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_SECRET_ENV_PATH",
                                "value": "/etc/env/.secret/patroni",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_CONFIG_PATH",
                                "value": "/etc/patroni",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_CONFIG_FILE_PATH",
                                "value": "/etc/patroni/config.yml",
                                "value_from": null
                            },
                            {
                                "name": "BACKUP_ENV",
                                "value": "backup",
                                "value_from": null
                            },
                            {
                                "name": "BACKUP_ENV_PATH",
                                "value": "/etc/env/backup",
                                "value_from": null
                            },
                            {
                                "name": "BACKUP_SECRET_PATH",
                                "value": "/etc/env/.secret/backup",
                                "value_from": null
                            },
                            {
                                "name": "REPLICATE_ENV",
                                "value": "replicate",
                                "value_from": null
                            },
                            {
                                "name": "REPLICATE_ENV_PATH",
                                "value": "/etc/env/replicate",
                                "value_from": null
                            },
                            {
                                "name": "REPLICATE_SECRET_PATH",
                                "value": "/etc/env/.secret/replicate",
                                "value_from": null
                            },
                            {
                                "name": "RESTORE_ENV",
                                "value": "restore",
                                "value_from": null
                            },
                            {
                                "name": "RESTORE_ENV_PATH",
                                "value": "/etc/env/restore",
                                "value_from": null
                            },
                            {
                                "name": "RESTORE_SECRET_PATH",
                                "value": "/etc/env/.secret/restore",
                                "value_from": null
                            },
                            {
                                "name": "HUGEPAGES_2M_PATH",
                                "value": "/hugepages-2Mi",
                                "value_from": null
                            },
                            {
                                "name": "HUGEPAGES_1G_PATH",
                                "value": "/hugepages-1Gi",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_CONFIG_MD5SUM",
                                "value": "FE2D4E880481C9786F5195115F883839",
                                "value_from": null
                            }
                        ],
                        "env_from": [
                            {
                                "config_map_ref": {
                                    "name": "stackgres",
                                    "optional": null
                                },
                                "prefix": null,
                                "secret_ref": null
                            }
                        ],
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": {
                            "_exec": null,
                            "failure_threshold": 6,
                            "grpc": null,
                            "http_get": {
                                "host": null,
                                "http_headers": null,
                                "path": "/liveness",
                                "port": 8008,
                                "scheme": "HTTP"
                            },
                            "initial_delay_seconds": 15,
                            "period_seconds": 20,
                            "success_threshold": 1,
                            "tcp_socket": null,
                            "termination_grace_period_seconds": null,
                            "timeout_seconds": 1
                        },
                        "name": "patroni",
                        "ports": [
                            {
                                "container_port": 7432,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgport",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 7433,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgreplication",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8008,
                                "host_ip": null,
                                "host_port": null,
                                "name": "patroniport",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": {
                            "_exec": null,
                            "failure_threshold": 3,
                            "grpc": null,
                            "http_get": {
                                "host": null,
                                "http_headers": null,
                                "path": "/readiness",
                                "port": 8008,
                                "scheme": "HTTP"
                            },
                            "initial_delay_seconds": null,
                            "period_seconds": 2,
                            "success_threshold": 1,
                            "tcp_socket": null,
                            "termination_grace_period_seconds": null,
                            "timeout_seconds": 1
                        },
                        "resources": {
                            "claims": null,
                            "limits": {
                                "cpu": "2",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "750m",
                                "memory": "3136Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/dev/shm",
                                "mount_propagation": null,
                                "name": "dshm",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/log/postgresql",
                                "mount_propagation": null,
                                "name": "log",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/local/bin",
                                "mount_propagation": null,
                                "name": "local-bin",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/patroni",
                                "mount_propagation": null,
                                "name": "patroni-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/.secret/patroni",
                                "mount_propagation": null,
                                "name": "patroni-secret-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/patroni",
                                "mount_propagation": null,
                                "name": "patroni-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/backup",
                                "mount_propagation": null,
                                "name": "backup-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/.secret/backup",
                                "mount_propagation": null,
                                "name": "backup-secret",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/replicate",
                                "mount_propagation": null,
                                "name": "replicate-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/.secret/replicate",
                                "mount_propagation": null,
                                "name": "replicate-secret",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib64",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/lib64",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/bin",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/lib",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/share/postgresql/12.17",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/share/postgresql/12.17",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/share/postgresql/12.17/extension",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "extensions/12/6/usr/share/postgresql/12/extension",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/extra/bin",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "extensions/12/6/usr/lib/postgresql/12/bin",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/extra/lib",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "extensions/12/6/usr/lib64",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl-copy",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": [
                            "-c",
                            "/etc/envoy/envoy.json"
                        ],
                        "command": [
                            "/usr/local/bin/envoy"
                        ],
                        "env": null,
                        "env_from": null,
                        "image": "quay.io/ongres/envoy:v1.24.12-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "envoy",
                        "ports": [
                            {
                                "container_port": 7432,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgport",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 7433,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgreplication",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8001,
                                "host_ip": null,
                                "host_port": null,
                                "name": "envoy",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8008,
                                "host_ip": null,
                                "host_port": null,
                                "name": "patroniport",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "500m",
                                "memory": "64Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/envoy",
                                "mount_propagation": null,
                                "name": "envoy",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/start-pgbouncer.sh"
                        ],
                        "env": [
                            {
                                "name": "PGBOUNCER_CONFIG_FILE_PATH",
                                "value": "/etc/pgbouncer/pgbouncer.ini",
                                "value_from": null
                            },
                            {
                                "name": "PGBOUNCER_CONFIG_UPDATED_FILE_PATH",
                                "value": "/etc/pgbouncer/updated",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/pgbouncer:v1.21.0-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "pgbouncer",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "250m",
                                "memory": "64Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer",
                                "mount_propagation": null,
                                "name": "pgbouncer",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/auth",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": true,
                                "sub_path": "auth",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/start-postgres-exporter.sh"
                        ],
                        "env": [
                            {
                                "name": "PGAPPNAME",
                                "value": "prometheus-postgres-exporter",
                                "value_from": null
                            },
                            {
                                "name": "DATA_SOURCE_NAME",
                                "value": "postgresql://postgres@:5432/postgres?host=/var/run/postgresql&sslmode=disable",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXPORTER_EXTEND_QUERY_PATH",
                                "value": "/var/opt/postgres-exporter/queries.yaml",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXPORTER_CONSTANT_LABELS",
                                "value": "cluster_name=stackgres, namespace=default",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXPORTER_LOG_LEVEL",
                                "value": "info",
                                "value_from": null
                            },
                            {
                                "name": "PG_PORT",
                                "value": "5432",
                                "value_from": null
                            },
                            {
                                "name": "PG_RUN_PATH",
                                "value": "/var/run/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "TEMPLATES_PATH",
                                "value": "/templates",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                "value": "/usr/local/bin/shell-utils",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                "value": "/usr/local/bin/setup-scripts.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                "value": "/usr/local/bin/relocate-binaries.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/start-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                "value": "/usr/local/bin/start-pgbouncer.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_PATRONICTL_PATH",
                                "value": "/usr/local/bin/patronictl",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                "value": "/usr/local/bin/post-init.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                "value": "/usr/local/bin/create-backup.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                "value": "/usr/local/bin/exec-with-env",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-running.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                "value": "/usr/local/bin/run-dbops.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                "value": "/usr/local/bin/start-fluentbit.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                "value": "/usr/local/bin/start-postgres-exporter.sh",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/prometheus-postgres-exporter:v0.12.1-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "prometheus-postgres-exporter",
                        "ports": [
                            {
                                "container_port": 9187,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgexporter",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "125m",
                                "memory": "256Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/opt/postgres-exporter/queries.yaml",
                                "mount_propagation": null,
                                "name": "queries",
                                "read_only": true,
                                "sub_path": "queries.yaml",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": [
                            "-c",
                            "while true; do sleep 10; done"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": null,
                        "env_from": null,
                        "image": "quay.io/ongres/postgres-util:v12.17-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "postgres-util",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "125m",
                                "memory": "64Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": true,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": true,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "empty-base",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": null,
                        "env": [
                            {
                                "name": "CLUSTER_NAME",
                                "value": "stackgres",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_NAMESPACE",
                                "value": "default",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_POD_NAME",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS",
                                "value": "https://extensions.stackgres.io/postgres/repository",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PATRONI",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_LOG_LEVEL",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SHOW_STACK_TRACES",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "APP_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "JAVA_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER_SUSPEND",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "MEMORY_REQUEST",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": null,
                                    "resource_field_ref": {
                                        "container_name": "cluster-controller",
                                        "divisor": "1",
                                        "resource": "requests.memory"
                                    },
                                    "secret_key_ref": null
                                }
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "cluster-controller",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "250m",
                                "memory": "512Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer",
                                "mount_propagation": null,
                                "name": "pgbouncer",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/updated",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/auth",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": null,
                                "sub_path": "auth",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/patroni",
                                "mount_propagation": null,
                                "name": "patroni-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl-copy",
                                "mount_propagation": null,
                                "name": "ssl-copy",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    }
                ],
                "dns_config": null,
                "dns_policy": "ClusterFirst",
                "enable_service_links": true,
                "ephemeral_containers": null,
                "host_aliases": null,
                "host_ipc": null,
                "host_network": null,
                "host_pid": null,
                "host_users": null,
                "hostname": "stackgres-0",
                "image_pull_secrets": null,
                "init_containers": [
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/setup-arbitrary-user.sh"
                        ],
                        "env": [
                            {
                                "name": "TEMPLATES_PATH",
                                "value": "/templates",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                "value": "/usr/local/bin/shell-utils",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                "value": "/usr/local/bin/setup-scripts.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                "value": "/usr/local/bin/relocate-binaries.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/start-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                "value": "/usr/local/bin/start-pgbouncer.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_PATRONICTL_PATH",
                                "value": "/usr/local/bin/patronictl",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                "value": "/usr/local/bin/post-init.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                "value": "/usr/local/bin/create-backup.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                "value": "/usr/local/bin/exec-with-env",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-running.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                "value": "/usr/local/bin/run-dbops.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                "value": "/usr/local/bin/start-fluentbit.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                "value": "/usr/local/bin/start-postgres-exporter.sh",
                                "value_from": null
                            },
                            {
                                "name": "PG_BASE_PATH",
                                "value": "/var/lib/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "PG_DATA_PATH",
                                "value": "/var/lib/postgresql/data",
                                "value_from": null
                            },
                            {
                                "name": "HOME",
                                "value": "/tmp",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "setup-arbitrary-user",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/local/etc",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": null,
                                "sub_path": "etc",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/setup-scripts.sh"
                        ],
                        "env": [
                            {
                                "name": "LOCAL_BIN_PATH",
                                "value": "/usr/local/bin",
                                "value_from": null
                            },
                            {
                                "name": "TEMPLATES_PATH",
                                "value": "/templates",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                "value": "/usr/local/bin/shell-utils",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                "value": "/usr/local/bin/setup-scripts.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                "value": "/usr/local/bin/relocate-binaries.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/start-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                "value": "/usr/local/bin/start-pgbouncer.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_PATRONICTL_PATH",
                                "value": "/usr/local/bin/patronictl",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                "value": "/usr/local/bin/post-init.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                "value": "/usr/local/bin/create-backup.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                "value": "/usr/local/bin/exec-with-env",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-running.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                "value": "/usr/local/bin/run-dbops.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                "value": "/usr/local/bin/start-fluentbit.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                "value": "/usr/local/bin/start-postgres-exporter.sh",
                                "value_from": null
                            },
                            {
                                "name": "BASE_ENV_PATH",
                                "value": "/etc/env",
                                "value_from": null
                            },
                            {
                                "name": "POSTGRES_PORT",
                                "value": "5432",
                                "value_from": null
                            },
                            {
                                "name": "BASE_SECRET_PATH",
                                "value": "/etc/env/.secret",
                                "value_from": null
                            },
                            {
                                "name": "HOME",
                                "value": "/tmp",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "setup-scripts",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/local/bin",
                                "mount_propagation": null,
                                "name": "local-bin",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/relocate-binaries.sh"
                        ],
                        "env": [
                            {
                                "name": "PG_BASE_PATH",
                                "value": "/var/lib/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "PG_DATA_PATH",
                                "value": "/var/lib/postgresql/data",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BASE_PATH",
                                "value": "/var/lib/postgresql/extensions",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BINARIES_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BIN_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_SHARE_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB64_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB64_PATH",
                                "value": "/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_BINARIES_PATH",
                                "value": "/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_SHARE_PATH",
                                "value": "/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSION_PATH",
                                "value": "/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BASE_PATH",
                                "value": "/var/lib/postgresql/relocated",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB64_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BINARIES_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BIN_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_SHARE_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_UPGRADE_PATH",
                                "value": "/var/lib/postgresql/upgrade",
                                "value_from": null
                            },
                            {
                                "name": "PATH",
                                "value": "/usr/lib/postgresql/12.17/bin:/usr/lib/postgresql/12.17/extra/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                "value_from": null
                            },
                            {
                                "name": "LD_LIBRARY_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "relocate-binaries",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-exc",
                            "mkdir -p '/etc/pgbouncer/auth'\ntest -f '/etc/pgbouncer/pgbouncer-admin-password'\ntest -f '/etc/pgbouncer/pgbouncer-stats-password'\nPGBOUNCER_ADMIN_MD5=\"$({\n  cat '/etc/pgbouncer/pgbouncer-admin-password'\n  printf '%s' 'pgbouncer_admin'\n  } | md5sum | cut -d ' ' -f 1)\"\nPGBOUNCER_STATS_MD5=\"$({\n  cat '/etc/pgbouncer/pgbouncer-stats-password'\n  printf '%s' 'pgbouncer_stats'\n  } | md5sum | cut -d ' ' -f 1)\"\n(\nprintf '%s\\n' \"\\\"pgbouncer_admin\\\" \\\"md5$PGBOUNCER_ADMIN_MD5\\\"\"\nprintf '%s\\n' \"\\\"pgbouncer_stats\\\" \\\"md5$PGBOUNCER_STATS_MD5\\\"\"\n) > '/etc/pgbouncer/auth/users.txt'"
                        ],
                        "env": null,
                        "env_from": null,
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "pgbouncer-auth-file",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/pgbouncer",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/pgbouncer-admin-password",
                                "mount_propagation": null,
                                "name": "pgbouncer-secrets",
                                "read_only": true,
                                "sub_path": "pgbouncer-admin-password",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/pgbouncer-stats-password",
                                "mount_propagation": null,
                                "name": "pgbouncer-secrets",
                                "read_only": true,
                                "sub_path": "pgbouncer-stats-password",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": null,
                        "env": [
                            {
                                "name": "COMMAND",
                                "value": "run-reconciliation-cycle",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_NAME",
                                "value": "stackgres",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_NAMESPACE",
                                "value": "default",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_POD_NAME",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS",
                                "value": "https://extensions.stackgres.io/postgres/repository",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PATRONI",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_LOG_LEVEL",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SHOW_STACK_TRACES",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "APP_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER_SUSPEND",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "MEMORY_REQUEST",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": null,
                                    "resource_field_ref": {
                                        "container_name": "cluster-reconciliation-cycle",
                                        "divisor": "1",
                                        "resource": "requests.memory"
                                    },
                                    "secret_key_ref": null
                                }
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "cluster-reconciliation-cycle",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl-copy",
                                "mount_propagation": null,
                                "name": "ssl-copy",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gvbzf",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    }
                ],
                "node_name": "kind-worker2",
                "node_selector": null,
                "os": null,
                "overhead": null,
                "preemption_policy": "PreemptLowerPriority",
                "priority": 0,
                "priority_class_name": null,
                "readiness_gates": null,
                "resource_claims": null,
                "restart_policy": "Always",
                "runtime_class_name": null,
                "scheduler_name": "default-scheduler",
                "scheduling_gates": null,
                "security_context": {
                    "fs_group": 999,
                    "fs_group_change_policy": null,
                    "run_as_group": 999,
                    "run_as_non_root": true,
                    "run_as_user": 999,
                    "se_linux_options": null,
                    "seccomp_profile": null,
                    "supplemental_groups": null,
                    "sysctls": null,
                    "windows_options": null
                },
                "service_account": "stackgres-patroni",
                "service_account_name": "stackgres-patroni",
                "set_hostname_as_fqdn": null,
                "share_process_namespace": true,
                "subdomain": "stackgres",
                "termination_grace_period_seconds": 60,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "toleration_seconds": 300,
                        "value": null
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "toleration_seconds": 300,
                        "value": null
                    }
                ],
                "topology_spread_constraints": null,
                "volumes": [
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "stackgres-data",
                        "nfs": null,
                        "persistent_volume_claim": {
                            "claim_name": "stackgres-data-stackgres-0",
                            "read_only": null
                        },
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": "Memory",
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "socket",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": "Memory",
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "dshm",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "log",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "local-bin",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 292,
                            "items": null,
                            "name": "stackgres",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "patroni-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "patroni-secret-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 256,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "patroni-config",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 292,
                            "items": null,
                            "name": "stackgres-backup",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "backup-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "backup-secret",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 292,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres-backup"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 420,
                            "items": null,
                            "name": "stackgres-replicate",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "replicate-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "replicate-secret",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 420,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres-replicate"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "user",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "ssl-copy",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 288,
                            "items": null,
                            "name": "stackgres-envoy-config",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "envoy",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "ssl",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 256,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres-ssl"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 292,
                            "items": null,
                            "name": "stackgres-templates",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "templates",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 288,
                            "items": null,
                            "name": "stackgres-connection-pooling-config",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "pgbouncer",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "pgbouncer-dynamic-config",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 420,
                            "items": null,
                            "name": "stackgres-prometheus-postgres-exporter-config",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "queries",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "empty-base",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "pgbouncer-secrets",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 420,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "kube-api-access-gvbzf",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": {
                            "default_mode": 420,
                            "sources": [
                                {
                                    "config_map": null,
                                    "downward_api": null,
                                    "secret": null,
                                    "service_account_token": {
                                        "audience": null,
                                        "expiration_seconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "config_map": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "mode": null,
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt",
                                        "optional": null
                                    },
                                    "downward_api": null,
                                    "secret": null,
                                    "service_account_token": null
                                },
                                {
                                    "config_map": null,
                                    "downward_api": {
                                        "items": [
                                            {
                                                "field_ref": {
                                                    "api_version": "v1",
                                                    "field_path": "metadata.namespace"
                                                },
                                                "mode": null,
                                                "path": "namespace",
                                                "resource_field_ref": null
                                            }
                                        ]
                                    },
                                    "secret": null,
                                    "service_account_token": null
                                }
                            ]
                        },
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:23:14+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:23:50+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:23:50+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:22:18+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "container_statuses": [
                    {
                        "container_id": "containerd://9e97543651294f4e9904df25926940d64cf3ed1202d2ec49dfac58a36db1d0ac",
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_id": "quay.io/stackgres/cluster-controller@sha256:6ed5e0d9af578b45f5ebb48104b2451d44ccf71f8ad7716b2babb78fd38425e7",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "cluster-controller",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:23:49+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://ffc5047b6b0154949245b44e2d8d77c57b80c763faa27761ab7fcdad90389a38",
                        "image": "quay.io/ongres/envoy:v1.24.12-build-6.29",
                        "image_id": "quay.io/ongres/envoy@sha256:feec86620854bd5b248ad07d0f212bab1adb2668262a47a540df514d86d58241",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "envoy",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:23:20+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://8af7d907eb85bceec22918e1607e242d5c993dd5ff01abe3f39dca3d57410841",
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_id": "quay.io/ongres/patroni@sha256:87a4d35f9febd602ecae0eb6e4a2e2273432431cde33eebdb48131172c8b396f",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "patroni",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:23:14+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://e969b5c722ab77bf2527a4bf537ba4c3f4be24d192c40c4efdcd7b7c85194ac2",
                        "image": "quay.io/ongres/pgbouncer:v1.21.0-build-6.29",
                        "image_id": "quay.io/ongres/pgbouncer@sha256:daf85bea99a4da866ba685adcbd9afbd75fd873255b8c0a243991d7d5012404d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "pgbouncer",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:23:25+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://c02d1a7c065b9f4feb15002738b217d04316bf051adbdfe60414df41d538c89f",
                        "image": "quay.io/ongres/postgres-util:v12.17-build-6.29",
                        "image_id": "quay.io/ongres/postgres-util@sha256:ec83470c4294946fecf6a2d5e6d28e7a997b688f53acdbcc96b7d62f925a7e65",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "postgres-util",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:23:49+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://77d00b0a256c04c4e582eb12840ee0daa4cece742b683e71b5ce46d462dd5236",
                        "image": "quay.io/ongres/prometheus-postgres-exporter:v0.12.1-build-6.29",
                        "image_id": "quay.io/ongres/prometheus-postgres-exporter@sha256:89af0d4afe05a2a40dbb43c41d7163caca44dca5a2ae7c0101f488c816dd1cd0",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "prometheus-postgres-exporter",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:23:28+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    }
                ],
                "ephemeral_container_statuses": null,
                "host_ip": "172.18.0.5",
                "init_container_statuses": [
                    {
                        "container_id": "containerd://2881cf39007cb774b413ea88be8ba68e366cf192fc5995c269cfa1e1a1db8920",
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_id": "quay.io/ongres/kubectl@sha256:4b9d2ea2d42d4358cb065391f32dfcc8e727b49d6dc321d7602ce47e1d792b8d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "setup-arbitrary-user",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://2881cf39007cb774b413ea88be8ba68e366cf192fc5995c269cfa1e1a1db8920",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:22:29+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:22:29+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://141ddffe98470244c48487f2fa6f188f9134139cb440545170dbb365046419b8",
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_id": "quay.io/ongres/kubectl@sha256:4b9d2ea2d42d4358cb065391f32dfcc8e727b49d6dc321d7602ce47e1d792b8d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "setup-scripts",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://141ddffe98470244c48487f2fa6f188f9134139cb440545170dbb365046419b8",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:22:30+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:22:30+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://70fd5a728343fd499b040628c7b41cd2d7f29daac852a65a04a87610d4312106",
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_id": "quay.io/ongres/patroni@sha256:87a4d35f9febd602ecae0eb6e4a2e2273432431cde33eebdb48131172c8b396f",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "relocate-binaries",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://70fd5a728343fd499b040628c7b41cd2d7f29daac852a65a04a87610d4312106",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:22:58+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:22:56+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://d5212e04d49a4c86b58bec829ac1aca07b8d561b7156eedd4d9315539fd7db6e",
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_id": "quay.io/ongres/kubectl@sha256:4b9d2ea2d42d4358cb065391f32dfcc8e727b49d6dc321d7602ce47e1d792b8d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "pgbouncer-auth-file",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://d5212e04d49a4c86b58bec829ac1aca07b8d561b7156eedd4d9315539fd7db6e",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:23:00+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:23:00+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://00134f0c64fb9b65cf585f554712c403fed55bbbe5a83b8e05c7d19623eab178",
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_id": "quay.io/stackgres/cluster-controller@sha256:6ed5e0d9af578b45f5ebb48104b2451d44ccf71f8ad7716b2babb78fd38425e7",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "cluster-reconciliation-cycle",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://00134f0c64fb9b65cf585f554712c403fed55bbbe5a83b8e05c7d19623eab178",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:23:13+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:23:12+00:00"
                            },
                            "waiting": null
                        }
                    }
                ],
                "message": null,
                "nominated_node_name": null,
                "phase": "Running",
                "pod_ip": "10.244.2.3",
                "pod_i_ps": [
                    {
                        "ip": "10.244.2.3"
                    }
                ],
                "qos_class": "Burstable",
                "reason": null,
                "start_time": "2024-02-06T19:22:18+00:00"
            }
        },
        "stackgres-1": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/cluster-controller-version": "1.8.0",
                    "stackgres.io/envoy-version": "1.24.12",
                    "stackgres.io/operatorVersion": "1.8.0",
                    "stackgres.io/patroni-version": "3.2.0",
                    "stackgres.io/pgbouncer-version": "1.21.0",
                    "stackgres.io/postgresql-version": "12.17",
                    "stackgres.io/prometheus-postgres-exporter-version": "0.12.1",
                    "status": "{\"conn_url\":\"postgres://10.244.1.3:7433/postgres\",\"api_url\":\"http://10.244.1.3:8009/patroni\",\"state\":\"running\",\"role\":\"replica\",\"version\":\"3.2.0\",\"xlog_location\":83886408,\"replication_state\":\"streaming\",\"timeline\":1}"
                },
                "creation_timestamp": "2024-02-06T19:23:50+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": "stackgres-",
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "controller-revision-hash": "stackgres-56fbd68cdc",
                    "nofailover": "false",
                    "noloadbalance": "false",
                    "role": "replica",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d",
                    "stackgres.io/disruptible": "true",
                    "statefulset.kubernetes.io/pod-name": "stackgres-1"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:stackgres.io/cluster-controller-version": {},
                                    "f:stackgres.io/envoy-version": {},
                                    "f:stackgres.io/operatorVersion": {},
                                    "f:stackgres.io/patroni-version": {},
                                    "f:stackgres.io/pgbouncer-version": {},
                                    "f:stackgres.io/postgresql-version": {},
                                    "f:stackgres.io/prometheus-postgres-exporter-version": {}
                                },
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:controller-revision-hash": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {},
                                    "f:stackgres.io/disruptible": {},
                                    "f:statefulset.kubernetes.io/pod-name": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"bf6aee0d-56cb-4c67-91fe-a8ed8b5c9c86\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:podAntiAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"cluster-controller\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"APP_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_POD_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PATRONI\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SHOW_STACK_TRACES\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER_SUSPEND\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"JAVA_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"MEMORY_REQUEST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:resourceFieldRef": {}
                                                }
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/auth\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/updated\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl-copy\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"envoy\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":7432,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":7433,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8001,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8008,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/envoy\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"patroni\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"BACKUP_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BACKUP_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BACKUP_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BASE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HUGEPAGES_1G_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HUGEPAGES_2M_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"INITDB_AUTH_HOST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LD_LIBRARY_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_CONFIG_FILE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_CONFIG_MD5SUM\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_CONFIG_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_KUBERNETES_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"PATRONI_KUBERNETES_POD_IP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"PATRONI_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"PATRONI_RESTAPI_CONNECT_ADDRESS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_SECRET_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_UPGRADE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"REPLICATE_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"REPLICATE_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"REPLICATE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"RESTORE_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"RESTORE_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"RESTORE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:envFrom": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":7432,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":7433,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8008,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:limits": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            },
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/dev/shm\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/.secret/backup\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/.secret/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/.secret/replicate\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/backup\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/replicate\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/extra/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/extra/lib\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/lib\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib64\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/local/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/share/postgresql/12.17\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/share/postgresql/12.17/extension\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/log/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"pgbouncer\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"PGBOUNCER_CONFIG_FILE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PGBOUNCER_CONFIG_UPDATED_FILE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/auth\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"postgres-util\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:stdin": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:tty": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"prometheus-postgres-exporter\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"DATA_SOURCE_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PGAPPNAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXPORTER_CONSTANT_LABELS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXPORTER_EXTEND_QUERY_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXPORTER_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RUN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":9187,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/opt/postgres-exporter/queries.yaml\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:hostname": {},
                                "f:initContainers": {
                                    ".": {},
                                    "k:{\"name\":\"cluster-reconciliation-cycle\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"APP_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_POD_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PATRONI\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SHOW_STACK_TRACES\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"COMMAND\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER_SUSPEND\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"MEMORY_REQUEST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:resourceFieldRef": {}
                                                }
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl-copy\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"pgbouncer-auth-file\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/pgbouncer-admin-password\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/pgbouncer-stats-password\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"relocate-binaries\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LD_LIBRARY_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_UPGRADE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"setup-arbitrary-user\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HOME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/local/etc\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"setup-scripts\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"BASE_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BASE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HOME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"POSTGRES_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/local/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {
                                    ".": {},
                                    "f:fsGroup": {},
                                    "f:runAsGroup": {},
                                    "f:runAsNonRoot": {},
                                    "f:runAsUser": {}
                                },
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:shareProcessNamespace": {},
                                "f:subdomain": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"backup-env\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"backup-secret\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"dshm\"}": {
                                        ".": {},
                                        "f:emptyDir": {
                                            ".": {},
                                            "f:medium": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"empty-base\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"envoy\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"local-bin\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"log\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"patroni-config\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"patroni-env\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"patroni-secret-env\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"pgbouncer\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"pgbouncer-dynamic-config\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"pgbouncer-secrets\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"queries\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"replicate-env\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"replicate-secret\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"socket\"}": {
                                        ".": {},
                                        "f:emptyDir": {
                                            ".": {},
                                            "f:medium": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"ssl\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"ssl-copy\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"stackgres-data\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:persistentVolumeClaim": {
                                            ".": {},
                                            "f:claimName": {}
                                        }
                                    },
                                    "k:{\"name\":\"templates\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"user\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    }
                                }
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:23:50+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:labels": {
                                    "f:nofailover": {},
                                    "f:noloadbalance": {}
                                }
                            }
                        },
                        "manager": "fabric8-kubernetes-client",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:25:33+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:initContainerStatuses": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.244.1.3\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        },
                        "manager": "kubelet",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:25:34+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:status": {}
                                },
                                "f:labels": {
                                    "f:role": {}
                                }
                            }
                        },
                        "manager": "Patroni",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:41:42+00:00"
                    }
                ],
                "name": "stackgres-1",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "apps/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "stackgres",
                        "uid": "bf6aee0d-56cb-4c67-91fe-a8ed8b5c9c86"
                    }
                ],
                "resource_version": "4227",
                "self_link": null,
                "uid": "22cb0617-4399-4a4c-8dde-c8aacb619cf0"
            },
            "spec": {
                "active_deadline_seconds": null,
                "affinity": {
                    "node_affinity": null,
                    "pod_affinity": null,
                    "pod_anti_affinity": {
                        "preferred_during_scheduling_ignored_during_execution": null,
                        "required_during_scheduling_ignored_during_execution": [
                            {
                                "label_selector": {
                                    "match_expressions": [
                                        {
                                            "key": "app",
                                            "operator": "In",
                                            "values": [
                                                "StackGresCluster"
                                            ]
                                        },
                                        {
                                            "key": "stackgres.io/cluster",
                                            "operator": "In",
                                            "values": [
                                                "true"
                                            ]
                                        }
                                    ],
                                    "match_labels": null
                                },
                                "namespace_selector": null,
                                "namespaces": null,
                                "topology_key": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "automount_service_account_token": null,
                "containers": [
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/usr/local/bin/start-patroni.sh"
                        ],
                        "env": [
                            {
                                "name": "LOCAL_BIN_PATH",
                                "value": "/usr/local/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_BASE_PATH",
                                "value": "/var/lib/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "PG_DATA_PATH",
                                "value": "/var/lib/postgresql/data",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BASE_PATH",
                                "value": "/var/lib/postgresql/extensions",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BINARIES_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BIN_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_SHARE_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB64_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB64_PATH",
                                "value": "/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_BINARIES_PATH",
                                "value": "/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_SHARE_PATH",
                                "value": "/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSION_PATH",
                                "value": "/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BASE_PATH",
                                "value": "/var/lib/postgresql/relocated",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB64_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BINARIES_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BIN_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_SHARE_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_UPGRADE_PATH",
                                "value": "/var/lib/postgresql/upgrade",
                                "value_from": null
                            },
                            {
                                "name": "PATH",
                                "value": "/usr/lib/postgresql/12.17/bin:/usr/lib/postgresql/12.17/extra/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                "value_from": null
                            },
                            {
                                "name": "LD_LIBRARY_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_NAME",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "PATRONI_KUBERNETES_NAMESPACE",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.namespace"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "PATRONI_KUBERNETES_POD_IP",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "status.podIP"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "PATRONI_RESTAPI_CONNECT_ADDRESS",
                                "value": "${PATRONI_KUBERNETES_POD_IP}:8009",
                                "value_from": null
                            },
                            {
                                "name": "INITDB_AUTH_HOST",
                                "value": "scram-sha-256",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_ENV",
                                "value": "patroni",
                                "value_from": null
                            },
                            {
                                "name": "BASE_SECRET_PATH",
                                "value": "/etc/env/.secret",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_ENV_PATH",
                                "value": "/etc/env/patroni",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_SECRET_ENV_PATH",
                                "value": "/etc/env/.secret/patroni",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_CONFIG_PATH",
                                "value": "/etc/patroni",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_CONFIG_FILE_PATH",
                                "value": "/etc/patroni/config.yml",
                                "value_from": null
                            },
                            {
                                "name": "BACKUP_ENV",
                                "value": "backup",
                                "value_from": null
                            },
                            {
                                "name": "BACKUP_ENV_PATH",
                                "value": "/etc/env/backup",
                                "value_from": null
                            },
                            {
                                "name": "BACKUP_SECRET_PATH",
                                "value": "/etc/env/.secret/backup",
                                "value_from": null
                            },
                            {
                                "name": "REPLICATE_ENV",
                                "value": "replicate",
                                "value_from": null
                            },
                            {
                                "name": "REPLICATE_ENV_PATH",
                                "value": "/etc/env/replicate",
                                "value_from": null
                            },
                            {
                                "name": "REPLICATE_SECRET_PATH",
                                "value": "/etc/env/.secret/replicate",
                                "value_from": null
                            },
                            {
                                "name": "RESTORE_ENV",
                                "value": "restore",
                                "value_from": null
                            },
                            {
                                "name": "RESTORE_ENV_PATH",
                                "value": "/etc/env/restore",
                                "value_from": null
                            },
                            {
                                "name": "RESTORE_SECRET_PATH",
                                "value": "/etc/env/.secret/restore",
                                "value_from": null
                            },
                            {
                                "name": "HUGEPAGES_2M_PATH",
                                "value": "/hugepages-2Mi",
                                "value_from": null
                            },
                            {
                                "name": "HUGEPAGES_1G_PATH",
                                "value": "/hugepages-1Gi",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_CONFIG_MD5SUM",
                                "value": "FE2D4E880481C9786F5195115F883839",
                                "value_from": null
                            }
                        ],
                        "env_from": [
                            {
                                "config_map_ref": {
                                    "name": "stackgres",
                                    "optional": null
                                },
                                "prefix": null,
                                "secret_ref": null
                            }
                        ],
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": {
                            "_exec": null,
                            "failure_threshold": 6,
                            "grpc": null,
                            "http_get": {
                                "host": null,
                                "http_headers": null,
                                "path": "/liveness",
                                "port": 8008,
                                "scheme": "HTTP"
                            },
                            "initial_delay_seconds": 15,
                            "period_seconds": 20,
                            "success_threshold": 1,
                            "tcp_socket": null,
                            "termination_grace_period_seconds": null,
                            "timeout_seconds": 1
                        },
                        "name": "patroni",
                        "ports": [
                            {
                                "container_port": 7432,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgport",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 7433,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgreplication",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8008,
                                "host_ip": null,
                                "host_port": null,
                                "name": "patroniport",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": {
                            "_exec": null,
                            "failure_threshold": 3,
                            "grpc": null,
                            "http_get": {
                                "host": null,
                                "http_headers": null,
                                "path": "/readiness",
                                "port": 8008,
                                "scheme": "HTTP"
                            },
                            "initial_delay_seconds": null,
                            "period_seconds": 2,
                            "success_threshold": 1,
                            "tcp_socket": null,
                            "termination_grace_period_seconds": null,
                            "timeout_seconds": 1
                        },
                        "resources": {
                            "claims": null,
                            "limits": {
                                "cpu": "2",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "750m",
                                "memory": "3136Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/dev/shm",
                                "mount_propagation": null,
                                "name": "dshm",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/log/postgresql",
                                "mount_propagation": null,
                                "name": "log",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/local/bin",
                                "mount_propagation": null,
                                "name": "local-bin",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/patroni",
                                "mount_propagation": null,
                                "name": "patroni-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/.secret/patroni",
                                "mount_propagation": null,
                                "name": "patroni-secret-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/patroni",
                                "mount_propagation": null,
                                "name": "patroni-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/backup",
                                "mount_propagation": null,
                                "name": "backup-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/.secret/backup",
                                "mount_propagation": null,
                                "name": "backup-secret",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/replicate",
                                "mount_propagation": null,
                                "name": "replicate-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/.secret/replicate",
                                "mount_propagation": null,
                                "name": "replicate-secret",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib64",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/lib64",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/bin",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/lib",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/share/postgresql/12.17",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/share/postgresql/12.17",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/share/postgresql/12.17/extension",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "extensions/12/6/usr/share/postgresql/12/extension",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/extra/bin",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "extensions/12/6/usr/lib/postgresql/12/bin",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/extra/lib",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "extensions/12/6/usr/lib64",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl-copy",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": [
                            "-c",
                            "/etc/envoy/envoy.json"
                        ],
                        "command": [
                            "/usr/local/bin/envoy"
                        ],
                        "env": null,
                        "env_from": null,
                        "image": "quay.io/ongres/envoy:v1.24.12-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "envoy",
                        "ports": [
                            {
                                "container_port": 7432,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgport",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 7433,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgreplication",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8001,
                                "host_ip": null,
                                "host_port": null,
                                "name": "envoy",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8008,
                                "host_ip": null,
                                "host_port": null,
                                "name": "patroniport",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "500m",
                                "memory": "64Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/envoy",
                                "mount_propagation": null,
                                "name": "envoy",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/start-pgbouncer.sh"
                        ],
                        "env": [
                            {
                                "name": "PGBOUNCER_CONFIG_FILE_PATH",
                                "value": "/etc/pgbouncer/pgbouncer.ini",
                                "value_from": null
                            },
                            {
                                "name": "PGBOUNCER_CONFIG_UPDATED_FILE_PATH",
                                "value": "/etc/pgbouncer/updated",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/pgbouncer:v1.21.0-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "pgbouncer",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "250m",
                                "memory": "64Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer",
                                "mount_propagation": null,
                                "name": "pgbouncer",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/auth",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": true,
                                "sub_path": "auth",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/start-postgres-exporter.sh"
                        ],
                        "env": [
                            {
                                "name": "PGAPPNAME",
                                "value": "prometheus-postgres-exporter",
                                "value_from": null
                            },
                            {
                                "name": "DATA_SOURCE_NAME",
                                "value": "postgresql://postgres@:5432/postgres?host=/var/run/postgresql&sslmode=disable",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXPORTER_EXTEND_QUERY_PATH",
                                "value": "/var/opt/postgres-exporter/queries.yaml",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXPORTER_CONSTANT_LABELS",
                                "value": "cluster_name=stackgres, namespace=default",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXPORTER_LOG_LEVEL",
                                "value": "info",
                                "value_from": null
                            },
                            {
                                "name": "PG_PORT",
                                "value": "5432",
                                "value_from": null
                            },
                            {
                                "name": "PG_RUN_PATH",
                                "value": "/var/run/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "TEMPLATES_PATH",
                                "value": "/templates",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                "value": "/usr/local/bin/shell-utils",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                "value": "/usr/local/bin/setup-scripts.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                "value": "/usr/local/bin/relocate-binaries.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/start-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                "value": "/usr/local/bin/start-pgbouncer.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_PATRONICTL_PATH",
                                "value": "/usr/local/bin/patronictl",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                "value": "/usr/local/bin/post-init.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                "value": "/usr/local/bin/create-backup.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                "value": "/usr/local/bin/exec-with-env",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-running.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                "value": "/usr/local/bin/run-dbops.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                "value": "/usr/local/bin/start-fluentbit.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                "value": "/usr/local/bin/start-postgres-exporter.sh",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/prometheus-postgres-exporter:v0.12.1-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "prometheus-postgres-exporter",
                        "ports": [
                            {
                                "container_port": 9187,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgexporter",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "125m",
                                "memory": "256Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/opt/postgres-exporter/queries.yaml",
                                "mount_propagation": null,
                                "name": "queries",
                                "read_only": true,
                                "sub_path": "queries.yaml",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": [
                            "-c",
                            "while true; do sleep 10; done"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": null,
                        "env_from": null,
                        "image": "quay.io/ongres/postgres-util:v12.17-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "postgres-util",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "125m",
                                "memory": "64Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": true,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": true,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "empty-base",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": null,
                        "env": [
                            {
                                "name": "CLUSTER_NAME",
                                "value": "stackgres",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_NAMESPACE",
                                "value": "default",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_POD_NAME",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS",
                                "value": "https://extensions.stackgres.io/postgres/repository",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PATRONI",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_LOG_LEVEL",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SHOW_STACK_TRACES",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "APP_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "JAVA_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER_SUSPEND",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "MEMORY_REQUEST",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": null,
                                    "resource_field_ref": {
                                        "container_name": "cluster-controller",
                                        "divisor": "1",
                                        "resource": "requests.memory"
                                    },
                                    "secret_key_ref": null
                                }
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "cluster-controller",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "250m",
                                "memory": "512Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer",
                                "mount_propagation": null,
                                "name": "pgbouncer",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/updated",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/auth",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": null,
                                "sub_path": "auth",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/patroni",
                                "mount_propagation": null,
                                "name": "patroni-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl-copy",
                                "mount_propagation": null,
                                "name": "ssl-copy",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    }
                ],
                "dns_config": null,
                "dns_policy": "ClusterFirst",
                "enable_service_links": true,
                "ephemeral_containers": null,
                "host_aliases": null,
                "host_ipc": null,
                "host_network": null,
                "host_pid": null,
                "host_users": null,
                "hostname": "stackgres-1",
                "image_pull_secrets": null,
                "init_containers": [
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/setup-arbitrary-user.sh"
                        ],
                        "env": [
                            {
                                "name": "TEMPLATES_PATH",
                                "value": "/templates",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                "value": "/usr/local/bin/shell-utils",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                "value": "/usr/local/bin/setup-scripts.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                "value": "/usr/local/bin/relocate-binaries.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/start-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                "value": "/usr/local/bin/start-pgbouncer.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_PATRONICTL_PATH",
                                "value": "/usr/local/bin/patronictl",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                "value": "/usr/local/bin/post-init.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                "value": "/usr/local/bin/create-backup.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                "value": "/usr/local/bin/exec-with-env",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-running.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                "value": "/usr/local/bin/run-dbops.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                "value": "/usr/local/bin/start-fluentbit.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                "value": "/usr/local/bin/start-postgres-exporter.sh",
                                "value_from": null
                            },
                            {
                                "name": "PG_BASE_PATH",
                                "value": "/var/lib/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "PG_DATA_PATH",
                                "value": "/var/lib/postgresql/data",
                                "value_from": null
                            },
                            {
                                "name": "HOME",
                                "value": "/tmp",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "setup-arbitrary-user",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/local/etc",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": null,
                                "sub_path": "etc",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/setup-scripts.sh"
                        ],
                        "env": [
                            {
                                "name": "LOCAL_BIN_PATH",
                                "value": "/usr/local/bin",
                                "value_from": null
                            },
                            {
                                "name": "TEMPLATES_PATH",
                                "value": "/templates",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                "value": "/usr/local/bin/shell-utils",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                "value": "/usr/local/bin/setup-scripts.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                "value": "/usr/local/bin/relocate-binaries.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/start-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                "value": "/usr/local/bin/start-pgbouncer.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_PATRONICTL_PATH",
                                "value": "/usr/local/bin/patronictl",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                "value": "/usr/local/bin/post-init.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                "value": "/usr/local/bin/create-backup.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                "value": "/usr/local/bin/exec-with-env",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-running.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                "value": "/usr/local/bin/run-dbops.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                "value": "/usr/local/bin/start-fluentbit.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                "value": "/usr/local/bin/start-postgres-exporter.sh",
                                "value_from": null
                            },
                            {
                                "name": "BASE_ENV_PATH",
                                "value": "/etc/env",
                                "value_from": null
                            },
                            {
                                "name": "POSTGRES_PORT",
                                "value": "5432",
                                "value_from": null
                            },
                            {
                                "name": "BASE_SECRET_PATH",
                                "value": "/etc/env/.secret",
                                "value_from": null
                            },
                            {
                                "name": "HOME",
                                "value": "/tmp",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "setup-scripts",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/local/bin",
                                "mount_propagation": null,
                                "name": "local-bin",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/relocate-binaries.sh"
                        ],
                        "env": [
                            {
                                "name": "PG_BASE_PATH",
                                "value": "/var/lib/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "PG_DATA_PATH",
                                "value": "/var/lib/postgresql/data",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BASE_PATH",
                                "value": "/var/lib/postgresql/extensions",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BINARIES_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BIN_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_SHARE_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB64_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB64_PATH",
                                "value": "/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_BINARIES_PATH",
                                "value": "/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_SHARE_PATH",
                                "value": "/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSION_PATH",
                                "value": "/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BASE_PATH",
                                "value": "/var/lib/postgresql/relocated",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB64_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BINARIES_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BIN_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_SHARE_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_UPGRADE_PATH",
                                "value": "/var/lib/postgresql/upgrade",
                                "value_from": null
                            },
                            {
                                "name": "PATH",
                                "value": "/usr/lib/postgresql/12.17/bin:/usr/lib/postgresql/12.17/extra/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                "value_from": null
                            },
                            {
                                "name": "LD_LIBRARY_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "relocate-binaries",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-exc",
                            "mkdir -p '/etc/pgbouncer/auth'\ntest -f '/etc/pgbouncer/pgbouncer-admin-password'\ntest -f '/etc/pgbouncer/pgbouncer-stats-password'\nPGBOUNCER_ADMIN_MD5=\"$({\n  cat '/etc/pgbouncer/pgbouncer-admin-password'\n  printf '%s' 'pgbouncer_admin'\n  } | md5sum | cut -d ' ' -f 1)\"\nPGBOUNCER_STATS_MD5=\"$({\n  cat '/etc/pgbouncer/pgbouncer-stats-password'\n  printf '%s' 'pgbouncer_stats'\n  } | md5sum | cut -d ' ' -f 1)\"\n(\nprintf '%s\\n' \"\\\"pgbouncer_admin\\\" \\\"md5$PGBOUNCER_ADMIN_MD5\\\"\"\nprintf '%s\\n' \"\\\"pgbouncer_stats\\\" \\\"md5$PGBOUNCER_STATS_MD5\\\"\"\n) > '/etc/pgbouncer/auth/users.txt'"
                        ],
                        "env": null,
                        "env_from": null,
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "pgbouncer-auth-file",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/pgbouncer",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/pgbouncer-admin-password",
                                "mount_propagation": null,
                                "name": "pgbouncer-secrets",
                                "read_only": true,
                                "sub_path": "pgbouncer-admin-password",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/pgbouncer-stats-password",
                                "mount_propagation": null,
                                "name": "pgbouncer-secrets",
                                "read_only": true,
                                "sub_path": "pgbouncer-stats-password",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": null,
                        "env": [
                            {
                                "name": "COMMAND",
                                "value": "run-reconciliation-cycle",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_NAME",
                                "value": "stackgres",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_NAMESPACE",
                                "value": "default",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_POD_NAME",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS",
                                "value": "https://extensions.stackgres.io/postgres/repository",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PATRONI",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_LOG_LEVEL",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SHOW_STACK_TRACES",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "APP_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER_SUSPEND",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "MEMORY_REQUEST",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": null,
                                    "resource_field_ref": {
                                        "container_name": "cluster-reconciliation-cycle",
                                        "divisor": "1",
                                        "resource": "requests.memory"
                                    },
                                    "secret_key_ref": null
                                }
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "cluster-reconciliation-cycle",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl-copy",
                                "mount_propagation": null,
                                "name": "ssl-copy",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-qvwqq",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    }
                ],
                "node_name": "kind-worker3",
                "node_selector": null,
                "os": null,
                "overhead": null,
                "preemption_policy": "PreemptLowerPriority",
                "priority": 0,
                "priority_class_name": null,
                "readiness_gates": null,
                "resource_claims": null,
                "restart_policy": "Always",
                "runtime_class_name": null,
                "scheduler_name": "default-scheduler",
                "scheduling_gates": null,
                "security_context": {
                    "fs_group": 999,
                    "fs_group_change_policy": null,
                    "run_as_group": 999,
                    "run_as_non_root": true,
                    "run_as_user": 999,
                    "se_linux_options": null,
                    "seccomp_profile": null,
                    "supplemental_groups": null,
                    "sysctls": null,
                    "windows_options": null
                },
                "service_account": "stackgres-patroni",
                "service_account_name": "stackgres-patroni",
                "set_hostname_as_fqdn": null,
                "share_process_namespace": true,
                "subdomain": "stackgres",
                "termination_grace_period_seconds": 60,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "toleration_seconds": 300,
                        "value": null
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "toleration_seconds": 300,
                        "value": null
                    }
                ],
                "topology_spread_constraints": null,
                "volumes": [
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "stackgres-data",
                        "nfs": null,
                        "persistent_volume_claim": {
                            "claim_name": "stackgres-data-stackgres-1",
                            "read_only": null
                        },
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": "Memory",
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "socket",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": "Memory",
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "dshm",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "log",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "local-bin",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 292,
                            "items": null,
                            "name": "stackgres",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "patroni-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "patroni-secret-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 256,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "patroni-config",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 292,
                            "items": null,
                            "name": "stackgres-backup",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "backup-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "backup-secret",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 292,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres-backup"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 420,
                            "items": null,
                            "name": "stackgres-replicate",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "replicate-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "replicate-secret",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 420,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres-replicate"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "user",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "ssl-copy",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 288,
                            "items": null,
                            "name": "stackgres-envoy-config",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "envoy",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "ssl",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 256,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres-ssl"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 292,
                            "items": null,
                            "name": "stackgres-templates",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "templates",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 288,
                            "items": null,
                            "name": "stackgres-connection-pooling-config",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "pgbouncer",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "pgbouncer-dynamic-config",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 420,
                            "items": null,
                            "name": "stackgres-prometheus-postgres-exporter-config",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "queries",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "empty-base",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "pgbouncer-secrets",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 420,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "kube-api-access-qvwqq",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": {
                            "default_mode": 420,
                            "sources": [
                                {
                                    "config_map": null,
                                    "downward_api": null,
                                    "secret": null,
                                    "service_account_token": {
                                        "audience": null,
                                        "expiration_seconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "config_map": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "mode": null,
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt",
                                        "optional": null
                                    },
                                    "downward_api": null,
                                    "secret": null,
                                    "service_account_token": null
                                },
                                {
                                    "config_map": null,
                                    "downward_api": {
                                        "items": [
                                            {
                                                "field_ref": {
                                                    "api_version": "v1",
                                                    "field_path": "metadata.namespace"
                                                },
                                                "mode": null,
                                                "path": "namespace",
                                                "resource_field_ref": null
                                            }
                                        ]
                                    },
                                    "secret": null,
                                    "service_account_token": null
                                }
                            ]
                        },
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:24:53+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:25:34+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:25:34+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:23:58+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "container_statuses": [
                    {
                        "container_id": "containerd://0b2382a8b186dacbdf89474e5cedf76015d985f690d75392a7fbfac959f73092",
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_id": "quay.io/stackgres/cluster-controller@sha256:6ed5e0d9af578b45f5ebb48104b2451d44ccf71f8ad7716b2babb78fd38425e7",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "cluster-controller",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:25:33+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://0e9d7c1854c527a08c488e97a1e3ee03efbf34ab38dad844260990eb1e1fba59",
                        "image": "quay.io/ongres/envoy:v1.24.12-build-6.29",
                        "image_id": "quay.io/ongres/envoy@sha256:feec86620854bd5b248ad07d0f212bab1adb2668262a47a540df514d86d58241",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "envoy",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:24:59+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://2c82cea71571de6e28d75bc2139d0219e84967a010aabfcf19d01074cbf54f7b",
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_id": "quay.io/ongres/patroni@sha256:87a4d35f9febd602ecae0eb6e4a2e2273432431cde33eebdb48131172c8b396f",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "patroni",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:24:53+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://1cf0ee0916382c11093f4b2f0b662853e05bdc9ea65560f95aa01657a8800ebf",
                        "image": "quay.io/ongres/pgbouncer:v1.21.0-build-6.29",
                        "image_id": "quay.io/ongres/pgbouncer@sha256:daf85bea99a4da866ba685adcbd9afbd75fd873255b8c0a243991d7d5012404d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "pgbouncer",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:25:07+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://f91c24f83da9046bf34ce56e986c894124523879fb616a1780ccc0e8a9aa4aa7",
                        "image": "quay.io/ongres/postgres-util:v12.17-build-6.29",
                        "image_id": "quay.io/ongres/postgres-util@sha256:ec83470c4294946fecf6a2d5e6d28e7a997b688f53acdbcc96b7d62f925a7e65",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "postgres-util",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:25:32+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://78b984cc2ea3de9e372ac6200f1d594374f0417103d8dd69ccca8e1471b0919e",
                        "image": "quay.io/ongres/prometheus-postgres-exporter:v0.12.1-build-6.29",
                        "image_id": "quay.io/ongres/prometheus-postgres-exporter@sha256:89af0d4afe05a2a40dbb43c41d7163caca44dca5a2ae7c0101f488c816dd1cd0",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "prometheus-postgres-exporter",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:25:11+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    }
                ],
                "ephemeral_container_statuses": null,
                "host_ip": "172.18.0.3",
                "init_container_statuses": [
                    {
                        "container_id": "containerd://990c20d35b9daab992ed948ae6f3ae6ac69cb2ac5db9d0586a86484dcaa7e21b",
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_id": "quay.io/ongres/kubectl@sha256:4b9d2ea2d42d4358cb065391f32dfcc8e727b49d6dc321d7602ce47e1d792b8d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "setup-arbitrary-user",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://990c20d35b9daab992ed948ae6f3ae6ac69cb2ac5db9d0586a86484dcaa7e21b",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:24:08+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:24:08+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://1bad82b5582d7e3f26cc5a22e9eb5ee67f0e9dcd2fffd990a371fe4a6993d999",
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_id": "quay.io/ongres/kubectl@sha256:4b9d2ea2d42d4358cb065391f32dfcc8e727b49d6dc321d7602ce47e1d792b8d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "setup-scripts",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://1bad82b5582d7e3f26cc5a22e9eb5ee67f0e9dcd2fffd990a371fe4a6993d999",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:24:09+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:24:09+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://21d9ee35c7363f8a6dcfb2aa76be008a678439cc2969a2923ea4cf3e86b42863",
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_id": "quay.io/ongres/patroni@sha256:87a4d35f9febd602ecae0eb6e4a2e2273432431cde33eebdb48131172c8b396f",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "relocate-binaries",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://21d9ee35c7363f8a6dcfb2aa76be008a678439cc2969a2923ea4cf3e86b42863",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:24:35+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:24:33+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://0b21352aa17f86539c143c597591887142618c42adc1bcdc1c6f82f52579ecb2",
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_id": "quay.io/ongres/kubectl@sha256:4b9d2ea2d42d4358cb065391f32dfcc8e727b49d6dc321d7602ce47e1d792b8d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "pgbouncer-auth-file",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://0b21352aa17f86539c143c597591887142618c42adc1bcdc1c6f82f52579ecb2",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:24:38+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:24:38+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://28fd41fa7a7f58e8ecdecaf5285a63a66b99d3f0562bddc5be7043532cf99438",
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_id": "quay.io/stackgres/cluster-controller@sha256:6ed5e0d9af578b45f5ebb48104b2451d44ccf71f8ad7716b2babb78fd38425e7",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "cluster-reconciliation-cycle",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://28fd41fa7a7f58e8ecdecaf5285a63a66b99d3f0562bddc5be7043532cf99438",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:24:52+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:24:51+00:00"
                            },
                            "waiting": null
                        }
                    }
                ],
                "message": null,
                "nominated_node_name": null,
                "phase": "Running",
                "pod_ip": "10.244.1.3",
                "pod_i_ps": [
                    {
                        "ip": "10.244.1.3"
                    }
                ],
                "qos_class": "Burstable",
                "reason": null,
                "start_time": "2024-02-06T19:23:58+00:00"
            }
        },
        "stackgres-2": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/cluster-controller-version": "1.8.0",
                    "stackgres.io/envoy-version": "1.24.12",
                    "stackgres.io/operatorVersion": "1.8.0",
                    "stackgres.io/patroni-version": "3.2.0",
                    "stackgres.io/pgbouncer-version": "1.21.0",
                    "stackgres.io/postgresql-version": "12.17",
                    "stackgres.io/prometheus-postgres-exporter-version": "0.12.1",
                    "status": "{\"conn_url\":\"postgres://10.244.3.5:7433/postgres\",\"api_url\":\"http://10.244.3.5:8009/patroni\",\"state\":\"running\",\"role\":\"replica\",\"version\":\"3.2.0\",\"xlog_location\":83886408,\"replication_state\":\"streaming\",\"timeline\":1}"
                },
                "creation_timestamp": "2024-02-06T19:25:34+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": "stackgres-",
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "controller-revision-hash": "stackgres-56fbd68cdc",
                    "nofailover": "false",
                    "noloadbalance": "false",
                    "role": "replica",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d",
                    "stackgres.io/disruptible": "true",
                    "statefulset.kubernetes.io/pod-name": "stackgres-2"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:stackgres.io/cluster-controller-version": {},
                                    "f:stackgres.io/envoy-version": {},
                                    "f:stackgres.io/operatorVersion": {},
                                    "f:stackgres.io/patroni-version": {},
                                    "f:stackgres.io/pgbouncer-version": {},
                                    "f:stackgres.io/postgresql-version": {},
                                    "f:stackgres.io/prometheus-postgres-exporter-version": {}
                                },
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:controller-revision-hash": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {},
                                    "f:stackgres.io/disruptible": {},
                                    "f:statefulset.kubernetes.io/pod-name": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"bf6aee0d-56cb-4c67-91fe-a8ed8b5c9c86\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:affinity": {
                                    ".": {},
                                    "f:podAntiAffinity": {
                                        ".": {},
                                        "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                    }
                                },
                                "f:containers": {
                                    "k:{\"name\":\"cluster-controller\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"APP_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_POD_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PATRONI\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SHOW_STACK_TRACES\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER_SUSPEND\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"JAVA_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"MEMORY_REQUEST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:resourceFieldRef": {}
                                                }
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/auth\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/updated\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl-copy\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"envoy\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":7432,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":7433,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8001,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8008,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/envoy\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"patroni\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"BACKUP_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BACKUP_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BACKUP_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BASE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HUGEPAGES_1G_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HUGEPAGES_2M_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"INITDB_AUTH_HOST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LD_LIBRARY_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_CONFIG_FILE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_CONFIG_MD5SUM\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_CONFIG_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_KUBERNETES_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"PATRONI_KUBERNETES_POD_IP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"PATRONI_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"PATRONI_RESTAPI_CONNECT_ADDRESS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATRONI_SECRET_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_UPGRADE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"REPLICATE_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"REPLICATE_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"REPLICATE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"RESTORE_ENV\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"RESTORE_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"RESTORE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:envFrom": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":7432,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":7433,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8008,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:limits": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            },
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/dev/shm\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/.secret/backup\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/.secret/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/.secret/replicate\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/backup\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/env/replicate\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/patroni\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/extra/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/extra/lib\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/lib\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/lib64\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/local/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/share/postgresql/12.17\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/share/postgresql/12.17/extension\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/log/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"pgbouncer\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"PGBOUNCER_CONFIG_FILE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PGBOUNCER_CONFIG_UPDATED_FILE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/auth\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"postgres-util\"}": {
                                        ".": {},
                                        "f:args": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:stdin": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:tty": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"prometheus-postgres-exporter\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"DATA_SOURCE_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PGAPPNAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXPORTER_CONSTANT_LABELS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXPORTER_EXTEND_QUERY_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXPORTER_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RUN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":9187,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/opt/postgres-exporter/queries.yaml\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:hostname": {},
                                "f:initContainers": {
                                    ".": {},
                                    "k:{\"name\":\"cluster-reconciliation-cycle\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"APP_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_POD_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PATRONI\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SHOW_STACK_TRACES\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"CLUSTER_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"COMMAND\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER_SUSPEND\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"MEMORY_REQUEST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:resourceFieldRef": {}
                                                }
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/ssl-copy\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"pgbouncer-auth-file\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/pgbouncer-admin-password\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/pgbouncer/pgbouncer-stats-password\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"relocate-binaries\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LD_LIBRARY_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSIONS_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_EXTRA_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BINARIES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_EXTENSION_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB64_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_LIB_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_RELOCATED_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_SHARE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_UPGRADE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"setup-arbitrary-user\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HOME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/local/etc\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"setup-scripts\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"BASE_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"BASE_SECRET_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"HOME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"POSTGRES_PORT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:resources": {
                                            ".": {},
                                            "f:requests": {
                                                ".": {},
                                                "f:cpu": {},
                                                "f:memory": {}
                                            }
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/group\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/templates\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/local/bin\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {
                                    ".": {},
                                    "f:fsGroup": {},
                                    "f:runAsGroup": {},
                                    "f:runAsNonRoot": {},
                                    "f:runAsUser": {}
                                },
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:shareProcessNamespace": {},
                                "f:subdomain": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"backup-env\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"backup-secret\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"dshm\"}": {
                                        ".": {},
                                        "f:emptyDir": {
                                            ".": {},
                                            "f:medium": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"empty-base\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"envoy\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"local-bin\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"log\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"patroni-config\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"patroni-env\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"patroni-secret-env\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"pgbouncer\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"pgbouncer-dynamic-config\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"pgbouncer-secrets\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"queries\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"replicate-env\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"replicate-secret\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"socket\"}": {
                                        ".": {},
                                        "f:emptyDir": {
                                            ".": {},
                                            "f:medium": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"ssl\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:secretName": {}
                                        }
                                    },
                                    "k:{\"name\":\"ssl-copy\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"stackgres-data\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:persistentVolumeClaim": {
                                            ".": {},
                                            "f:claimName": {}
                                        }
                                    },
                                    "k:{\"name\":\"templates\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"user\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    }
                                }
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:25:34+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:labels": {
                                    "f:nofailover": {},
                                    "f:noloadbalance": {}
                                }
                            }
                        },
                        "manager": "fabric8-kubernetes-client",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:27:11+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:initContainerStatuses": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.244.3.5\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        },
                        "manager": "kubelet",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:27:11+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:status": {}
                                },
                                "f:labels": {
                                    "f:role": {}
                                }
                            }
                        },
                        "manager": "Patroni",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:41:42+00:00"
                    }
                ],
                "name": "stackgres-2",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "apps/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "StatefulSet",
                        "name": "stackgres",
                        "uid": "bf6aee0d-56cb-4c67-91fe-a8ed8b5c9c86"
                    }
                ],
                "resource_version": "4225",
                "self_link": null,
                "uid": "a9e5e28c-eb2a-4d98-895d-8d8bc2206347"
            },
            "spec": {
                "active_deadline_seconds": null,
                "affinity": {
                    "node_affinity": null,
                    "pod_affinity": null,
                    "pod_anti_affinity": {
                        "preferred_during_scheduling_ignored_during_execution": null,
                        "required_during_scheduling_ignored_during_execution": [
                            {
                                "label_selector": {
                                    "match_expressions": [
                                        {
                                            "key": "app",
                                            "operator": "In",
                                            "values": [
                                                "StackGresCluster"
                                            ]
                                        },
                                        {
                                            "key": "stackgres.io/cluster",
                                            "operator": "In",
                                            "values": [
                                                "true"
                                            ]
                                        }
                                    ],
                                    "match_labels": null
                                },
                                "namespace_selector": null,
                                "namespaces": null,
                                "topology_key": "kubernetes.io/hostname"
                            }
                        ]
                    }
                },
                "automount_service_account_token": null,
                "containers": [
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/usr/local/bin/start-patroni.sh"
                        ],
                        "env": [
                            {
                                "name": "LOCAL_BIN_PATH",
                                "value": "/usr/local/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_BASE_PATH",
                                "value": "/var/lib/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "PG_DATA_PATH",
                                "value": "/var/lib/postgresql/data",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BASE_PATH",
                                "value": "/var/lib/postgresql/extensions",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BINARIES_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BIN_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_SHARE_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB64_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB64_PATH",
                                "value": "/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_BINARIES_PATH",
                                "value": "/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_SHARE_PATH",
                                "value": "/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSION_PATH",
                                "value": "/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BASE_PATH",
                                "value": "/var/lib/postgresql/relocated",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB64_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BINARIES_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BIN_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_SHARE_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_UPGRADE_PATH",
                                "value": "/var/lib/postgresql/upgrade",
                                "value_from": null
                            },
                            {
                                "name": "PATH",
                                "value": "/usr/lib/postgresql/12.17/bin:/usr/lib/postgresql/12.17/extra/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                "value_from": null
                            },
                            {
                                "name": "LD_LIBRARY_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_NAME",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "PATRONI_KUBERNETES_NAMESPACE",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.namespace"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "PATRONI_KUBERNETES_POD_IP",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "status.podIP"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "PATRONI_RESTAPI_CONNECT_ADDRESS",
                                "value": "${PATRONI_KUBERNETES_POD_IP}:8009",
                                "value_from": null
                            },
                            {
                                "name": "INITDB_AUTH_HOST",
                                "value": "scram-sha-256",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_ENV",
                                "value": "patroni",
                                "value_from": null
                            },
                            {
                                "name": "BASE_SECRET_PATH",
                                "value": "/etc/env/.secret",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_ENV_PATH",
                                "value": "/etc/env/patroni",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_SECRET_ENV_PATH",
                                "value": "/etc/env/.secret/patroni",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_CONFIG_PATH",
                                "value": "/etc/patroni",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_CONFIG_FILE_PATH",
                                "value": "/etc/patroni/config.yml",
                                "value_from": null
                            },
                            {
                                "name": "BACKUP_ENV",
                                "value": "backup",
                                "value_from": null
                            },
                            {
                                "name": "BACKUP_ENV_PATH",
                                "value": "/etc/env/backup",
                                "value_from": null
                            },
                            {
                                "name": "BACKUP_SECRET_PATH",
                                "value": "/etc/env/.secret/backup",
                                "value_from": null
                            },
                            {
                                "name": "REPLICATE_ENV",
                                "value": "replicate",
                                "value_from": null
                            },
                            {
                                "name": "REPLICATE_ENV_PATH",
                                "value": "/etc/env/replicate",
                                "value_from": null
                            },
                            {
                                "name": "REPLICATE_SECRET_PATH",
                                "value": "/etc/env/.secret/replicate",
                                "value_from": null
                            },
                            {
                                "name": "RESTORE_ENV",
                                "value": "restore",
                                "value_from": null
                            },
                            {
                                "name": "RESTORE_ENV_PATH",
                                "value": "/etc/env/restore",
                                "value_from": null
                            },
                            {
                                "name": "RESTORE_SECRET_PATH",
                                "value": "/etc/env/.secret/restore",
                                "value_from": null
                            },
                            {
                                "name": "HUGEPAGES_2M_PATH",
                                "value": "/hugepages-2Mi",
                                "value_from": null
                            },
                            {
                                "name": "HUGEPAGES_1G_PATH",
                                "value": "/hugepages-1Gi",
                                "value_from": null
                            },
                            {
                                "name": "PATRONI_CONFIG_MD5SUM",
                                "value": "FE2D4E880481C9786F5195115F883839",
                                "value_from": null
                            }
                        ],
                        "env_from": [
                            {
                                "config_map_ref": {
                                    "name": "stackgres",
                                    "optional": null
                                },
                                "prefix": null,
                                "secret_ref": null
                            }
                        ],
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": {
                            "_exec": null,
                            "failure_threshold": 6,
                            "grpc": null,
                            "http_get": {
                                "host": null,
                                "http_headers": null,
                                "path": "/liveness",
                                "port": 8008,
                                "scheme": "HTTP"
                            },
                            "initial_delay_seconds": 15,
                            "period_seconds": 20,
                            "success_threshold": 1,
                            "tcp_socket": null,
                            "termination_grace_period_seconds": null,
                            "timeout_seconds": 1
                        },
                        "name": "patroni",
                        "ports": [
                            {
                                "container_port": 7432,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgport",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 7433,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgreplication",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8008,
                                "host_ip": null,
                                "host_port": null,
                                "name": "patroniport",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": {
                            "_exec": null,
                            "failure_threshold": 3,
                            "grpc": null,
                            "http_get": {
                                "host": null,
                                "http_headers": null,
                                "path": "/readiness",
                                "port": 8008,
                                "scheme": "HTTP"
                            },
                            "initial_delay_seconds": null,
                            "period_seconds": 2,
                            "success_threshold": 1,
                            "tcp_socket": null,
                            "termination_grace_period_seconds": null,
                            "timeout_seconds": 1
                        },
                        "resources": {
                            "claims": null,
                            "limits": {
                                "cpu": "2",
                                "memory": "4Gi"
                            },
                            "requests": {
                                "cpu": "750m",
                                "memory": "3136Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/dev/shm",
                                "mount_propagation": null,
                                "name": "dshm",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/log/postgresql",
                                "mount_propagation": null,
                                "name": "log",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/local/bin",
                                "mount_propagation": null,
                                "name": "local-bin",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/patroni",
                                "mount_propagation": null,
                                "name": "patroni-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/.secret/patroni",
                                "mount_propagation": null,
                                "name": "patroni-secret-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/patroni",
                                "mount_propagation": null,
                                "name": "patroni-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/backup",
                                "mount_propagation": null,
                                "name": "backup-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/.secret/backup",
                                "mount_propagation": null,
                                "name": "backup-secret",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/replicate",
                                "mount_propagation": null,
                                "name": "replicate-env",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/env/.secret/replicate",
                                "mount_propagation": null,
                                "name": "replicate-secret",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib64",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/lib64",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/bin",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/lib",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/share/postgresql/12.17",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "relocated/12.17/6.29/usr/share/postgresql/12.17",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/share/postgresql/12.17/extension",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "extensions/12/6/usr/share/postgresql/12/extension",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/extra/bin",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "extensions/12/6/usr/lib/postgresql/12/bin",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/lib/postgresql/12.17/extra/lib",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": "extensions/12/6/usr/lib64",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl-copy",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": [
                            "-c",
                            "/etc/envoy/envoy.json"
                        ],
                        "command": [
                            "/usr/local/bin/envoy"
                        ],
                        "env": null,
                        "env_from": null,
                        "image": "quay.io/ongres/envoy:v1.24.12-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "envoy",
                        "ports": [
                            {
                                "container_port": 7432,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgport",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 7433,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgreplication",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8001,
                                "host_ip": null,
                                "host_port": null,
                                "name": "envoy",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8008,
                                "host_ip": null,
                                "host_port": null,
                                "name": "patroniport",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "500m",
                                "memory": "64Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/envoy",
                                "mount_propagation": null,
                                "name": "envoy",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/start-pgbouncer.sh"
                        ],
                        "env": [
                            {
                                "name": "PGBOUNCER_CONFIG_FILE_PATH",
                                "value": "/etc/pgbouncer/pgbouncer.ini",
                                "value_from": null
                            },
                            {
                                "name": "PGBOUNCER_CONFIG_UPDATED_FILE_PATH",
                                "value": "/etc/pgbouncer/updated",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/pgbouncer:v1.21.0-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "pgbouncer",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "250m",
                                "memory": "64Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer",
                                "mount_propagation": null,
                                "name": "pgbouncer",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/auth",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": true,
                                "sub_path": "auth",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/start-postgres-exporter.sh"
                        ],
                        "env": [
                            {
                                "name": "PGAPPNAME",
                                "value": "prometheus-postgres-exporter",
                                "value_from": null
                            },
                            {
                                "name": "DATA_SOURCE_NAME",
                                "value": "postgresql://postgres@:5432/postgres?host=/var/run/postgresql&sslmode=disable",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXPORTER_EXTEND_QUERY_PATH",
                                "value": "/var/opt/postgres-exporter/queries.yaml",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXPORTER_CONSTANT_LABELS",
                                "value": "cluster_name=stackgres, namespace=default",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXPORTER_LOG_LEVEL",
                                "value": "info",
                                "value_from": null
                            },
                            {
                                "name": "PG_PORT",
                                "value": "5432",
                                "value_from": null
                            },
                            {
                                "name": "PG_RUN_PATH",
                                "value": "/var/run/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "TEMPLATES_PATH",
                                "value": "/templates",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                "value": "/usr/local/bin/shell-utils",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                "value": "/usr/local/bin/setup-scripts.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                "value": "/usr/local/bin/relocate-binaries.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/start-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                "value": "/usr/local/bin/start-pgbouncer.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_PATRONICTL_PATH",
                                "value": "/usr/local/bin/patronictl",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                "value": "/usr/local/bin/post-init.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                "value": "/usr/local/bin/create-backup.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                "value": "/usr/local/bin/exec-with-env",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-running.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                "value": "/usr/local/bin/run-dbops.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                "value": "/usr/local/bin/start-fluentbit.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                "value": "/usr/local/bin/start-postgres-exporter.sh",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/prometheus-postgres-exporter:v0.12.1-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "prometheus-postgres-exporter",
                        "ports": [
                            {
                                "container_port": 9187,
                                "host_ip": null,
                                "host_port": null,
                                "name": "pgexporter",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "125m",
                                "memory": "256Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/opt/postgres-exporter/queries.yaml",
                                "mount_propagation": null,
                                "name": "queries",
                                "read_only": true,
                                "sub_path": "queries.yaml",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": [
                            "-c",
                            "while true; do sleep 10; done"
                        ],
                        "command": [
                            "/bin/sh"
                        ],
                        "env": null,
                        "env_from": null,
                        "image": "quay.io/ongres/postgres-util:v12.17-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "postgres-util",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "125m",
                                "memory": "64Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": true,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": true,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "empty-base",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": null,
                        "env": [
                            {
                                "name": "CLUSTER_NAME",
                                "value": "stackgres",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_NAMESPACE",
                                "value": "default",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_POD_NAME",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS",
                                "value": "https://extensions.stackgres.io/postgres/repository",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PATRONI",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_LOG_LEVEL",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SHOW_STACK_TRACES",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "APP_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "JAVA_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER_SUSPEND",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "MEMORY_REQUEST",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": null,
                                    "resource_field_ref": {
                                        "container_name": "cluster-controller",
                                        "divisor": "1",
                                        "resource": "requests.memory"
                                    },
                                    "secret_key_ref": null
                                }
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "cluster-controller",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "250m",
                                "memory": "512Mi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/postgresql",
                                "mount_propagation": null,
                                "name": "socket",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer",
                                "mount_propagation": null,
                                "name": "pgbouncer",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/updated",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/auth",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": null,
                                "sub_path": "auth",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/patroni",
                                "mount_propagation": null,
                                "name": "patroni-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl-copy",
                                "mount_propagation": null,
                                "name": "ssl-copy",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    }
                ],
                "dns_config": null,
                "dns_policy": "ClusterFirst",
                "enable_service_links": true,
                "ephemeral_containers": null,
                "host_aliases": null,
                "host_ipc": null,
                "host_network": null,
                "host_pid": null,
                "host_users": null,
                "hostname": "stackgres-2",
                "image_pull_secrets": null,
                "init_containers": [
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/setup-arbitrary-user.sh"
                        ],
                        "env": [
                            {
                                "name": "TEMPLATES_PATH",
                                "value": "/templates",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                "value": "/usr/local/bin/shell-utils",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                "value": "/usr/local/bin/setup-scripts.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                "value": "/usr/local/bin/relocate-binaries.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/start-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                "value": "/usr/local/bin/start-pgbouncer.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_PATRONICTL_PATH",
                                "value": "/usr/local/bin/patronictl",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                "value": "/usr/local/bin/post-init.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                "value": "/usr/local/bin/create-backup.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                "value": "/usr/local/bin/exec-with-env",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-running.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                "value": "/usr/local/bin/run-dbops.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                "value": "/usr/local/bin/start-fluentbit.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                "value": "/usr/local/bin/start-postgres-exporter.sh",
                                "value_from": null
                            },
                            {
                                "name": "PG_BASE_PATH",
                                "value": "/var/lib/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "PG_DATA_PATH",
                                "value": "/var/lib/postgresql/data",
                                "value_from": null
                            },
                            {
                                "name": "HOME",
                                "value": "/tmp",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "setup-arbitrary-user",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/local/etc",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": null,
                                "sub_path": "etc",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/setup-scripts.sh"
                        ],
                        "env": [
                            {
                                "name": "LOCAL_BIN_PATH",
                                "value": "/usr/local/bin",
                                "value_from": null
                            },
                            {
                                "name": "TEMPLATES_PATH",
                                "value": "/templates",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                "value": "/usr/local/bin/shell-utils",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                "value": "/usr/local/bin/setup-scripts.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                "value": "/usr/local/bin/relocate-binaries.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/start-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                "value": "/usr/local/bin/start-pgbouncer.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_PATRONICTL_PATH",
                                "value": "/usr/local/bin/patronictl",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                "value": "/usr/local/bin/post-init.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                "value": "/usr/local/bin/create-backup.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                "value": "/usr/local/bin/exec-with-env",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-running.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                "value": "/usr/local/bin/run-dbops.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                "value": "/usr/local/bin/set-dbops-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                "value": "/usr/local/bin/start-fluentbit.sh",
                                "value_from": null
                            },
                            {
                                "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                "value": "/usr/local/bin/start-postgres-exporter.sh",
                                "value_from": null
                            },
                            {
                                "name": "BASE_ENV_PATH",
                                "value": "/etc/env",
                                "value_from": null
                            },
                            {
                                "name": "POSTGRES_PORT",
                                "value": "5432",
                                "value_from": null
                            },
                            {
                                "name": "BASE_SECRET_PATH",
                                "value": "/etc/env/.secret",
                                "value_from": null
                            },
                            {
                                "name": "HOME",
                                "value": "/tmp",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "setup-scripts",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/local/bin",
                                "mount_propagation": null,
                                "name": "local-bin",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/passwd",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/passwd",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/group",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/group",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/shadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/shadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/gshadow",
                                "mount_propagation": null,
                                "name": "user",
                                "read_only": true,
                                "sub_path": "etc/gshadow",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/templates/relocate-binaries.sh"
                        ],
                        "env": [
                            {
                                "name": "PG_BASE_PATH",
                                "value": "/var/lib/postgresql",
                                "value_from": null
                            },
                            {
                                "name": "PG_DATA_PATH",
                                "value": "/var/lib/postgresql/data",
                                "value_from": null
                            },
                            {
                                "name": "ETC_PASSWD_PATH",
                                "value": "/etc/passwd",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GROUP_PATH",
                                "value": "/etc/group",
                                "value_from": null
                            },
                            {
                                "name": "ETC_SHADOW_PATH",
                                "value": "/etc/shadow",
                                "value_from": null
                            },
                            {
                                "name": "ETC_GSHADOW_PATH",
                                "value": "/etc/gshadow",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BASE_PATH",
                                "value": "/var/lib/postgresql/extensions",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BINARIES_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_BIN_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_SHARE_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSIONS_LIB64_PATH",
                                "value": "/var/lib/postgresql/extensions/12/6/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB64_PATH",
                                "value": "/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_BINARIES_PATH",
                                "value": "/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_BIN_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTRA_LIB_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_SHARE_PATH",
                                "value": "/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_EXTENSION_PATH",
                                "value": "/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BASE_PATH",
                                "value": "/var/lib/postgresql/relocated",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB64_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib64",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BINARIES_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_BIN_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_LIB_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_SHARE_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17",
                                "value_from": null
                            },
                            {
                                "name": "PG_RELOCATED_EXTENSION_PATH",
                                "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17/extension",
                                "value_from": null
                            },
                            {
                                "name": "PG_UPGRADE_PATH",
                                "value": "/var/lib/postgresql/upgrade",
                                "value_from": null
                            },
                            {
                                "name": "PATH",
                                "value": "/usr/lib/postgresql/12.17/bin:/usr/lib/postgresql/12.17/extra/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                "value_from": null
                            },
                            {
                                "name": "LD_LIBRARY_PATH",
                                "value": "/usr/lib/postgresql/12.17/extra/lib",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "relocate-binaries",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/templates",
                                "mount_propagation": null,
                                "name": "templates",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-exc",
                            "mkdir -p '/etc/pgbouncer/auth'\ntest -f '/etc/pgbouncer/pgbouncer-admin-password'\ntest -f '/etc/pgbouncer/pgbouncer-stats-password'\nPGBOUNCER_ADMIN_MD5=\"$({\n  cat '/etc/pgbouncer/pgbouncer-admin-password'\n  printf '%s' 'pgbouncer_admin'\n  } | md5sum | cut -d ' ' -f 1)\"\nPGBOUNCER_STATS_MD5=\"$({\n  cat '/etc/pgbouncer/pgbouncer-stats-password'\n  printf '%s' 'pgbouncer_stats'\n  } | md5sum | cut -d ' ' -f 1)\"\n(\nprintf '%s\\n' \"\\\"pgbouncer_admin\\\" \\\"md5$PGBOUNCER_ADMIN_MD5\\\"\"\nprintf '%s\\n' \"\\\"pgbouncer_stats\\\" \\\"md5$PGBOUNCER_STATS_MD5\\\"\"\n) > '/etc/pgbouncer/auth/users.txt'"
                        ],
                        "env": null,
                        "env_from": null,
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "pgbouncer-auth-file",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/pgbouncer",
                                "mount_propagation": null,
                                "name": "pgbouncer-dynamic-config",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/pgbouncer-admin-password",
                                "mount_propagation": null,
                                "name": "pgbouncer-secrets",
                                "read_only": true,
                                "sub_path": "pgbouncer-admin-password",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/pgbouncer/pgbouncer-stats-password",
                                "mount_propagation": null,
                                "name": "pgbouncer-secrets",
                                "read_only": true,
                                "sub_path": "pgbouncer-stats-password",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": null,
                        "env": [
                            {
                                "name": "COMMAND",
                                "value": "run-reconciliation-cycle",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_NAME",
                                "value": "stackgres",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_NAMESPACE",
                                "value": "default",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_POD_NAME",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS",
                                "value": "https://extensions.stackgres.io/postgres/repository",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_PATRONI",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_LOG_LEVEL",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "CLUSTER_CONTROLLER_SHOW_STACK_TRACES",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "APP_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_CLUSTER_CONTROLLER_SUSPEND",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "MEMORY_REQUEST",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": null,
                                    "resource_field_ref": {
                                        "container_name": "cluster-reconciliation-cycle",
                                        "divisor": "1",
                                        "resource": "requests.memory"
                                    },
                                    "secret_key_ref": null
                                }
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "cluster-reconciliation-cycle",
                        "ports": null,
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": {
                                "cpu": "2",
                                "memory": "4Gi"
                            }
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/var/lib/postgresql",
                                "mount_propagation": null,
                                "name": "stackgres-data",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl",
                                "mount_propagation": null,
                                "name": "ssl",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/ssl-copy",
                                "mount_propagation": null,
                                "name": "ssl-copy",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-272nh",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    }
                ],
                "node_name": "kind-worker",
                "node_selector": null,
                "os": null,
                "overhead": null,
                "preemption_policy": "PreemptLowerPriority",
                "priority": 0,
                "priority_class_name": null,
                "readiness_gates": null,
                "resource_claims": null,
                "restart_policy": "Always",
                "runtime_class_name": null,
                "scheduler_name": "default-scheduler",
                "scheduling_gates": null,
                "security_context": {
                    "fs_group": 999,
                    "fs_group_change_policy": null,
                    "run_as_group": 999,
                    "run_as_non_root": true,
                    "run_as_user": 999,
                    "se_linux_options": null,
                    "seccomp_profile": null,
                    "supplemental_groups": null,
                    "sysctls": null,
                    "windows_options": null
                },
                "service_account": "stackgres-patroni",
                "service_account_name": "stackgres-patroni",
                "set_hostname_as_fqdn": null,
                "share_process_namespace": true,
                "subdomain": "stackgres",
                "termination_grace_period_seconds": 60,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "toleration_seconds": 300,
                        "value": null
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "toleration_seconds": 300,
                        "value": null
                    }
                ],
                "topology_spread_constraints": null,
                "volumes": [
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "stackgres-data",
                        "nfs": null,
                        "persistent_volume_claim": {
                            "claim_name": "stackgres-data-stackgres-2",
                            "read_only": null
                        },
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": "Memory",
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "socket",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": "Memory",
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "dshm",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "log",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "local-bin",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 292,
                            "items": null,
                            "name": "stackgres",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "patroni-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "patroni-secret-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 256,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "patroni-config",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 292,
                            "items": null,
                            "name": "stackgres-backup",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "backup-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "backup-secret",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 292,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres-backup"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 420,
                            "items": null,
                            "name": "stackgres-replicate",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "replicate-env",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "replicate-secret",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 420,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres-replicate"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "user",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "ssl-copy",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 288,
                            "items": null,
                            "name": "stackgres-envoy-config",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "envoy",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "ssl",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 256,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres-ssl"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 292,
                            "items": null,
                            "name": "stackgres-templates",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "templates",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 288,
                            "items": null,
                            "name": "stackgres-connection-pooling-config",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "pgbouncer",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "pgbouncer-dynamic-config",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 420,
                            "items": null,
                            "name": "stackgres-prometheus-postgres-exporter-config",
                            "optional": null
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "queries",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "empty-base",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "pgbouncer-secrets",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 420,
                            "items": null,
                            "optional": null,
                            "secret_name": "stackgres"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "kube-api-access-272nh",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": {
                            "default_mode": 420,
                            "sources": [
                                {
                                    "config_map": null,
                                    "downward_api": null,
                                    "secret": null,
                                    "service_account_token": {
                                        "audience": null,
                                        "expiration_seconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "config_map": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "mode": null,
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt",
                                        "optional": null
                                    },
                                    "downward_api": null,
                                    "secret": null,
                                    "service_account_token": null
                                },
                                {
                                    "config_map": null,
                                    "downward_api": {
                                        "items": [
                                            {
                                                "field_ref": {
                                                    "api_version": "v1",
                                                    "field_path": "metadata.namespace"
                                                },
                                                "mode": null,
                                                "path": "namespace",
                                                "resource_field_ref": null
                                            }
                                        ]
                                    },
                                    "secret": null,
                                    "service_account_token": null
                                }
                            ]
                        },
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:26:35+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:27:11+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:27:11+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:25:41+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "container_statuses": [
                    {
                        "container_id": "containerd://87914e56cdb6afc9eef374cbd5c86dba93f5c079c9ea1e8e243a299cdd39dbb2",
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_id": "quay.io/stackgres/cluster-controller@sha256:6ed5e0d9af578b45f5ebb48104b2451d44ccf71f8ad7716b2babb78fd38425e7",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "cluster-controller",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:27:10+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://7be10afa0ffe57fb67e95b8df17a3d3fb4cfb52624c69b0a296d4f020dac4675",
                        "image": "quay.io/ongres/envoy:v1.24.12-build-6.29",
                        "image_id": "quay.io/ongres/envoy@sha256:feec86620854bd5b248ad07d0f212bab1adb2668262a47a540df514d86d58241",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "envoy",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:26:42+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://831614c712517cd57086da93732116ae105207363e6566bd7197e48b0f9fff2c",
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_id": "quay.io/ongres/patroni@sha256:87a4d35f9febd602ecae0eb6e4a2e2273432431cde33eebdb48131172c8b396f",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "patroni",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:26:36+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://79d504be93d56064f2c79b4bdcf5d7a013787442776fd09130ef9e542aa2c7c5",
                        "image": "quay.io/ongres/pgbouncer:v1.21.0-build-6.29",
                        "image_id": "quay.io/ongres/pgbouncer@sha256:daf85bea99a4da866ba685adcbd9afbd75fd873255b8c0a243991d7d5012404d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "pgbouncer",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:26:47+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://0d8e864ab895781988cc173eeb25d6bb531033a8be28c4c17da9ad524386a7f6",
                        "image": "quay.io/ongres/postgres-util:v12.17-build-6.29",
                        "image_id": "quay.io/ongres/postgres-util@sha256:ec83470c4294946fecf6a2d5e6d28e7a997b688f53acdbcc96b7d62f925a7e65",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "postgres-util",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:27:10+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://5c4fd54f96defa098c23774ac9298d87951056c9892869866ab1088ee8810888",
                        "image": "quay.io/ongres/prometheus-postgres-exporter:v0.12.1-build-6.29",
                        "image_id": "quay.io/ongres/prometheus-postgres-exporter@sha256:89af0d4afe05a2a40dbb43c41d7163caca44dca5a2ae7c0101f488c816dd1cd0",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "prometheus-postgres-exporter",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:26:51+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    }
                ],
                "ephemeral_container_statuses": null,
                "host_ip": "172.18.0.2",
                "init_container_statuses": [
                    {
                        "container_id": "containerd://1eb74e5348aaed5f43c817bd3a60f44ce9ca921760f7d82c1e59898c7e2f7256",
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_id": "quay.io/ongres/kubectl@sha256:4b9d2ea2d42d4358cb065391f32dfcc8e727b49d6dc321d7602ce47e1d792b8d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "setup-arbitrary-user",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://1eb74e5348aaed5f43c817bd3a60f44ce9ca921760f7d82c1e59898c7e2f7256",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:25:54+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:25:54+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://1d09f4352a1e137e93f0ac01d84e204532189f73f8485fa62b1344ec55a56283",
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_id": "quay.io/ongres/kubectl@sha256:4b9d2ea2d42d4358cb065391f32dfcc8e727b49d6dc321d7602ce47e1d792b8d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "setup-scripts",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://1d09f4352a1e137e93f0ac01d84e204532189f73f8485fa62b1344ec55a56283",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:25:56+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:25:56+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://9d1a022d3128673914897d4cc5092a76135eb758287b1772793aa50973f67c70",
                        "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                        "image_id": "quay.io/ongres/patroni@sha256:87a4d35f9febd602ecae0eb6e4a2e2273432431cde33eebdb48131172c8b396f",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "relocate-binaries",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://9d1a022d3128673914897d4cc5092a76135eb758287b1772793aa50973f67c70",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:26:22+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:26:20+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://d1113fa4f077b90dc8a359acfde01086dc9dc01d4b08e041a01c4fe052407c4f",
                        "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                        "image_id": "quay.io/ongres/kubectl@sha256:4b9d2ea2d42d4358cb065391f32dfcc8e727b49d6dc321d7602ce47e1d792b8d",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "pgbouncer-auth-file",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://d1113fa4f077b90dc8a359acfde01086dc9dc01d4b08e041a01c4fe052407c4f",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:26:25+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:26:25+00:00"
                            },
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://d71f4e060317853005a8b8afa9e527693ec34c80c1e8305a7f40d16f9e08cc92",
                        "image": "quay.io/stackgres/cluster-controller:1.8.0",
                        "image_id": "quay.io/stackgres/cluster-controller@sha256:6ed5e0d9af578b45f5ebb48104b2451d44ccf71f8ad7716b2babb78fd38425e7",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "cluster-reconciliation-cycle",
                        "ready": true,
                        "restart_count": 0,
                        "started": null,
                        "state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://d71f4e060317853005a8b8afa9e527693ec34c80c1e8305a7f40d16f9e08cc92",
                                "exit_code": 0,
                                "finished_at": "2024-02-06T19:26:35+00:00",
                                "message": null,
                                "reason": "Completed",
                                "signal": null,
                                "started_at": "2024-02-06T19:26:34+00:00"
                            },
                            "waiting": null
                        }
                    }
                ],
                "message": null,
                "nominated_node_name": null,
                "phase": "Running",
                "pod_ip": "10.244.3.5",
                "pod_i_ps": [
                    {
                        "ip": "10.244.3.5"
                    }
                ],
                "qos_class": "Burstable",
                "reason": null,
                "start_time": "2024-02-06T19:25:41+00:00"
            }
        },
        "stackgres-operator-868bb9f79d-92nln": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:17:40+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": "stackgres-operator-868bb9f79d-",
                "generation": null,
                "labels": {
                    "app": "stackgres-operator",
                    "group": "stackgres.io",
                    "pod-template-hash": "868bb9f79d"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:group": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"53a8b04b-f236-4d96-bc91-f675fa4f46a9\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:containers": {
                                    "k:{\"name\":\"stackgres-operator\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"DISABLE_RECONCILIATION\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"EXTENSIONS_REPOSITORY_URLS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"INSTALL_CERTS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"INSTALL_CRDS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"INSTALL_WEBHOOKS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"OPERATOR_IMAGE_VERSION\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"OPERATOR_IP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"OPERATOR_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"OPERATOR_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"OPERATOR_POD_NAME\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"OPERATOR_SERVICE_ACCOUNT\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"PROMETHEUS_AUTOBIND\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"SG_CONTAINER_REGISTRY\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"SG_IMAGE_PULL_POLICY\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {},
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/operator/certs\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {
                                    ".": {},
                                    "f:fsGroup": {},
                                    "f:runAsGroup": {},
                                    "f:runAsNonRoot": {},
                                    "f:runAsUser": {}
                                },
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"operator-certs\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:optional": {},
                                            "f:secretName": {}
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.244.3.2\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        },
                        "manager": "kubelet",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:17:57+00:00"
                    }
                ],
                "name": "stackgres-operator-868bb9f79d-92nln",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "apps/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "stackgres-operator-868bb9f79d",
                        "uid": "53a8b04b-f236-4d96-bc91-f675fa4f46a9"
                    }
                ],
                "resource_version": "1072",
                "self_link": null,
                "uid": "0b4d960b-dfee-4ce1-a5ab-305d27d50c63"
            },
            "spec": {
                "active_deadline_seconds": null,
                "affinity": null,
                "automount_service_account_token": null,
                "containers": [
                    {
                        "args": null,
                        "command": null,
                        "env": [
                            {
                                "name": "OPERATOR_NAME",
                                "value": "stackgres-operator",
                                "value_from": null
                            },
                            {
                                "name": "OPERATOR_NAMESPACE",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.namespace"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "OPERATOR_IMAGE_VERSION",
                                "value": "1.8.0",
                                "value_from": null
                            },
                            {
                                "name": "DISABLE_RECONCILIATION",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "INSTALL_CRDS",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "INSTALL_WEBHOOKS",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "INSTALL_CERTS",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "PROMETHEUS_AUTOBIND",
                                "value": "true",
                                "value_from": null
                            },
                            {
                                "name": "OPERATOR_SERVICE_ACCOUNT",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "spec.serviceAccountName"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "OPERATOR_POD_NAME",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.name"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "OPERATOR_IP",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "status.podIP"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "SG_CONTAINER_REGISTRY",
                                "value": "quay.io",
                                "value_from": null
                            },
                            {
                                "name": "SG_IMAGE_PULL_POLICY",
                                "value": "IfNotPresent",
                                "value_from": null
                            },
                            {
                                "name": "EXTENSIONS_REPOSITORY_URLS",
                                "value": "https://extensions.stackgres.io/postgres/repository",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/stackgres/operator:1.8.0",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": {
                            "_exec": null,
                            "failure_threshold": 3,
                            "grpc": null,
                            "http_get": {
                                "host": null,
                                "http_headers": null,
                                "path": "/q/health/live",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initial_delay_seconds": 10,
                            "period_seconds": 60,
                            "success_threshold": 1,
                            "tcp_socket": null,
                            "termination_grace_period_seconds": null,
                            "timeout_seconds": 10
                        },
                        "name": "stackgres-operator",
                        "ports": [
                            {
                                "container_port": 8080,
                                "host_ip": null,
                                "host_port": null,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8443,
                                "host_ip": null,
                                "host_port": null,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": {
                            "_exec": null,
                            "failure_threshold": 3,
                            "grpc": null,
                            "http_get": {
                                "host": null,
                                "http_headers": null,
                                "path": "/q/health/ready",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initial_delay_seconds": null,
                            "period_seconds": 2,
                            "success_threshold": 1,
                            "tcp_socket": null,
                            "termination_grace_period_seconds": null,
                            "timeout_seconds": 1
                        },
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": null
                        },
                        "security_context": null,
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/operator/certs",
                                "mount_propagation": null,
                                "name": "operator-certs",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-gq9t7",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    }
                ],
                "dns_config": null,
                "dns_policy": "ClusterFirst",
                "enable_service_links": true,
                "ephemeral_containers": null,
                "host_aliases": null,
                "host_ipc": null,
                "host_network": null,
                "host_pid": null,
                "host_users": null,
                "hostname": null,
                "image_pull_secrets": null,
                "init_containers": null,
                "node_name": "kind-worker",
                "node_selector": null,
                "os": null,
                "overhead": null,
                "preemption_policy": "PreemptLowerPriority",
                "priority": 0,
                "priority_class_name": null,
                "readiness_gates": null,
                "resource_claims": null,
                "restart_policy": "Always",
                "runtime_class_name": null,
                "scheduler_name": "default-scheduler",
                "scheduling_gates": null,
                "security_context": {
                    "fs_group": 1000,
                    "fs_group_change_policy": null,
                    "run_as_group": 1000,
                    "run_as_non_root": true,
                    "run_as_user": 1000,
                    "se_linux_options": null,
                    "seccomp_profile": null,
                    "supplemental_groups": null,
                    "sysctls": null,
                    "windows_options": null
                },
                "service_account": "stackgres-operator",
                "service_account_name": "stackgres-operator",
                "set_hostname_as_fqdn": null,
                "share_process_namespace": null,
                "subdomain": null,
                "termination_grace_period_seconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "toleration_seconds": 300,
                        "value": null
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "toleration_seconds": 300,
                        "value": null
                    }
                ],
                "topology_spread_constraints": null,
                "volumes": [
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "operator-certs",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 420,
                            "items": null,
                            "optional": true,
                            "secret_name": "stackgres-operator-certs"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "kube-api-access-gq9t7",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": {
                            "default_mode": 420,
                            "sources": [
                                {
                                    "config_map": null,
                                    "downward_api": null,
                                    "secret": null,
                                    "service_account_token": {
                                        "audience": null,
                                        "expiration_seconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "config_map": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "mode": null,
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt",
                                        "optional": null
                                    },
                                    "downward_api": null,
                                    "secret": null,
                                    "service_account_token": null
                                },
                                {
                                    "config_map": null,
                                    "downward_api": {
                                        "items": [
                                            {
                                                "field_ref": {
                                                    "api_version": "v1",
                                                    "field_path": "metadata.namespace"
                                                },
                                                "mode": null,
                                                "path": "namespace",
                                                "resource_field_ref": null
                                            }
                                        ]
                                    },
                                    "secret": null,
                                    "service_account_token": null
                                }
                            ]
                        },
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:17:40+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:17:57+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:17:57+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:17:40+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "container_statuses": [
                    {
                        "container_id": "containerd://5f73863bc74182e08717cd3f26ed3c5821e027fdf0db87db2043f48d510a5879",
                        "image": "quay.io/stackgres/operator:1.8.0",
                        "image_id": "quay.io/stackgres/operator@sha256:5f90e3a7ca7515ce400134e65266c845ce59c524dfcad9679e3cd3a47f3becd6",
                        "last_state": {
                            "running": null,
                            "terminated": {
                                "container_id": "containerd://5d05bd82064fe61b33764f6a692dceefbded48c8b02acf7e5676686499ad5928",
                                "exit_code": 1,
                                "finished_at": "2024-02-06T19:17:54+00:00",
                                "message": null,
                                "reason": "Error",
                                "signal": null,
                                "started_at": "2024-02-06T19:17:53+00:00"
                            },
                            "waiting": null
                        },
                        "name": "stackgres-operator",
                        "ready": true,
                        "restart_count": 1,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:17:55+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    }
                ],
                "ephemeral_container_statuses": null,
                "host_ip": "172.18.0.2",
                "init_container_statuses": null,
                "message": null,
                "nominated_node_name": null,
                "phase": "Running",
                "pod_ip": "10.244.3.2",
                "pod_i_ps": [
                    {
                        "ip": "10.244.3.2"
                    }
                ],
                "qos_class": "BestEffort",
                "reason": null,
                "start_time": "2024-02-06T19:17:40+00:00"
            }
        },
        "stackgres-restapi-7867b48c76-6v4cz": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:18:09+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": "stackgres-restapi-7867b48c76-",
                "generation": null,
                "labels": {
                    "app": "StackGresConfig",
                    "pod-template-hash": "7867b48c76",
                    "stackgres.io/config-name": "stackgres-operator",
                    "stackgres.io/config-uid": "917865c8-90f9-416e-af45-5e86379bc632",
                    "stackgres.io/restapi": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:generateName": {},
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {},
                                    "f:stackgres.io/config-name": {},
                                    "f:stackgres.io/config-uid": {},
                                    "f:stackgres.io/restapi": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"916e1bc6-9ddf-4756-9227-6bbfcf57cdae\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:affinity": {},
                                "f:containers": {
                                    "k:{\"name\":\"stackgres-adminui\"}": {
                                        ".": {},
                                        "f:command": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"GRAFANA_DASHBOARD_LIST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"GRAFANA_DASHBOARD_URLS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"GRAFANA_EMBEDDED\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"GRAFANA_SCHEMA\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"GRAFANA_TOKEN\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"GRAFANA_WEB_HOST\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"SHOW_DEBUG\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":9080,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:resources": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsGroup": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {}
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/nginx/conf.d\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/nginx/nginx.conf\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/nginx/template.d\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {}
                                            },
                                            "k:{\"mountPath\":\"/etc/operator/certs\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            },
                                            "k:{\"mountPath\":\"/usr/local/bin/start-nginx.sh\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/cache/nginx\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/log/nginx\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            },
                                            "k:{\"mountPath\":\"/var/run\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:subPath": {}
                                            }
                                        }
                                    },
                                    "k:{\"name\":\"stackgres-restapi\"}": {
                                        ".": {},
                                        "f:env": {
                                            ".": {},
                                            "k:{\"name\":\"APP_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"DEBUG_RESTAPI\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"DEBUG_RESTAPI_SUSPEND\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"EXTENSIONS_REPOSITORY_URLS\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"GRAFANA_EMBEDDED\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"JAVA_OPTS\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"OPERATOR_VERSION\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"RESTAPI_IP\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"RESTAPI_LOG_LEVEL\"}": {
                                                ".": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"RESTAPI_NAMESPACE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:valueFrom": {
                                                    ".": {},
                                                    "f:fieldRef": {}
                                                }
                                            },
                                            "k:{\"name\":\"RESTAPI_SHOW_STACK_TRACES\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"STACKGRES_AUTH_TYPE\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:value": {}
                                            },
                                            "k:{\"name\":\"USE_ARBITRARY_USER\"}": {
                                                ".": {},
                                                "f:name": {}
                                            }
                                        },
                                        "f:image": {},
                                        "f:imagePullPolicy": {},
                                        "f:livenessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:initialDelaySeconds": {},
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:name": {},
                                        "f:ports": {
                                            ".": {},
                                            "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            },
                                            "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                ".": {},
                                                "f:containerPort": {},
                                                "f:name": {},
                                                "f:protocol": {}
                                            }
                                        },
                                        "f:readinessProbe": {
                                            ".": {},
                                            "f:failureThreshold": {},
                                            "f:httpGet": {
                                                ".": {},
                                                "f:path": {},
                                                "f:port": {},
                                                "f:scheme": {}
                                            },
                                            "f:periodSeconds": {},
                                            "f:successThreshold": {},
                                            "f:timeoutSeconds": {}
                                        },
                                        "f:resources": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:runAsGroup": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {}
                                        },
                                        "f:terminationMessagePath": {},
                                        "f:terminationMessagePolicy": {},
                                        "f:volumeMounts": {
                                            ".": {},
                                            "k:{\"mountPath\":\"/etc/operator/certs\"}": {
                                                ".": {},
                                                "f:mountPath": {},
                                                "f:name": {},
                                                "f:readOnly": {}
                                            }
                                        }
                                    }
                                },
                                "f:dnsPolicy": {},
                                "f:enableServiceLinks": {},
                                "f:restartPolicy": {},
                                "f:schedulerName": {},
                                "f:securityContext": {
                                    ".": {},
                                    "f:fsGroup": {},
                                    "f:runAsNonRoot": {}
                                },
                                "f:serviceAccount": {},
                                "f:serviceAccountName": {},
                                "f:terminationGracePeriodSeconds": {},
                                "f:volumes": {
                                    ".": {},
                                    "k:{\"name\":\"adminui-nginx\"}": {
                                        ".": {},
                                        "f:configMap": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:name": {},
                                            "f:optional": {}
                                        },
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"adminui-nginx-etc\"}": {
                                        ".": {},
                                        "f:emptyDir": {},
                                        "f:name": {}
                                    },
                                    "k:{\"name\":\"web-certs\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:secret": {
                                            ".": {},
                                            "f:defaultMode": {},
                                            "f:optional": {},
                                            "f:secretName": {}
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:18:09+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:conditions": {
                                    "k:{\"type\":\"ContainersReady\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Initialized\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    },
                                    "k:{\"type\":\"Ready\"}": {
                                        ".": {},
                                        "f:lastProbeTime": {},
                                        "f:lastTransitionTime": {},
                                        "f:status": {},
                                        "f:type": {}
                                    }
                                },
                                "f:containerStatuses": {},
                                "f:hostIP": {},
                                "f:phase": {},
                                "f:podIP": {},
                                "f:podIPs": {
                                    ".": {},
                                    "k:{\"ip\":\"10.244.3.3\"}": {
                                        ".": {},
                                        "f:ip": {}
                                    }
                                },
                                "f:startTime": {}
                            }
                        },
                        "manager": "kubelet",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:18:39+00:00"
                    }
                ],
                "name": "stackgres-restapi-7867b48c76-6v4cz",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "apps/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "ReplicaSet",
                        "name": "stackgres-restapi-7867b48c76",
                        "uid": "916e1bc6-9ddf-4756-9227-6bbfcf57cdae"
                    }
                ],
                "resource_version": "1199",
                "self_link": null,
                "uid": "4afecca8-c9ac-43fc-848b-b82a74d8b13d"
            },
            "spec": {
                "active_deadline_seconds": null,
                "affinity": {
                    "node_affinity": null,
                    "pod_affinity": null,
                    "pod_anti_affinity": null
                },
                "automount_service_account_token": null,
                "containers": [
                    {
                        "args": null,
                        "command": null,
                        "env": [
                            {
                                "name": "RESTAPI_NAMESPACE",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "metadata.namespace"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "RESTAPI_IP",
                                "value": null,
                                "value_from": {
                                    "config_map_key_ref": null,
                                    "field_ref": {
                                        "api_version": "v1",
                                        "field_path": "status.podIP"
                                    },
                                    "resource_field_ref": null,
                                    "secret_key_ref": null
                                }
                            },
                            {
                                "name": "RESTAPI_LOG_LEVEL",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "RESTAPI_SHOW_STACK_TRACES",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "APP_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "JAVA_OPTS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_RESTAPI",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "DEBUG_RESTAPI_SUSPEND",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "GRAFANA_EMBEDDED",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "USE_ARBITRARY_USER",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "EXTENSIONS_REPOSITORY_URLS",
                                "value": "https://extensions.stackgres.io/postgres/repository",
                                "value_from": null
                            },
                            {
                                "name": "STACKGRES_AUTH_TYPE",
                                "value": "jwt",
                                "value_from": null
                            },
                            {
                                "name": "OPERATOR_VERSION",
                                "value": "1.8.0",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/stackgres/restapi:1.8.0",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": {
                            "_exec": null,
                            "failure_threshold": 3,
                            "grpc": null,
                            "http_get": {
                                "host": null,
                                "http_headers": null,
                                "path": "/q/health/live",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initial_delay_seconds": 5,
                            "period_seconds": 30,
                            "success_threshold": 1,
                            "tcp_socket": null,
                            "termination_grace_period_seconds": null,
                            "timeout_seconds": 10
                        },
                        "name": "stackgres-restapi",
                        "ports": [
                            {
                                "container_port": 8080,
                                "host_ip": null,
                                "host_port": null,
                                "name": "resthttp",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 8443,
                                "host_ip": null,
                                "host_port": null,
                                "name": "resthttps",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": {
                            "_exec": null,
                            "failure_threshold": 3,
                            "grpc": null,
                            "http_get": {
                                "host": null,
                                "http_headers": null,
                                "path": "/q/health/ready",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initial_delay_seconds": null,
                            "period_seconds": 2,
                            "success_threshold": 1,
                            "tcp_socket": null,
                            "termination_grace_period_seconds": null,
                            "timeout_seconds": 1
                        },
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": null
                        },
                        "security_context": {
                            "allow_privilege_escalation": null,
                            "capabilities": null,
                            "privileged": null,
                            "proc_mount": null,
                            "read_only_root_filesystem": null,
                            "run_as_group": 185,
                            "run_as_non_root": true,
                            "run_as_user": 185,
                            "se_linux_options": null,
                            "seccomp_profile": null,
                            "windows_options": null
                        },
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/operator/certs",
                                "mount_propagation": null,
                                "name": "web-certs",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-hw4mx",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    },
                    {
                        "args": null,
                        "command": [
                            "/bin/sh",
                            "-ex",
                            "/usr/local/bin/start-nginx.sh"
                        ],
                        "env": [
                            {
                                "name": "SHOW_DEBUG",
                                "value": "false",
                                "value_from": null
                            },
                            {
                                "name": "GRAFANA_DASHBOARD_LIST",
                                "value": "archiving.json\nconnection-pooling.json\ncurrent-activity.json\ndb-info.json\ndb-objects.json\ndb-os.json\nqueries.json\nreplication.json",
                                "value_from": null
                            },
                            {
                                "name": "GRAFANA_EMBEDDED",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "GRAFANA_DASHBOARD_URLS",
                                "value": null,
                                "value_from": null
                            },
                            {
                                "name": "GRAFANA_SCHEMA",
                                "value": "http",
                                "value_from": null
                            },
                            {
                                "name": "GRAFANA_WEB_HOST",
                                "value": "localhost:8080",
                                "value_from": null
                            },
                            {
                                "name": "GRAFANA_TOKEN",
                                "value": "unknown",
                                "value_from": null
                            }
                        ],
                        "env_from": null,
                        "image": "quay.io/stackgres/admin-ui:1.8.0",
                        "image_pull_policy": "IfNotPresent",
                        "lifecycle": null,
                        "liveness_probe": null,
                        "name": "stackgres-adminui",
                        "ports": [
                            {
                                "container_port": 9080,
                                "host_ip": null,
                                "host_port": null,
                                "name": "http",
                                "protocol": "TCP"
                            },
                            {
                                "container_port": 9443,
                                "host_ip": null,
                                "host_port": null,
                                "name": "https",
                                "protocol": "TCP"
                            }
                        ],
                        "readiness_probe": null,
                        "resources": {
                            "claims": null,
                            "limits": null,
                            "requests": null
                        },
                        "security_context": {
                            "allow_privilege_escalation": null,
                            "capabilities": null,
                            "privileged": null,
                            "proc_mount": null,
                            "read_only_root_filesystem": null,
                            "run_as_group": 996,
                            "run_as_non_root": true,
                            "run_as_user": 998,
                            "se_linux_options": null,
                            "seccomp_profile": null,
                            "windows_options": null
                        },
                        "startup_probe": null,
                        "stdin": null,
                        "stdin_once": null,
                        "termination_message_path": "/dev/termination-log",
                        "termination_message_policy": "File",
                        "tty": null,
                        "volume_devices": null,
                        "volume_mounts": [
                            {
                                "mount_path": "/etc/operator/certs",
                                "mount_propagation": null,
                                "name": "web-certs",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/usr/local/bin/start-nginx.sh",
                                "mount_propagation": null,
                                "name": "adminui-nginx",
                                "read_only": true,
                                "sub_path": "start-nginx.sh",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/nginx/nginx.conf",
                                "mount_propagation": null,
                                "name": "adminui-nginx",
                                "read_only": true,
                                "sub_path": "nginx.conf",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/nginx/template.d",
                                "mount_propagation": null,
                                "name": "adminui-nginx",
                                "read_only": null,
                                "sub_path": null,
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/etc/nginx/conf.d",
                                "mount_propagation": null,
                                "name": "adminui-nginx-etc",
                                "read_only": null,
                                "sub_path": "etc/nginx/conf.d",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/cache/nginx",
                                "mount_propagation": null,
                                "name": "adminui-nginx-etc",
                                "read_only": null,
                                "sub_path": "var/cache/nginx",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run",
                                "mount_propagation": null,
                                "name": "adminui-nginx-etc",
                                "read_only": null,
                                "sub_path": "var/run",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/log/nginx",
                                "mount_propagation": null,
                                "name": "adminui-nginx-etc",
                                "read_only": null,
                                "sub_path": "var/log/nginx",
                                "sub_path_expr": null
                            },
                            {
                                "mount_path": "/var/run/secrets/kubernetes.io/serviceaccount",
                                "mount_propagation": null,
                                "name": "kube-api-access-hw4mx",
                                "read_only": true,
                                "sub_path": null,
                                "sub_path_expr": null
                            }
                        ],
                        "working_dir": null
                    }
                ],
                "dns_config": null,
                "dns_policy": "ClusterFirst",
                "enable_service_links": true,
                "ephemeral_containers": null,
                "host_aliases": null,
                "host_ipc": null,
                "host_network": null,
                "host_pid": null,
                "host_users": null,
                "hostname": null,
                "image_pull_secrets": null,
                "init_containers": null,
                "node_name": "kind-worker",
                "node_selector": null,
                "os": null,
                "overhead": null,
                "preemption_policy": "PreemptLowerPriority",
                "priority": 0,
                "priority_class_name": null,
                "readiness_gates": null,
                "resource_claims": null,
                "restart_policy": "Always",
                "runtime_class_name": null,
                "scheduler_name": "default-scheduler",
                "scheduling_gates": null,
                "security_context": {
                    "fs_group": 185,
                    "fs_group_change_policy": null,
                    "run_as_group": null,
                    "run_as_non_root": true,
                    "run_as_user": null,
                    "se_linux_options": null,
                    "seccomp_profile": null,
                    "supplemental_groups": null,
                    "sysctls": null,
                    "windows_options": null
                },
                "service_account": "stackgres-restapi",
                "service_account_name": "stackgres-restapi",
                "set_hostname_as_fqdn": null,
                "share_process_namespace": null,
                "subdomain": null,
                "termination_grace_period_seconds": 30,
                "tolerations": [
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "toleration_seconds": 300,
                        "value": null
                    },
                    {
                        "effect": "NoExecute",
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "toleration_seconds": 300,
                        "value": null
                    }
                ],
                "topology_spread_constraints": null,
                "volumes": [
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "web-certs",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": {
                            "default_mode": 420,
                            "items": null,
                            "optional": false,
                            "secret_name": "stackgres-operator-web-certs"
                        },
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": {
                            "default_mode": 420,
                            "items": null,
                            "name": "stackgres-restapi-nginx",
                            "optional": false
                        },
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "adminui-nginx",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": {
                            "medium": null,
                            "size_limit": null
                        },
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "adminui-nginx-etc",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": null,
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    },
                    {
                        "aws_elastic_block_store": null,
                        "azure_disk": null,
                        "azure_file": null,
                        "cephfs": null,
                        "cinder": null,
                        "config_map": null,
                        "csi": null,
                        "downward_api": null,
                        "empty_dir": null,
                        "ephemeral": null,
                        "fc": null,
                        "flex_volume": null,
                        "flocker": null,
                        "gce_persistent_disk": null,
                        "git_repo": null,
                        "glusterfs": null,
                        "host_path": null,
                        "iscsi": null,
                        "name": "kube-api-access-hw4mx",
                        "nfs": null,
                        "persistent_volume_claim": null,
                        "photon_persistent_disk": null,
                        "portworx_volume": null,
                        "projected": {
                            "default_mode": 420,
                            "sources": [
                                {
                                    "config_map": null,
                                    "downward_api": null,
                                    "secret": null,
                                    "service_account_token": {
                                        "audience": null,
                                        "expiration_seconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "config_map": {
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "mode": null,
                                                "path": "ca.crt"
                                            }
                                        ],
                                        "name": "kube-root-ca.crt",
                                        "optional": null
                                    },
                                    "downward_api": null,
                                    "secret": null,
                                    "service_account_token": null
                                },
                                {
                                    "config_map": null,
                                    "downward_api": {
                                        "items": [
                                            {
                                                "field_ref": {
                                                    "api_version": "v1",
                                                    "field_path": "metadata.namespace"
                                                },
                                                "mode": null,
                                                "path": "namespace",
                                                "resource_field_ref": null
                                            }
                                        ]
                                    },
                                    "secret": null,
                                    "service_account_token": null
                                }
                            ]
                        },
                        "quobyte": null,
                        "rbd": null,
                        "scale_io": null,
                        "secret": null,
                        "storageos": null,
                        "vsphere_volume": null
                    }
                ]
            },
            "status": {
                "conditions": [
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:18:09+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "Initialized"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:18:39+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "Ready"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:18:39+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "ContainersReady"
                    },
                    {
                        "last_probe_time": null,
                        "last_transition_time": "2024-02-06T19:18:09+00:00",
                        "message": null,
                        "reason": null,
                        "status": "True",
                        "type": "PodScheduled"
                    }
                ],
                "container_statuses": [
                    {
                        "container_id": "containerd://639e0436b572bf992f2d5bfcfd162ef15c6e8362434ef794eff516b109227893",
                        "image": "quay.io/stackgres/admin-ui:1.8.0",
                        "image_id": "quay.io/stackgres/admin-ui@sha256:02fbaea88fdbcaa509c2eac5f04ed036e0e33585502c809a7b10cf80dec8f76b",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "stackgres-adminui",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:18:39+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    },
                    {
                        "container_id": "containerd://d72b766f779d7abbe937e976a623e82eaca2cdd7bda554fbe1d83ceecb196945",
                        "image": "quay.io/stackgres/restapi:1.8.0",
                        "image_id": "quay.io/stackgres/restapi@sha256:d8bac8f9caae85cad72d774ef4d5b0fe58967d48812ada57666d685bed67692e",
                        "last_state": {
                            "running": null,
                            "terminated": null,
                            "waiting": null
                        },
                        "name": "stackgres-restapi",
                        "ready": true,
                        "restart_count": 0,
                        "started": true,
                        "state": {
                            "running": {
                                "started_at": "2024-02-06T19:18:20+00:00"
                            },
                            "terminated": null,
                            "waiting": null
                        }
                    }
                ],
                "ephemeral_container_statuses": null,
                "host_ip": "172.18.0.2",
                "init_container_statuses": null,
                "message": null,
                "nominated_node_name": null,
                "phase": "Running",
                "pod_ip": "10.244.3.3",
                "pod_i_ps": [
                    {
                        "ip": "10.244.3.3"
                    }
                ],
                "qos_class": "BestEffort",
                "reason": null,
                "start_time": "2024-02-06T19:18:09+00:00"
            }
        }
    },
    "replica_set": {
        "stackgres-operator-868bb9f79d": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1",
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": 1,
                "labels": {
                    "app": "stackgres-operator",
                    "group": "stackgres.io",
                    "pod-template-hash": "868bb9f79d"
                },
                "managed_fields": [
                    {
                        "api_version": "apps/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/desired-replicas": {},
                                    "f:deployment.kubernetes.io/max-replicas": {},
                                    "f:deployment.kubernetes.io/revision": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:group": {},
                                    "f:pod-template-hash": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"dca0d0db-6a31-4596-bf0c-730bf9fab504\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {},
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:group": {},
                                            "f:pod-template-hash": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:containers": {
                                            "k:{\"name\":\"stackgres-operator\"}": {
                                                ".": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"DISABLE_RECONCILIATION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"EXTENSIONS_REPOSITORY_URLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"INSTALL_CERTS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"INSTALL_CRDS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"INSTALL_WEBHOOKS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"OPERATOR_IMAGE_VERSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"OPERATOR_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"OPERATOR_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"OPERATOR_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"OPERATOR_POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"OPERATOR_SERVICE_ACCOUNT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"PROMETHEUS_AUTOBIND\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"SG_CONTAINER_REGISTRY\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"SG_IMAGE_PULL_POLICY\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/operator/certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:fsGroup": {},
                                            "f:runAsGroup": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {}
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"operator-certs\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:optional": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    },
                    {
                        "api_version": "apps/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:fullyLabeledReplicas": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:17:57+00:00"
                    }
                ],
                "name": "stackgres-operator-868bb9f79d",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "apps/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "stackgres-operator",
                        "uid": "dca0d0db-6a31-4596-bf0c-730bf9fab504"
                    }
                ],
                "resource_version": "1075",
                "self_link": null,
                "uid": "53a8b04b-f236-4d96-bc91-f675fa4f46a9"
            },
            "spec": {
                "min_ready_seconds": null,
                "replicas": 1,
                "selector": {
                    "match_expressions": null,
                    "match_labels": {
                        "app": "stackgres-operator",
                        "group": "stackgres.io",
                        "pod-template-hash": "868bb9f79d"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": null,
                        "creation_timestamp": null,
                        "deletion_grace_period_seconds": null,
                        "deletion_timestamp": null,
                        "finalizers": null,
                        "generate_name": null,
                        "generation": null,
                        "labels": {
                            "app": "stackgres-operator",
                            "group": "stackgres.io",
                            "pod-template-hash": "868bb9f79d"
                        },
                        "managed_fields": null,
                        "name": null,
                        "namespace": null,
                        "owner_references": null,
                        "resource_version": null,
                        "self_link": null,
                        "uid": null
                    },
                    "spec": {
                        "active_deadline_seconds": null,
                        "affinity": null,
                        "automount_service_account_token": null,
                        "containers": [
                            {
                                "args": null,
                                "command": null,
                                "env": [
                                    {
                                        "name": "OPERATOR_NAME",
                                        "value": "stackgres-operator",
                                        "value_from": null
                                    },
                                    {
                                        "name": "OPERATOR_NAMESPACE",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "metadata.namespace"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_IMAGE_VERSION",
                                        "value": "1.8.0",
                                        "value_from": null
                                    },
                                    {
                                        "name": "DISABLE_RECONCILIATION",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "INSTALL_CRDS",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "INSTALL_WEBHOOKS",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "INSTALL_CERTS",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PROMETHEUS_AUTOBIND",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "OPERATOR_SERVICE_ACCOUNT",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "spec.serviceAccountName"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_POD_NAME",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "metadata.name"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "OPERATOR_IP",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "status.podIP"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "SG_CONTAINER_REGISTRY",
                                        "value": "quay.io",
                                        "value_from": null
                                    },
                                    {
                                        "name": "SG_IMAGE_PULL_POLICY",
                                        "value": "IfNotPresent",
                                        "value_from": null
                                    },
                                    {
                                        "name": "EXTENSIONS_REPOSITORY_URLS",
                                        "value": "https://extensions.stackgres.io/postgres/repository",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/stackgres/operator:1.8.0",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": {
                                    "_exec": null,
                                    "failure_threshold": 3,
                                    "grpc": null,
                                    "http_get": {
                                        "host": null,
                                        "http_headers": null,
                                        "path": "/q/health/live",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initial_delay_seconds": 10,
                                    "period_seconds": 60,
                                    "success_threshold": 1,
                                    "tcp_socket": null,
                                    "termination_grace_period_seconds": null,
                                    "timeout_seconds": 10
                                },
                                "name": "stackgres-operator",
                                "ports": [
                                    {
                                        "container_port": 8080,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 8443,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readiness_probe": {
                                    "_exec": null,
                                    "failure_threshold": 3,
                                    "grpc": null,
                                    "http_get": {
                                        "host": null,
                                        "http_headers": null,
                                        "path": "/q/health/ready",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initial_delay_seconds": null,
                                    "period_seconds": 2,
                                    "success_threshold": 1,
                                    "tcp_socket": null,
                                    "termination_grace_period_seconds": null,
                                    "timeout_seconds": 1
                                },
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": null
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/etc/operator/certs",
                                        "mount_propagation": null,
                                        "name": "operator-certs",
                                        "read_only": true,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            }
                        ],
                        "dns_config": null,
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": null,
                        "ephemeral_containers": null,
                        "host_aliases": null,
                        "host_ipc": null,
                        "host_network": null,
                        "host_pid": null,
                        "host_users": null,
                        "hostname": null,
                        "image_pull_secrets": null,
                        "init_containers": null,
                        "node_name": null,
                        "node_selector": null,
                        "os": null,
                        "overhead": null,
                        "preemption_policy": null,
                        "priority": null,
                        "priority_class_name": null,
                        "readiness_gates": null,
                        "resource_claims": null,
                        "restart_policy": "Always",
                        "runtime_class_name": null,
                        "scheduler_name": "default-scheduler",
                        "scheduling_gates": null,
                        "security_context": {
                            "fs_group": 1000,
                            "fs_group_change_policy": null,
                            "run_as_group": 1000,
                            "run_as_non_root": true,
                            "run_as_user": 1000,
                            "se_linux_options": null,
                            "seccomp_profile": null,
                            "supplemental_groups": null,
                            "sysctls": null,
                            "windows_options": null
                        },
                        "service_account": "stackgres-operator",
                        "service_account_name": "stackgres-operator",
                        "set_hostname_as_fqdn": null,
                        "share_process_namespace": null,
                        "subdomain": null,
                        "termination_grace_period_seconds": 30,
                        "tolerations": null,
                        "topology_spread_constraints": null,
                        "volumes": [
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "operator-certs",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": {
                                    "default_mode": 420,
                                    "items": null,
                                    "optional": true,
                                    "secret_name": "stackgres-operator-certs"
                                },
                                "storageos": null,
                                "vsphere_volume": null
                            }
                        ]
                    }
                }
            },
            "status": {
                "available_replicas": 1,
                "conditions": null,
                "fully_labeled_replicas": 1,
                "observed_generation": 1,
                "ready_replicas": 1,
                "replicas": 1
            }
        },
        "stackgres-restapi-7867b48c76": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "1",
                    "deployment.kubernetes.io/max-replicas": "2",
                    "deployment.kubernetes.io/revision": "1"
                },
                "creation_timestamp": "2024-02-06T19:18:09+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": 1,
                "labels": {
                    "app": "StackGresConfig",
                    "pod-template-hash": "7867b48c76",
                    "stackgres.io/config-name": "stackgres-operator",
                    "stackgres.io/config-uid": "917865c8-90f9-416e-af45-5e86379bc632",
                    "stackgres.io/restapi": "true"
                },
                "managed_fields": [
                    {
                        "api_version": "apps/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:deployment.kubernetes.io/desired-replicas": {},
                                    "f:deployment.kubernetes.io/max-replicas": {},
                                    "f:deployment.kubernetes.io/revision": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:pod-template-hash": {},
                                    "f:stackgres.io/config-name": {},
                                    "f:stackgres.io/config-uid": {},
                                    "f:stackgres.io/restapi": {}
                                },
                                "f:ownerReferences": {
                                    ".": {},
                                    "k:{\"uid\":\"722a8148-550a-4eca-a9f0-88461eb7bc3d\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:replicas": {},
                                "f:selector": {},
                                "f:template": {
                                    "f:metadata": {
                                        "f:labels": {
                                            ".": {},
                                            "f:app": {},
                                            "f:pod-template-hash": {},
                                            "f:stackgres.io/config-name": {},
                                            "f:stackgres.io/config-uid": {},
                                            "f:stackgres.io/restapi": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {},
                                        "f:containers": {
                                            "k:{\"name\":\"stackgres-adminui\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"GRAFANA_DASHBOARD_LIST\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_DASHBOARD_URLS\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_EMBEDDED\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_SCHEMA\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_TOKEN\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_WEB_HOST\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"SHOW_DEBUG\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":9080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":9443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/nginx/conf.d\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/nginx/nginx.conf\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/nginx/template.d\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/operator/certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/local/bin/start-nginx.sh\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/cache/nginx\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/log/nginx\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"stackgres-restapi\"}": {
                                                ".": {},
                                                "f:env": {
                                                    ".": {},
                                                    "k:{\"name\":\"APP_OPTS\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"DEBUG_RESTAPI\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DEBUG_RESTAPI_SUSPEND\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"EXTENSIONS_REPOSITORY_URLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"GRAFANA_EMBEDDED\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"JAVA_OPTS\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"OPERATOR_VERSION\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"RESTAPI_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"RESTAPI_LOG_LEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"RESTAPI_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            ".": {},
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"RESTAPI_SHOW_STACK_TRACES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"STACKGRES_AUTH_TYPE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"USE_ARBITRARY_USER\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    ".": {},
                                                    "k:{\"containerPort\":8080,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8443,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    ".": {},
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        ".": {},
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:periodSeconds": {},
                                                    "f:successThreshold": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {},
                                                "f:securityContext": {
                                                    ".": {},
                                                    "f:runAsGroup": {},
                                                    "f:runAsNonRoot": {},
                                                    "f:runAsUser": {}
                                                },
                                                "f:terminationMessagePath": {},
                                                "f:terminationMessagePolicy": {},
                                                "f:volumeMounts": {
                                                    ".": {},
                                                    "k:{\"mountPath\":\"/etc/operator/certs\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:dnsPolicy": {},
                                        "f:restartPolicy": {},
                                        "f:schedulerName": {},
                                        "f:securityContext": {
                                            ".": {},
                                            "f:fsGroup": {},
                                            "f:runAsNonRoot": {}
                                        },
                                        "f:serviceAccount": {},
                                        "f:serviceAccountName": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            ".": {},
                                            "k:{\"name\":\"adminui-nginx\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:name": {},
                                                    "f:optional": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"adminui-nginx-etc\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"web-certs\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    ".": {},
                                                    "f:defaultMode": {},
                                                    "f:optional": {},
                                                    "f:secretName": {}
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:18:09+00:00"
                    },
                    {
                        "api_version": "apps/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:fullyLabeledReplicas": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:18:39+00:00"
                    }
                ],
                "name": "stackgres-restapi-7867b48c76",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "apps/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "Deployment",
                        "name": "stackgres-restapi",
                        "uid": "722a8148-550a-4eca-a9f0-88461eb7bc3d"
                    }
                ],
                "resource_version": "1202",
                "self_link": null,
                "uid": "916e1bc6-9ddf-4756-9227-6bbfcf57cdae"
            },
            "spec": {
                "min_ready_seconds": null,
                "replicas": 1,
                "selector": {
                    "match_expressions": null,
                    "match_labels": {
                        "app": "StackGresConfig",
                        "pod-template-hash": "7867b48c76",
                        "stackgres.io/config-name": "stackgres-operator",
                        "stackgres.io/config-uid": "917865c8-90f9-416e-af45-5e86379bc632",
                        "stackgres.io/restapi": "true"
                    }
                },
                "template": {
                    "metadata": {
                        "annotations": null,
                        "creation_timestamp": null,
                        "deletion_grace_period_seconds": null,
                        "deletion_timestamp": null,
                        "finalizers": null,
                        "generate_name": null,
                        "generation": null,
                        "labels": {
                            "app": "StackGresConfig",
                            "pod-template-hash": "7867b48c76",
                            "stackgres.io/config-name": "stackgres-operator",
                            "stackgres.io/config-uid": "917865c8-90f9-416e-af45-5e86379bc632",
                            "stackgres.io/restapi": "true"
                        },
                        "managed_fields": null,
                        "name": null,
                        "namespace": null,
                        "owner_references": null,
                        "resource_version": null,
                        "self_link": null,
                        "uid": null
                    },
                    "spec": {
                        "active_deadline_seconds": null,
                        "affinity": {
                            "node_affinity": null,
                            "pod_affinity": null,
                            "pod_anti_affinity": null
                        },
                        "automount_service_account_token": null,
                        "containers": [
                            {
                                "args": null,
                                "command": null,
                                "env": [
                                    {
                                        "name": "RESTAPI_NAMESPACE",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "metadata.namespace"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "RESTAPI_IP",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "status.podIP"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "RESTAPI_LOG_LEVEL",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "RESTAPI_SHOW_STACK_TRACES",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "APP_OPTS",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "JAVA_OPTS",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "DEBUG_RESTAPI",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "DEBUG_RESTAPI_SUSPEND",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_EMBEDDED",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "USE_ARBITRARY_USER",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "EXTENSIONS_REPOSITORY_URLS",
                                        "value": "https://extensions.stackgres.io/postgres/repository",
                                        "value_from": null
                                    },
                                    {
                                        "name": "STACKGRES_AUTH_TYPE",
                                        "value": "jwt",
                                        "value_from": null
                                    },
                                    {
                                        "name": "OPERATOR_VERSION",
                                        "value": "1.8.0",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/stackgres/restapi:1.8.0",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": {
                                    "_exec": null,
                                    "failure_threshold": 3,
                                    "grpc": null,
                                    "http_get": {
                                        "host": null,
                                        "http_headers": null,
                                        "path": "/q/health/live",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initial_delay_seconds": 5,
                                    "period_seconds": 30,
                                    "success_threshold": 1,
                                    "tcp_socket": null,
                                    "termination_grace_period_seconds": null,
                                    "timeout_seconds": 10
                                },
                                "name": "stackgres-restapi",
                                "ports": [
                                    {
                                        "container_port": 8080,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "resthttp",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 8443,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "resthttps",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readiness_probe": {
                                    "_exec": null,
                                    "failure_threshold": 3,
                                    "grpc": null,
                                    "http_get": {
                                        "host": null,
                                        "http_headers": null,
                                        "path": "/q/health/ready",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initial_delay_seconds": null,
                                    "period_seconds": 2,
                                    "success_threshold": 1,
                                    "tcp_socket": null,
                                    "termination_grace_period_seconds": null,
                                    "timeout_seconds": 1
                                },
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": null
                                },
                                "security_context": {
                                    "allow_privilege_escalation": null,
                                    "capabilities": null,
                                    "privileged": null,
                                    "proc_mount": null,
                                    "read_only_root_filesystem": null,
                                    "run_as_group": 185,
                                    "run_as_non_root": true,
                                    "run_as_user": 185,
                                    "se_linux_options": null,
                                    "seccomp_profile": null,
                                    "windows_options": null
                                },
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/etc/operator/certs",
                                        "mount_propagation": null,
                                        "name": "web-certs",
                                        "read_only": true,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": null,
                                "command": [
                                    "/bin/sh",
                                    "-ex",
                                    "/usr/local/bin/start-nginx.sh"
                                ],
                                "env": [
                                    {
                                        "name": "SHOW_DEBUG",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_DASHBOARD_LIST",
                                        "value": "archiving.json\nconnection-pooling.json\ncurrent-activity.json\ndb-info.json\ndb-objects.json\ndb-os.json\nqueries.json\nreplication.json",
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_EMBEDDED",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_DASHBOARD_URLS",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_SCHEMA",
                                        "value": "http",
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_WEB_HOST",
                                        "value": "localhost:8080",
                                        "value_from": null
                                    },
                                    {
                                        "name": "GRAFANA_TOKEN",
                                        "value": "unknown",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/stackgres/admin-ui:1.8.0",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "stackgres-adminui",
                                "ports": [
                                    {
                                        "container_port": 9080,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "http",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 9443,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "https",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": null
                                },
                                "security_context": {
                                    "allow_privilege_escalation": null,
                                    "capabilities": null,
                                    "privileged": null,
                                    "proc_mount": null,
                                    "read_only_root_filesystem": null,
                                    "run_as_group": 996,
                                    "run_as_non_root": true,
                                    "run_as_user": 998,
                                    "se_linux_options": null,
                                    "seccomp_profile": null,
                                    "windows_options": null
                                },
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/etc/operator/certs",
                                        "mount_propagation": null,
                                        "name": "web-certs",
                                        "read_only": true,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/local/bin/start-nginx.sh",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx",
                                        "read_only": true,
                                        "sub_path": "start-nginx.sh",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/nginx/nginx.conf",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx",
                                        "read_only": true,
                                        "sub_path": "nginx.conf",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/nginx/template.d",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/nginx/conf.d",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx-etc",
                                        "read_only": null,
                                        "sub_path": "etc/nginx/conf.d",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/cache/nginx",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx-etc",
                                        "read_only": null,
                                        "sub_path": "var/cache/nginx",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/run",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx-etc",
                                        "read_only": null,
                                        "sub_path": "var/run",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/log/nginx",
                                        "mount_propagation": null,
                                        "name": "adminui-nginx-etc",
                                        "read_only": null,
                                        "sub_path": "var/log/nginx",
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            }
                        ],
                        "dns_config": null,
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": null,
                        "ephemeral_containers": null,
                        "host_aliases": null,
                        "host_ipc": null,
                        "host_network": null,
                        "host_pid": null,
                        "host_users": null,
                        "hostname": null,
                        "image_pull_secrets": null,
                        "init_containers": null,
                        "node_name": null,
                        "node_selector": null,
                        "os": null,
                        "overhead": null,
                        "preemption_policy": null,
                        "priority": null,
                        "priority_class_name": null,
                        "readiness_gates": null,
                        "resource_claims": null,
                        "restart_policy": "Always",
                        "runtime_class_name": null,
                        "scheduler_name": "default-scheduler",
                        "scheduling_gates": null,
                        "security_context": {
                            "fs_group": 185,
                            "fs_group_change_policy": null,
                            "run_as_group": null,
                            "run_as_non_root": true,
                            "run_as_user": null,
                            "se_linux_options": null,
                            "seccomp_profile": null,
                            "supplemental_groups": null,
                            "sysctls": null,
                            "windows_options": null
                        },
                        "service_account": "stackgres-restapi",
                        "service_account_name": "stackgres-restapi",
                        "set_hostname_as_fqdn": null,
                        "share_process_namespace": null,
                        "subdomain": null,
                        "termination_grace_period_seconds": 30,
                        "tolerations": null,
                        "topology_spread_constraints": null,
                        "volumes": [
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "web-certs",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": {
                                    "default_mode": 420,
                                    "items": null,
                                    "optional": false,
                                    "secret_name": "stackgres-operator-web-certs"
                                },
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": {
                                    "default_mode": 420,
                                    "items": null,
                                    "name": "stackgres-restapi-nginx",
                                    "optional": false
                                },
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "adminui-nginx",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": null,
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "adminui-nginx-etc",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            }
                        ]
                    }
                }
            },
            "status": {
                "available_replicas": 1,
                "conditions": null,
                "fully_labeled_replicas": 1,
                "observed_generation": 1,
                "ready_replicas": 1,
                "replicas": 1
            }
        }
    },
    "role_binding": {
        "stackgres-backup": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-backup",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1607",
                "self_link": null,
                "uid": "9dac1b94-02f8-482b-875b-f3b3bdb8f8c1"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "stackgres-backup"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "stackgres-backup",
                    "namespace": "default"
                }
            ]
        },
        "stackgres-patroni": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:roleRef": {},
                            "f:subjects": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-patroni",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1606",
                "self_link": null,
                "uid": "60a9b955-1350-41ee-a0c4-a725fe89f2d4"
            },
            "role_ref": {
                "api_group": "rbac.authorization.k8s.io",
                "kind": "Role",
                "name": "stackgres-patroni"
            },
            "subjects": [
                {
                    "api_group": null,
                    "kind": "ServiceAccount",
                    "name": "stackgres-patroni",
                    "namespace": "default"
                }
            ]
        }
    },
    "role": {
        "stackgres-backup": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-backup",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1605",
                "self_link": null,
                "uid": "5b782656-59b1-4823-a83e-a110067b7d6a"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/exec"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgclusters"
                    ],
                    "verbs": [
                        "get",
                        "patch"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgbackups"
                    ],
                    "verbs": [
                        "list",
                        "get",
                        "create",
                        "patch",
                        "update",
                        "delete"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgobjectstorages"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "snapshot.storage.k8s.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "volumesnapshots"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "watch"
                    ]
                }
            ]
        },
        "stackgres-patroni": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "rbac.authorization.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:rules": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-patroni",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1603",
                "self_link": null,
                "uid": "7755583e-bdd4-4a38-8d39-5090a7b6a302"
            },
            "rules": [
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "configmaps"
                    ],
                    "verbs": [
                        "create",
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "endpoints/restricted"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "secrets"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "patch",
                        "update",
                        "watch"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "pods/exec"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "services"
                    ],
                    "verbs": [
                        "create"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "events"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "create",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        ""
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "persistentvolumeclaims"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "patch",
                        "update"
                    ]
                },
                {
                    "api_groups": [
                        "apps"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "statefulsets"
                    ],
                    "verbs": [
                        "get"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgbackups"
                    ],
                    "verbs": [
                        "list",
                        "get",
                        "create",
                        "patch",
                        "update",
                        "delete"
                    ]
                },
                {
                    "api_groups": [
                        "stackgres.io"
                    ],
                    "non_resource_ur_ls": null,
                    "resource_names": null,
                    "resources": [
                        "sgclusters",
                        "sgpgconfigs",
                        "sgobjectstorages",
                        "sgpoolconfigs",
                        "sginstanceprofiles",
                        "sgdistributedlogs",
                        "sgdbops",
                        "sgscripts",
                        "sgshardedclusters"
                    ],
                    "verbs": [
                        "get",
                        "list",
                        "watch",
                        "patch",
                        "update"
                    ]
                }
            ]
        }
    },
    "secret": {
        "sh.helm.release.v1.stackgres-operator.v1": {
            "api_version": null,
            "data": {
                "release": ""
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:17:37+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "modifiedAt": "1707247060",
                    "name": "stackgres-operator",
                    "owner": "helm",
                    "status": "deployed",
                    "version": "1"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                ".": {},
                                "f:release": {}
                            },
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:modifiedAt": {},
                                    "f:name": {},
                                    "f:owner": {},
                                    "f:status": {},
                                    "f:version": {}
                                }
                            },
                            "f:type": {}
                        },
                        "manager": "Helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:40+00:00"
                    }
                ],
                "name": "sh.helm.release.v1.stackgres-operator.v1",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "1026",
                "self_link": null,
                "uid": "44aadd47-7e1c-4f94-affe-917db3e8defc"
            },
            "string_data": null,
            "type": "helm.sh/release.v1"
        },
        "stackgres": {
            "api_version": null,
            "data": {
                "MD5SUM": "RDMxOTgzQkQwQjJCQzk0NjNCNzAzQzA0RTYxNTVCOTE=",
                "PATRONI_REPLICATION_PASSWORD": "YTVkYy1jY2QyLTQwZmEtYjc1",
                "PATRONI_REPLICATION_USERNAME": "cmVwbGljYXRvcg==",
                "PATRONI_RESTAPI_PASSWORD": "NjA0YS1lMjM4LTQ1ZmItYjJi",
                "PATRONI_RESTAPI_USERNAME": "c3VwZXJ1c2Vy",
                "PATRONI_SUPERUSER_PASSWORD": "MGZlZS1kNWU1LTRjYzItODEz",
                "PATRONI_SUPERUSER_USERNAME": "cG9zdGdyZXM=",
                "PATRONI_authenticator_OPTIONS": "c3VwZXJ1c2Vy",
                "PATRONI_authenticator_PASSWORD": "YWIyNy1mNjY0LTQ5YzMtOTNj",
                "PATRONI_authenticator_USERNAME": "YXV0aGVudGljYXRvcg==",
                "PGBOUNCER_ADMIN_USERNAME": "cGdib3VuY2VyX2FkbWlu",
                "PGBOUNCER_STATS_USERNAME": "cGdib3VuY2VyX3N0YXRz",
                "authenticator-password": "YWIyNy1mNjY0LTQ5YzMtOTNj",
                "authenticator-username": "YXV0aGVudGljYXRvcg==",
                "pgbouncer-admin-password": "ZGMyYi05MzFkLTQxYzQtOWVl",
                "pgbouncer-stats-password": "ZGM0Ni0xODNhLTQ1ZDEtYTRh",
                "replication-password": "YTVkYy1jY2QyLTQwZmEtYjc1",
                "replication-username": "cmVwbGljYXRvcg==",
                "restapi-password": "NjA0YS1lMjM4LTQ1ZmItYjJi",
                "restapi-username": "c3VwZXJ1c2Vy",
                "superuser-password": "MGZlZS1kNWU1LTRjYzItODEz",
                "superuser-username": "cG9zdGdyZXM="
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:MD5SUM": {},
                                "f:PATRONI_REPLICATION_PASSWORD": {},
                                "f:PATRONI_REPLICATION_USERNAME": {},
                                "f:PATRONI_RESTAPI_PASSWORD": {},
                                "f:PATRONI_RESTAPI_USERNAME": {},
                                "f:PATRONI_SUPERUSER_PASSWORD": {},
                                "f:PATRONI_SUPERUSER_USERNAME": {},
                                "f:PATRONI_authenticator_OPTIONS": {},
                                "f:PATRONI_authenticator_PASSWORD": {},
                                "f:PATRONI_authenticator_USERNAME": {},
                                "f:PGBOUNCER_ADMIN_USERNAME": {},
                                "f:PGBOUNCER_STATS_USERNAME": {},
                                "f:authenticator-password": {},
                                "f:authenticator-username": {},
                                "f:pgbouncer-admin-password": {},
                                "f:pgbouncer-stats-password": {},
                                "f:replication-password": {},
                                "f:replication-username": {},
                                "f:restapi-password": {},
                                "f:restapi-username": {},
                                "f:superuser-password": {},
                                "f:superuser-username": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:type": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1589",
                "self_link": null,
                "uid": "40bf0e0c-2a32-4ccb-8dcd-60a13e542336"
            },
            "string_data": null,
            "type": "Opaque"
        },
        "stackgres-backup": {
            "api_version": null,
            "data": {
                "MD5SUM": "RDQxRDhDRDk4RjAwQjIwNEU5ODAwOTk4RUNGODQyN0U="
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:MD5SUM": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:type": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-backup",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1590",
                "self_link": null,
                "uid": "183df3aa-c0d3-42de-81ea-dec6a68557e9"
            },
            "string_data": null,
            "type": "Opaque"
        },
        "stackgres-binding": {
            "api_version": null,
            "data": {
                "host": "c3RhY2tncmVzLmRlZmF1bHQ=",
                "password": "MGZlZS1kNWU1LTRjYzItODEz",
                "port": "NTQzMg==",
                "provider": "c3RhY2tncmVz",
                "type": "cG9zdGdyZXNxbA==",
                "uri": "cG9zdGdyZXNxbDovL3Bvc3RncmVzOjBmZWUtZDVlNS00Y2MyLTgxM0BzdGFja2dyZXMuZGVmYXVsdDo1NDMy",
                "username": "cG9zdGdyZXM="
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:stringData": {
                                "f:host": {},
                                "f:password": {},
                                "f:port": {},
                                "f:provider": {},
                                "f:type": {},
                                "f:uri": {},
                                "f:username": {}
                            },
                            "f:type": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-binding",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1588",
                "self_link": null,
                "uid": "28ad8f66-0315-4084-a4d1-84061859338c"
            },
            "string_data": null,
            "type": "servicebinding.io/postgresql"
        },
        "stackgres-operator-certs": {
            "api_version": null,
            "data": {
                "MD5SUM": "Q0M0REU4REREQTQ0MkRDRUM1MjkzMDNGQzZBOTNBMDU=",
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUYyakNDQThLZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREJJTVJVd0V3WURWUVFLRXd4emVYTjBaVzA2Ym05a1pYTXhMekF0QmdOVkJBTVRKbk41YzNSbGJUcHViMlJsT25OMFlXTnJaM0psY3kxdmNHVnlZWFJ2Y2k1a1pXWmhkV3gwTUI0WERUSTBNREl3TmpFNU1UYzFORm9YRFRJMk1ESXdOVEU1TVRjMU5Gb3dTREVWTUJNR0ExVUVDaE1NYzNsemRHVnRPbTV2WkdWek1TOHdMUVlEVlFRREV5WnplWE4wWlcwNmJtOWtaVHB6ZEdGamEyZHlaWE10YjNCbGNtRjBiM0l1WkdWbVlYVnNkRENDQWlJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dJUEFEQ0NBZ29DZ2dJQkFOR3hMQ1ZGbXU4UVRjZXNKWVRGNDloQ01UMDQzbkJYUTVXS3d3SGpISHBmMWg0NFp2ZFJscXd0WXhPQ1czb1d0TVhnbjdVLzJLMTJWaUJmM3Z2ZTdpbjdOTUpaUEU0Y3p0VlF2NXdSdllZSGRyT0VmSnBUbmEweTB1czJmVFZjcmRrd1NBZzFxN01LUm9oZnpvdWMvTkJYajk2ZllycWx1VXBQVGtFT1dPeGZ3UnV3dkRRVHlHYXYyVWpnNnJjVlAzR0xrN2tWZS9vcGFYWkZlNGZnSi9INnQ0NzR4U01OTHoxcm5iV0MxSDJaN2dWNXBYOFJPTzQvZmZkVEhXM01MWjVuQ25CNUFMdm5XdURzb05ERzR2cE9BUTcyVm9sVlozSjVCMU1TU2RuWlNiT1Frbld1T3ZDdnE2alBVNjBhZENNWmVLbEM1N28xVWlvZTEvLzNBWVNON0Jzc0doejhrODJDYzZ5YVJOWmZBVXR5bEFheGFSWGl5RW9lNjVkUXVLZmM3NFNyTGFwelBCZ3ZmM0RleThORUY1dTBWMFpRNllCMkFRV09sdzVnWGV2Tkp5MHZEeVROYUtlVk1PeGRHN1BlUDRMNXBGRVNoRXFuME9GQWxDNHNTSTJOSlpkVXNGV2tHdHJPVDBscmI1bWJhUm9ad1VwbGtkMTQ4UXJTRzZJTUlhQVU2YTJmZ3ZPT3dKV1VzMUkwSlNKSlhGck9TbzUxNGcwejQ1UTcvMzc1ZmFpaG5FcStyaytxdFBVbGhMN1FzTGxua2FtR2Z3YUZuRm9WSENLUzdTQ0g0QVZHTEltdVdiUEZiMGFzVDUwQTQyZytUOHg4MlJ6T0JJRmRKK3hmMWhGQldpclBaQVdpRkNVQjl5Mm1qYW8zVUJHcXU4TEYzaTVNK09sbEFnTUJBQUdqZ2M0d2djc3dEd1lEVlIwVEFRSC9CQVV3QXdFQi96QU9CZ05WSFE4QkFmOEVCQU1DQmVBd0hRWURWUjBsQkJZd0ZBWUlLd1lCQlFVSEF3RUdDQ3NHQVFVRkJ3TUNNSUdJQmdOVkhSRUVnWUF3Zm9JU2MzUmhZMnRuY21WekxXOXdaWEpoZEc5eWdocHpkR0ZqYTJkeVpYTXRiM0JsY21GMGIzSXVaR1ZtWVhWc2RJSWVjM1JoWTJ0bmNtVnpMVzl3WlhKaGRHOXlMbVJsWm1GMWJIUXVjM1pqZ2l4emRHRmphMmR5WlhNdGIzQmxjbUYwYjNJdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oYkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQWdFQUx1Q2lFUUt4SjVPS0RPWTg2N2JVNng2SE4wMTlMYllzajRESW11S1JvL3RqS2FDM0JseVJSMCtGM1prWWo3MmdTMHp1UUFVVjZCa0RTaU1uSUlpNGhQQlhqdDY0Q0FBbXpSYjYwa0xoenI2WlMzcDNzeVFaLzQzOS9oTktESThTbUxZbEtVMnprOGNyMjRPVjRFaUtGYTl5TW8zKzN2QzBkRGIxU1pmVitLVTdVQzZkWkNmcVAveGhoMXNGU2QxYVUrTXZxTTFEM1hsbkJ3c0dQeXdmNXFvV1F5RjE1V2dnTkc5ZVliTmZ1SmpYeWRROUVwRmFlL1NVOTlhVEdLa1VwVnVWcTNCKzJQekNBY0Ircy9BUGtIdUpYalkxVEtsVmN3Y01DTktsRGZ2K0FZWHJoaTlSNjRsdVFqNVZlbGtqZHNia2VvSzRJdWVTNGlGU0xSSldodWVOeVd1bUdKSHlKWTFqRUp1a2V0eVRReWRyUWEwVFN6U0JMaUV6N2FEZVVIMXNmZHZuU3VvSDFRWlYwd0ZOdHlvK25zbkJzZElnVFlvVkRUdXBOYUhCRHdnK2NkdnJhTG4vejcwV3hydlh0NnI3b1lLVldEbndtU2EzUzJ1TFMxbHoyWDJ3cGorRUpIV0pxaXc4Uk5HaDNFRktTM2ZWdktIbGoxT1FZYUZ5Sk42NW9YdEpONmtHYngxL2hMNG1tcW03dVVma2d5ZUlERTRIeGFjUHhmUEg2YWNKditFNkRXa2JHOWtmUFJkV1F4b3g5WVhnVm8zM2VCWjJ5M2M2NVFCQitBeUErUEVrcGFvb3p4bTVXOEVwTVVDMlJmRmMrcU9nRDd5NmRwVTlNK0o5YS8rblFQTE9sb3lEb1Q4bi93Qm5tZHBrSXNKaVNSN203NmsvSzY0PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "tls.key": "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpSQUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1M0d2dna3FBZ0VBQW9JQ0FRRFJzU3dsUlpydkVFM0hyQ1dFeGVQWVFqRTlPTjV3VjBPVmlzTUI0eHg2WDlZZU9HYjNVWmFzTFdNVGdsdDZGclRGNEorMVA5aXRkbFlnWDk3NzN1NHArelRDV1R4T0hNN1ZVTCtjRWIyR0IzYXpoSHlhVTUydE10THJObjAxWEszWk1FZ0lOYXV6Q2thSVg4NkxuUHpRVjQvZW4ySzZwYmxLVDA1QkRsanNYOEVic0x3MEU4aG1yOWxJNE9xM0ZUOXhpNU81Rlh2NktXbDJSWHVINENmeCtyZU8rTVVqRFM4OWE1MjFndFI5bWU0RmVhVi9FVGp1UDMzM1V4MXR6QzJlWndwd2VRQzc1MXJnN0tEUXh1TDZUZ0VPOWxhSlZXZHllUWRURWtuWjJVbXprSkoxcmpyd3I2dW96MU90R25RakdYaXBRdWU2TlZJcUh0Zi85d0dFamV3YkxCb2MvSlBOZ25Pc21rVFdYd0ZMY3BRR3NXa1Y0c2hLSHV1WFVMaW4zTytFcXkycWN6d1lMMzl3M3N2RFJCZWJ0RmRHVU9tQWRnRUZqcGNPWUYzcnpTY3RMdzhreldpbmxURHNYUnV6M2orQythUlJFb1JLcDlEaFFKUXVMRWlOalNXWFZMQlZwQnJhems5SmEyK1ptMmthR2NGS1paSGRlUEVLMGh1aURDR2dGT210bjRMempzQ1ZsTE5TTkNVaVNWeGF6a3FPZGVJTk0rT1VPLzkrK1gyb29aeEt2cTVQcXJUMUpZUyswTEM1WjVHcGhuOEdoWnhhRlJ3aWt1MGdoK0FGUml5SnJsbXp4VzlHckUrZEFPTm9Qay9NZk5rY3pnU0JYU2ZzWDlZUlFWb3F6MlFGb2hRbEFmY3RwbzJxTjFBUnFydkN4ZDR1VFBqcFpRSURBUUFCQW9JQ0FBcS9yTk1JU0N4QytrbXp2cmZNbmRmcGNZSG5zSkRtQzIvV3dIdmM0WENnYjgwcEsyTFJzVDFVKzkzQ1dLemZweGRlWXVTYllXMW5xSHUvOUx1VnJuUVFEVzJ3SkI2ZlV3T3RjMXRnZkorUXk1UGhYbjlaNExaQjZhL203aU84dGtJOW9mQnJaSzdDTXhWZ2drTlFvaTNCYkJjaEhBaXRyTnVnRlhuUmJxaEhNcXhMVEZjN0RTd2t3S2pNczRISkJ6NGVrb0NMc01rRkFHcFhCUTQ3WkxETFVrZDBGeElSNWZJM0RXUzFnNGRUNU5iNm0vSWtnNmtxeVRlZnZVUFlraDFFdjB6WVBXOHhLV1pvTkdJZlV2K2dkc3RzOHk4SnpFcE5zbEE0WjVLM1lhMlRzREZ6c0UvRFZMTi9JZnVGWko4SXh3UnE4UFM4eXBNNXdlMGlhYU9jb0xtSTdERDl0d3ZZdEtsRFZtWUVxeisxNXliVlVoTWRrM2trY2NEMHVxSjNkWHpCaG91K3kwVjNjMVgrU2NacXJGbGFlTVJVNlgzclQzRmNGSmRJTzZSb0hyZEZmVDJLT3pReFVTVC9lMmdVMmNoOUh5OEFyaUN4cTRjNWFJa012WHdMZy9zb3RDYVN5Y3cvVUJCNll5di9RN29nWENub3cwTzY3NWhSQ1VzdnZnOHlOc0N4R3hhazJ2UUloQ0swVFlZc1hvbVpHQVlLRVl0UjdqbUFlNjR5cWh3ZWRtYWZjS3FlWjlvWVlzUWhkZE5CUThHMXZRbDgyV1BIc01BNVp0Z2IweDdTWTFsckNobmVOeXpEYyt4dXJwdkpIZWRlUjVZM0tlemIwbVR4N3BDQXMwcCsxUFdvNzhQL0tOalNJOHREV3MxY29rMjFNc0VnQ2t6TkFvSUJBUURaekJVYVJUcTRyQ2VRZ1VYaU55WVgrWTdtMWpGcTNPUWJRYUVZMGNrc0RmMU80ZVprV0hscFlOa3ZYa09wSjdLN3VhSHBOb3g1UFI4aUgyVmZSQUVYc1hENzYrUzZDUkdkQ0YrQ3MxVTFBYnkyWnhobjJxN1RrMGpEU1lwRzM1dnZacGM5RWJ6ZXBWVUNmVWFCdTM1THIxa0dWTUJFUlk0R1BDY3crK0U0UU1IcEF5UURGbkpxTnFraVRjLzJwUU1ONXFoeXV5eDRTZFBMNk5jWW5WRHNxNDQxUWd2aWM4MUN6TloyblJ1VHhnNmtIVFFoMTJGY2VUcWxNYW9RaDhra2ZPTEVPWlNQbTgrUjBTQ0k5dm9rVXJZQ0VNRnB6Z05WOUk1VHgxbEN4MnJUV1BUdytHRVVmamFhTUorb0JQandiQjk5dXVYd1c3c0NPd1R4aElFekFvSUJBUUQyZVNPOWF4YXpaMkpxclNvakJpbTU5TU5raGF6eFg2eGJmLzJ4WHFuSm5tWFB5bFEwa1FkN08wb0NwT1pPc3Y0YVZMemYxTGhBWEZrb2pmcVJtZGtzZUFDcVFGL0djbWVLbXlQR1RuanF0Z2pCSWZGT09EWXZBVDJtOEZkL21WakNTbURNNWRuVWE4YVpVNlMwZnZXL3AyRmtucFgzc1M0YTRBUHUyYTNuZGQ5MnZmQlNMUDNjQk5DclJXeDcyNTNkZzBCK3piZVhwTFhQYzYvN1RhN0hwODMxOExDUDEyN1pmNC9jY0JZbUVGYnY1K3Bibk5MRnFuaXZpSlo3d0xEK1ZrY2FCSVN2Z3RPdnVHQ2MwYkFjMHJXUnFqNDg4Z3NLQzV5TWJQc0tPNkEwSlFRYlRIZG5zYUhsT3F4SU43eHFyQy80UTJFMGprYUF2WncyWXhzSEFvSUJBUURKeUVoczFHTDVJWlp1VFRhZnhSUm45ZkF0Y1pqTE51ZW5VUUNkN0E4RDM5b2xzU2t4SXI4cG9HN1hjZkFoMGdQSDVNNWJNUXlvYnJaZmVOTUVsZzZsRXVKb3BENS9GVlBhTngyMkM4d1BsaEp1czhscXZySm1sdmc4NWU5VWhtc0VPL28ydkM1TjRNT0gwT1QzNE91NzF6TVZxSU9SUFJlK014RGtVeGh3YzU2ejhSTDJRVit6Zy96aktWQlpaTHdWcnZPMWlEQkZLYkV1SkFUVWF6dkVhWlVSUnFXWUlrMnphKy91YU5SWjdvODJBVkNCWWZoMEltVHhFN2hLSkdONGlMUFh0TGtzNitBOWFwRklFL25nbVRqRFpSNnNsZytGSFZTWHpnT20yUGJoNUhMYXBtUGJCcXd6NG9Tb3VDS2pMS2xvWlRZUG9BejhuZzJRYllEOUFvSUJBUURQUEl3UWVEcGVIazloNHJmTE95TmFkN0xTa3BNWFlKcExWUks2VUIzeXFIeHllbXpTeGg3RVB0Vzc0MnJDUVQzbVpkbHBXaktSNnhRTVJWU3BsL0pDc2FQZGdzTUUyS3kybmpzMlFrVHBGS1hIdmdKbkFseU1xVDV0WHlneTRYei80QW9FUGo4cG5IVWY5blJHVDNuUjY2cTRMNTlvNUZFZng3dUcyUUNmM1R4SFd1ejJLMTVINE1TVFBZdzVtQzdrVWJlbzVzKzNjWVp0SjVpUWRJREEzeGNOODVLQlgyS1UvZXk0TElaeStzb2ViYUZmNWp4U2QwT0NWQll6ZDVGYVNMRC83MHloUmg4M1lJL2JTM1FJeUNKaW1BSTh2RWNMNnpkMTJ5dzVMbWxGYnRwRkdjWk1LYzgyTGw4dFdhL1RBWFJVQ2xOeEhTK3FqOE1JOTh1QkFvSUJBUUNvV2NKVVVZODk1WjBDOTZRVHIxT0pYL2lSRWJTK1pqdFc1OE5aakxDemhDUVZHODNYcmVaUkZJNk56dVh2UVFWNHlaZEhCU0FucE5xQUlSR3RvUlNNWXl3Z3dHSUFRYjd2MGVqRWs5ZlRZb1haRnI2c0pmc01FZnA3UG9ZRzJRb3UyMXNKQnZ1NExIZHRGM3phZGFYSzhJSFg1VUpzNE5EK2JCTHJzZDJLd2tOeVZqZ24vbWpkTE9GNWx2YUlPREtzREZEM3U3OUxmNUtaWEE4NWJVUVV5ZStMY3J0c2o4eUwvazlrNERnbm9HdUozWDB1MlBlc3kyZVRPTUYzb2RMaU0ySnpYb2NqeXRKQ0R5UXJzamxscmVWWXFidmpwSEFlSDVmcnFLMjBONVBtSVI2L3hSQzZyUzYxOW1abFBwS1JhZUdTMVBVNjRYSmthZFpGQlFXOQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:17:54+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresConfig",
                    "stackgres.io/config-name": "stackgres-operator"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:MD5SUM": {},
                                "f:tls.crt": {},
                                "f:tls.key": {}
                            },
                            "f:metadata": {
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/config-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"917865c8-90f9-416e-af45-5e86379bc632\"}": {}
                                }
                            },
                            "f:type": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:18:09+00:00"
                    },
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                ".": {},
                                "f:MD5SUM": {},
                                "f:tls.crt": {},
                                "f:tls.key": {}
                            },
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:app": {},
                                    "f:stackgres.io/config-name": {}
                                }
                            },
                            "f:type": {}
                        },
                        "manager": "fabric8-kubernetes-client",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:54+00:00"
                    }
                ],
                "name": "stackgres-operator-certs",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGConfig",
                        "name": "stackgres-operator",
                        "uid": "917865c8-90f9-416e-af45-5e86379bc632"
                    }
                ],
                "resource_version": "1124",
                "self_link": null,
                "uid": "d69124f5-c40f-495b-ae15-6abb9879e7ea"
            },
            "string_data": null,
            "type": "kubernetes.io/tls"
        },
        "stackgres-operator-web-certs": {
            "api_version": null,
            "data": {
                "MD5SUM": "MkYyRjUwMzA2RTAxN0Y4NTVDQkY5RTM2QzZBQjlGQ0U=",
                "jwt-rsa.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUUrRENDQXVDZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFVTVJJd0VBWURWUVFERXdsemRHRmphMmR5WlhNd0hoY05NalF3TWpBMk1Ua3hPREE1V2hjTk1qWXdNakExTVRreE9EQTNXakFVTVJJd0VBWURWUVFERXdsemRHRmphMmR5WlhNd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUURBNVVVOC9PUU8ybjltdVRub1hwYkZwZGZlWWxaVVFyd0xib08vemxiTTRqNWhRbldwc2d6TEJ1eVAzWUFPeCtmNkJtek1BZDZzMVE5Qm9tcXA5eittNWtlREh3d3lVWm5MVGRJK29kYjlJTEkxNHdnTUZyV0d3U2k1MGR2Z05lZWlzTG82VkdQckQwMVZIT3hYNFBuVVNOZlNzaFQvejNpSFIyWkVyMkYrdkpEVG00UktjNHphS204U0s3aGU3UEM2NDByclIvVjlWVlZKaThrUFZNblVYUXdLT0lwRmJWYllWN0ZQWWEyTDJYcUh6UWJoWkJpOGtLTm10SGVEMzVCcFpUcXNBVzRjWjJ4TW1CM3N1NnRqYXp0SG54cDQ3M3d2YzRHeHlaZG5VV09FQjJCZXRGZndoNmJOTHVkR2hoanRDVVhXOEp6ZzdLSlVaN0xuaFhjQ0hEMjY3WURyNVdjS1BNdmpsdzN5YUVjYU42SDFNMjBPWXk0NlBLOUtWY3lqTGZoVkpMQWRNTDRsYnh3NVJaZzl3enl1MzlCYkxIc2oxdHlqQURPSkh3UWpabnkxbnYvamF4S2trWjRsN2N2ZnJpYitZNUJTN2Q4bWliTmVKQlNmUjFoS21VMzJLQWJpSjQ1dXN4OUQ1WkY0cWhGVnlzL3YvZGJSQWtzZG45eEt6NHkxYSt1RDRUNFlFK3lPMFVMdmRXWDFSbTFKY0gzTUdueUpxTDRFMUpZdWhvRjROUmZqMUZuc1ExZCtRWllIMHNIeHp5VWkwSzNST0dwTTVxZlBjUWJjeUNqRFNlSUZ6MmhyM1d3U0trWEpjYkxuSnRHMmRpZ0J4b1dYUjdDMWZLUHdwYW5vQkdBbmlXYUV2dzlkL0tSTWJJQjhLVU9xNVdtdkRURm1Rd0lEQVFBQm8xVXdVekFNQmdOVkhSTUJBZjhFQWpBQU1BNEdBMVVkRHdFQi93UUVBd0lGNERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdGQVlEVlIwUkJBMHdDNElKYzNSaFkydG5jbVZ6TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFBbFJTTk1kaVJIY2hzbUNnSjl0bjFPTG0vS1NmenhGRXVHY1J4N0FFZDJuLzlyQjZFeTJadFR3UWdXMnV4Q0ZJVG1JTTdVMzNhSHZwVUMxM1BYUlN1ZkhMbUNTNVZmNzhqMVNORmdrb3dJV1Q3VU81eXhlZGlhVnpORURnaEdCOUo0Ylg3OTZiaGF5dStReVhiRE5MWDR2YkZOaWFsZkwweGgxTEg0NGR1cmkrM2lvNnJCdkNCaTlmSUJKTjJjL3E0Ky9CNG1WNEYyTlNKWGwyQnh0UEJqL0MrS0FiUXJJdFdoQzl0QVM5ckZwRmFzSUdTcFFqT3I0eDA4bzVEMm85OTNwUWowdjBPMjQvOG5kb1Q2cWp6NHR3UXlMT1ZaUXYrb012bFFmS3FZbzNlaTdWeGpjd2NUd0M3ODd1dU9NZVVxMTJrRyt1b1NNb3VrSkR5OTlObjhQcmVqbDZOaDJFVWlHalgxYUgwT1c2c2h6V0NXV1Qvb3BuQWlPZjUvRWdjcm0rV2lQVStwUHlQckVOMmxSc0kzUTRtSUl2dmNqRWdFMUtEVUE0SncxbU44N2VMdzZaeU9yTTQvSVZNTVZlMGxadEFYSmlOMm1nMFU3eGZyUEdleGlhNktsTVpsT2R2TUpuYW1xYWtYaytvQzQvMVF5UERmaTZPN2dMSDVSY3VCTCtNLzJpQmN5akxuc1hjT2hVVWQ0eWRhMGNzQW11UkdGL0pFVUY4UDRYQkc1QXBzT295UUlVcFJaVE9iSVJPaEoxaVpWWS9xWTAyQ1d2bTY2NDVzV09TSk5zMEJ4WFBwbC9DcmdmRHhjWlpzTmY5bndqSXAwZUFQMTFTMmcrTnZLNUhTL0Jac3F2WFZSeVU1T1J6TnVHeTR4YXpxWG9QVXVNdlJMUWZLU3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "jwt-rsa.key": "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRREE1VVU4L09RTzJuOW11VG5vWHBiRnBkZmVZbFpVUXJ3TGJvTy96bGJNNGo1aFFuV3BzZ3pMQnV5UDNZQU94K2Y2Qm16TUFkNnMxUTlCb21xcDl6K201a2VESHd3eVVabkxUZEkrb2RiOUlMSTE0d2dNRnJXR3dTaTUwZHZnTmVlaXNMbzZWR1ByRDAxVkhPeFg0UG5VU05mU3NoVC96M2lIUjJaRXIyRit2SkRUbTRSS2M0emFLbThTSzdoZTdQQzY0MHJyUi9WOVZWVkppOGtQVk1uVVhRd0tPSXBGYlZiWVY3RlBZYTJMMlhxSHpRYmhaQmk4a0tObXRIZUQzNUJwWlRxc0FXNGNaMnhNbUIzc3U2dGphenRIbnhwNDczd3ZjNEd4eVpkblVXT0VCMkJldEZmd2g2Yk5MdWRHaGhqdENVWFc4SnpnN0tKVVo3TG5oWGNDSEQyNjdZRHI1V2NLUE12amx3M3lhRWNhTjZIMU0yME9ZeTQ2UEs5S1ZjeWpMZmhWSkxBZE1MNGxieHc1UlpnOXd6eXUzOUJiTEhzajF0eWpBRE9KSHdRalpueTFudi9qYXhLa2taNGw3Y3ZmcmliK1k1QlM3ZDhtaWJOZUpCU2ZSMWhLbVUzMktBYmlKNDV1c3g5RDVaRjRxaEZWeXMvdi9kYlJBa3Nkbjl4S3o0eTFhK3VENFQ0WUUreU8wVUx2ZFdYMVJtMUpjSDNNR255SnFMNEUxSll1aG9GNE5SZmoxRm5zUTFkK1FaWUgwc0h4enlVaTBLM1JPR3BNNXFmUGNRYmN5Q2pEU2VJRnoyaHIzV3dTS2tYSmNiTG5KdEcyZGlnQnhvV1hSN0MxZktQd3Bhbm9CR0FuaVdhRXZ3OWQvS1JNYklCOEtVT3E1V212RFRGbVF3SURBUUFCQW9JQ0FEODFnZnhMdEdISHFMTGRKSVFvSnNqcW9QUFBEcEg2OGtyZXNvNlNTM0JFL1FMNjk3cWRUVUxrYUhWMk5HWGpqUGtwek5JSEZOUlcxdkovaWV0YlNZRGorZkFXSnZXQU51RGZoZk1mTG1keEpPU3ltaXIzOEJFUno4b2dZaWcxRWN3R2xHZlR5cEEyeWZVSGpzejNQSGFiVGhuTllFTTVWYm9pby9rQzdYUk56em1BUHhmMGlHWGZQTmxiK1VVbDZIYWRUNm9Nd1AyS2puR1V2RlJwU04vdGc2bi93Qk9qRWkrL2dLdE9DMFFHQm5oa3I0b0JObmZuLzV1Q3JKMUtqN1J4eHdtaFNGZEhicjRrcEwyeis2UU8rZlJzeHd4MUVhRXMvUVZvMVZPMllHRmQxMjhCTXNYdmRiSEwybDZLUjdXNDhhbE8zR0Y2T1hGbUw4SmRRbE1kZWEzdG40OHRqYzhYWG5JMEs2OFBXSGxRaUY1RWl5eEcyRVFUekxIVDFxSXMzeFdEazJ6dFkwVjJ3dXJTWmY3YWIxSlFuR1FnRWd5Zm5jUlVLdEV2ZDJnZFpNcjU1c295SnJwKzg1V05uREhTNGJRczAzRUwyMG9SK3U2N05kTGdRTVpiYjJXQVI5S0RaZ3VVdlp6emdMQTYrdyt1ekwzVDhzYVk1aGhSVnUyOHphWFdOaTEvbkRJbWhkUGFUWWNOTkhaNENhMjRrNzg4UG5MU2hoRm5oRW1YOWFQcEhaVi8vYk1ZckhGeDFiU0FuVy9oc29rOXNaOFRkWE1GdzNVb1YwZnhKSTNDTVAxMFRHczlTb3JOQ2J2VU9rUlJrYVFYeVpsQXBPTVBvM2FIcXlseUp0UTlXZFQ1YU82OHhxUDh0V1N6QWQvcVhPclErMnFUR092bEFvSUJBUURXWXRFb08rMlZ1Z1VwMFVCMFVqTlpyczl4L3EzSnY1S3ExZTFqRFYvYnpFb0hzS2dsM1RTSEdaemVBLytMQ1pUWldJREQxVXNsZ0VKemdXNXFjall5MnY2UXEyaWZlaE9ITzFWZEJFRzYreEJxaUtsUzJhUG51T1pvMWk0dnRhNkhCRWxBNVg2TkNxRzRUcFE4aExqR2psYUtDaEhnMmJxbnF3UW9hU1NyMlFHQkp6NTdJaldxQmVCQnRxUTJjZFdza24rbzFNZ0pqdWgyYVVvMzRVbVhJTFJ5VkdhR3ptblN0YWFsNG5XMEJmRGZRVUxFcDc0VkhMb3dVS1owM2ovdHN6MUdpVXEzT09KUHVINlp6TUUvZVRPNXRETGJEMitOa092ei96U0dYdXVqWmpYZnlGK3R4Lyt4emcwYmI1ZEtYSzZjQnRFN2tYNUhJc3hKL05WWEFvSUJBUURtVm85eDVDdkg1cHkrUnUyUGNEVjh5RDJaaDVEbmM4UWRDeGo5SzU3bjRTMEI5SGMxT3VMSnZnNmhoMDVtdEVvL1VXU3dPbktHL2ltSGhNTGFDTTZzSStkaGswa2RuT3pFclBjL1dqOWFTeW05Z3dpVkprOHc2cGhOTWxERG81SncyNkZQa09KM0ZTNFhsMFJmd3ZhNkJvb3dpTzNpaDdvaEg1VEJ2MHNBMEFWa1hJRXdIci9tRGwrdjFQeGgrWnZJQ0hyaWJlTHFTVVJtZEtOVVhJbmV2RitDeWtSZExmbDNVellKVWVQalV0TnNZTHlYMGlyVGFOWkVLdWZJMU41QnRHY1pZalpnQm5Cc3Q1ZGVPRDV0Ykp1bjEyaFlsZjE4RmtKZllHcVVxS2hWRm1iOFRwYlFTbDYrMGQ1NXNHVndONmx4clJhRHdvME9pcjR2SWxiMUFvSUJBR1J1QkVkUjA1bTVlK084Ri9LbDgxSkc5djBTN255OVZzcmF6b3NCWCsrS2d2K1pQUndIeFN5b3pmaWZiTjNJVGtlSEUwTXFMenJSRzlBYVNReHFsb002WGRpTnc4UTVudDVSNkVwYnpTTDNyQmdNRHk0MXNIZkVBWVFKR2JmVjUzMXVmNVo4SzgyTXRuZXRyL210dnhXYzVtTmlGai84SDFtZVhxTkRwaDh1MkdxVlpNcXdHdTJjTlJMenFYZXIyZ291MHNqWGJTSTFKU2NiYWQ1RmxvREtuRjJXdGpUZWkycGZHRU5MbEJJU1dtVnJvQWlhQUF6SjJWcjYzUStRY2VnN2VEQUw3c2xvUjNSTEhGdVdOTTAwVFF2b280NUZhOStvalRCUFZGN0NKcWIwSWJiRW1qWEJwRUc2SWgvQkplRjdDMzBpSUhCRVZ5Q2g1NHVkZXA4Q2dnRUFIRWRZU1JWSVFyeVBWZFVEYVc3UFFraWJOM1FyV0I4Z1hxaDBJdkR1QzIzYnhyZXF3d0E5dzZMdnpPajl1U0k5VTFTODFkMzNIWmVxcFphcERYZXpWL0w0ZjBSRDM3emFYTE1YajlHV29aRkV5SjJEdWp2LzBQT2NTeTM0T0d5bWwvQis5M1BFT2ZhQnVDZThIejJpYU9oUW92RE1zOWtTQXVzTHFsVy84Wk9ZZGQvZGhIamgrbTZkVk1zRFNVd0owaDhvWnhBeW9henBGdU1QQWxaeUhzUmx2WHJ6dGJUbFFiOFhqVUZlaHhRdUhNb3JuVUFTUGU1TEVBZHNlWDJZNDl3d0pDK29tVlZ4REFmbUw0MGNMUGIralRhbSt1ay9PN0xINTBuQkRBdEF6MkYydDFjMnNNL1FuZ0RLSFlxSWlhUnJ5eWNDOHA0NkR5VDlnRy9vMlFLQ0FRRUFxVlkrdGJlUWY3ZU9SUEVmVm82TjRZZ0doSTNJTzBuSWtXNDFEb1FNUmd6L0RrOVNwSnc1VmVhUk51YVJUNVBjS3JEOGZSVXVLSklwQk5XdEFuc1U1TnB6NTZpaVBGc3l6U3JXVnJ2UGxpaThpZVlOTXR5NFhKcEhoOC8zbGs0L01sUkpacTF2V1ZCUitrMDM4dzZGRlBSY1ljOEdSYjZ6cGxtdkQyRGk0Zmx6NDRETlZpU05XVFAzRjJBY1JCcGhSQ0Z2VUZNMHhTMDJvL3poM2FVMEI1c2o2cDdqS0hITVpVZjR1SEV3UnhhV2J6WjRzTHZGdVJNUE05MGw4TnNCZnRRU0dwSHlnbThBVTJ1RDl4QkxoZGpZK1lqdEtEeXplcWJ0clA3Zy9TTlpvTmdDSzZrdC9vOEN5QnpBSmhqdkFHUzJIaTROQU1oRU8zdG9Vajc1amc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==",
                "jwt-rsa.pub": "LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF3T1ZGUFB6a0R0cC9acms1NkY2V3hhWFgzbUpXVkVLOEMyNkR2ODVXek9JK1lVSjFxYklNeXdic2o5MkFEc2ZuK2dac3pBSGVyTlVQUWFKcXFmYy9wdVpIZ3g4TU1sR1p5MDNTUHFIVy9TQ3lOZU1JREJhMWhzRW91ZEhiNERYbm9yQzZPbFJqNnc5TlZSenNWK0Q1MUVqWDBySVUvODk0aDBkbVJLOWhmcnlRMDV1RVNuT00yaXB2RWl1NFh1end1dU5LNjBmMWZWVlZTWXZKRDFUSjFGME1DamlLUlcxVzJGZXhUMkd0aTlsNmg4MEc0V1FZdkpDalpyUjNnOStRYVdVNnJBRnVIR2RzVEpnZDdMdXJZMnM3UjU4YWVPOThMM09Cc2NtWFoxRmpoQWRnWHJSWDhJZW16UzduUm9ZWTdRbEYxdkNjNE95aVZHZXk1NFYzQWh3OXV1MkE2K1ZuQ2p6TDQ1Y044bWhIR2plaDlUTnREbU11T2p5dlNsWE1veTM0VlNTd0hUQytKVzhjT1VXWVBjTThydC9RV3l4N0k5YmNvd0F6aVI4RUkyWjh0WjcvNDJzU3BKR2VKZTNMMzY0bS9tT1FVdTNmSm9telhpUVVuMGRZU3BsTjlpZ0c0aWVPYnJNZlErV1JlS29SVmNyUDcvM1cwUUpMSFovY1NzK010V3ZyZytFK0dCUHNqdEZDNzNWbDlVWnRTWEI5ekJwOGlhaStCTlNXTG9hQmVEVVg0OVJaN0VOWGZrR1dCOUxCOGM4bEl0Q3QwVGhxVE9hbnozRUczTWdvdzBuaUJjOW9hOTFzRWlwRnlYR3k1eWJSdG5Zb0FjYUZsMGV3dFh5ajhLV3A2QVJnSjRsbWhMOFBYZnlrVEd5QWZDbERxdVZwcncweFprTUNBd0VBQVE9PQotLS0tLUVORCBQVUJMSUMgS0VZLS0tLS0K",
                "tls.crt": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUUrRENDQXVDZ0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFVTVJJd0VBWURWUVFERXdsemRHRmphMmR5WlhNd0hoY05NalF3TWpBMk1Ua3hPREEzV2hjTk1qWXdNakExTVRreE9EQXpXakFVTVJJd0VBWURWUVFERXdsemRHRmphMmR5WlhNd2dnSWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUNEd0F3Z2dJS0FvSUNBUUMwVEdBaFJRR0QrZnVPWFVFQVJUNkw3N1FjOTRObTRrTFlWMWh0d0dMOG5zbzlPMWVHNkhFODlrYW4wRm05cE1YTG95eEVra2pYa3ZFM3RLaTBjMGl1V1MxVEhoR0k5bFRWTWdyTDZyY29zUkY3LzQvMHpuK3VHUXVQZjVvcy9KdzBRUHozUWNVcld3N2dDNUdsdFJLU3I2YTZ3eHliWDBDaVdiNEhaaDJvTUZ5WDRiZTYwVTJjNDZSTTNXZHVabCtmQVJsZ3EzR1krdDE2MFllMEFSckk3Q1F2K2NYN0NIQ1FFOHZMeStuenB2eThON0F6b0dqeTl5OVdrSW02WGgrbVk2dHBqVG5OQVhtY241ZmZnbUlNTWRra3BIWGRxaTl4VVV0U09BR2VjSERZbVZZV3VsYUZENEJvLzJYN002L1FnV1BQT0VvMlZ3NWNPcW1wS3NJajFxSUpHZDBENktoMDhGQ1RiemRPYVNWS3NBUmtra3BUYUQzRGR1S0tsT3EwYXpZbGRJWXhCTDBKZU92UG5MMDNBY0hZT3FtdEJqaVpKcUlHM1l5eGNJRDVEQ0hWdnZrODhwdUFtR0VncHpkcjFneEZIcEJzb1dESXQvTEo5cW83bC84c3JxMW1GbFh0bEVhNFhqUTNUbG9JVkdUeHZ2UUdWMEpkMmh4ODBVTExDR1hIcitlU3prZEJ0b2ZqVDA5SURMZjRFbERYalhDL2tCWWZldE1SV1AyYkp0VlEzcFRzbXo4V2l3MkV6K2d4ejVaRmh0SkFkRkFSc1lpKytFN3doU1NhYkJkalpLVGpZK2NaVTdhcHU1OFFadFFzdUdUWmFNd21LY3Bzaktjbko4OWhwSUl2aHJ1QmQxMlpZSjViQjZBWWFOa1ljVDN3c3BMUDVSNmIvUUlEQVFBQm8xVXdVekFNQmdOVkhSTUJBZjhFQWpBQU1BNEdBMVVkRHdFQi93UUVBd0lGNERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdGQVlEVlIwUkJBMHdDNElKYzNSaFkydG5jbVZ6TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElDQVFDbjZWQm5GRm5hbWhtelIxT1ZibWE4RE5mNGh2V3ozRFNSdWlVeGNodmVON2dTYk5tRDhLMURXeXd2TFgyeitsZkdvbUpkQWNZTDdCemcyTDFKd2xOL01LcHhCRXZ2NzJOdGVIRVA3ajZkUFlkM1NBenNTQnZ2ZzQrZkdOci8yWVNZQ2RmQVNMT2FUWW5KNzFBOWpZN3NvNm42cUQyYXhIRU00dWRqZzFzaktWNlgyVmdsVFkrSFdXZWliOXJSc1l4T0NLQzFmTUZvSkhhKzNGdzBDMVpFcWZnd2JoWFhnZUxUTHg3RkYwd1J4TXMzN1RWWFhDSUcvYlZEVkY0OWdkVFFTQzNYVDBDNHFUc21HTU9oWlhkTnp0MjZMSUpVUWpQMmo1QkdXVDloRy9sUmtOazIzVHN2ZEhvK21HeDlGRVZ6L1A0ZUZON1VrV2hmUnU2akM0eTRWRzFtNTU4NytaTlhzaXNXcFJPL0FsNXMvZ1FhMWplMjVVZXJjRzNkRGo0SG4zK0ZzTmJKU0tjQUEwaWI2bmt5V3hyaytOVkpGOHZMZ29WTHAwMkI5WW5qZHdCcThqMGZSTlYvWUZxM2VFZjlsZ2FYUzd4NHdqblFtUnNqbENqNitiWlQ2MmpDYmMyUnNLUXpkaUVRcHZKelkyN1ZIQWtLTWRFNXIzMWVub2pkOWtrdFlPN3RmRXNCdExXK2VCZFRxTHpoSmZtNEVwS2w3T3ByM2pVOVA5eUZrOXZacElkMGlGU2N6SkdvQi9JbC9kT2dBT2lRWFI2S1hQbStvTkVmVm5Id3JLQ1dOb1IwYVA3anJ0ZDFzUWlQTGZpQWE1UXFweWdyWGNTdVhjV0RPMndOMzRVcFBNV3ZoYmpQcjh2SXgxemx6ZHpQeGZibGpCcUlZZmVOUVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                "tls.key": "LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRZ0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1N3d2dna29BZ0VBQW9JQ0FRQzBUR0FoUlFHRCtmdU9YVUVBUlQ2TDc3UWM5NE5tNGtMWVYxaHR3R0w4bnNvOU8xZUc2SEU4OWthbjBGbTlwTVhMb3l4RWtralhrdkUzdEtpMGMwaXVXUzFUSGhHSTlsVFZNZ3JMNnJjb3NSRjcvNC8wem4rdUdRdVBmNW9zL0p3MFFQejNRY1VyV3c3Z0M1R2x0UktTcjZhNnd4eWJYMENpV2I0SFpoMm9NRnlYNGJlNjBVMmM0NlJNM1dkdVpsK2ZBUmxncTNHWSt0MTYwWWUwQVJySTdDUXYrY1g3Q0hDUUU4dkx5K256cHZ5OE43QXpvR2p5OXk5V2tJbTZYaCttWTZ0cGpUbk5BWG1jbjVmZmdtSU1NZGtrcEhYZHFpOXhVVXRTT0FHZWNIRFltVllXdWxhRkQ0Qm8vMlg3TTYvUWdXUFBPRW8yVnc1Y09xbXBLc0lqMXFJSkdkMEQ2S2gwOEZDVGJ6ZE9hU1ZLc0FSa2trcFRhRDNEZHVLS2xPcTBhellsZElZeEJMMEplT3ZQbkwwM0FjSFlPcW10QmppWkpxSUczWXl4Y0lENURDSFZ2dms4OHB1QW1HRWdwemRyMWd4RkhwQnNvV0RJdC9MSjlxbzdsLzhzcnExbUZsWHRsRWE0WGpRM1Rsb0lWR1R4dnZRR1YwSmQyaHg4MFVMTENHWEhyK2VTemtkQnRvZmpUMDlJRExmNEVsRFhqWEMva0JZZmV0TVJXUDJiSnRWUTNwVHNtejhXaXcyRXorZ3h6NVpGaHRKQWRGQVJzWWkrK0U3d2hTU2FiQmRqWktUalkrY1pVN2FwdTU4UVp0UXN1R1RaYU13bUtjcHNqS2NuSjg5aHBJSXZocnVCZDEyWllKNWJCNkFZYU5rWWNUM3dzcExQNVI2Yi9RSURBUUFCQW9JQ0FBUGs2R2lmakc1VXptV2ZSd0doL1QxWmdvcmpuNjl2c0tEcWxncmN6bWFGYVhuVUY4cGVwOTk0dEVMNG9ZK1NpUUVpZDVqTmpndzE3TWJXdkpRVkwxc3dxdVZ5TDAvRmZrU1NqYUFrNUNyWlZEYlk2THVSWURtYTZlQ0NFWXJxTTlkL0ZkZWpVSVprczVnTU4rdWIweGhlK2R0cnptamVzRTh4WUFUWjVFY1hNRkRKZThYcHNtTHltY0JkUWRnbEZ1aWd4Zk1NRU9xTWRJOHNDbUhOYWs0dnA0SnZ3eUp1WnJ2OTZYZHY0cEEwS1o1SkY2R3QwOFozcDBxWDJabXdZYitleEh1RnBOdDBMak8vVUxEdnFIMTU4Q1kxOVNQQ0FyOVFVYStuYlFXR2lURnNjbXNRUUVFa2VoSUtmaUhrVm1aSy9TUmpJMXMwR3lmTHpwRk1UcUFkTTJiOHJ2N2k5Qi9JYTFQNHJNMmZNdS81V2trTVdmTnVIZXJ5MGRwK2YwcFV1Ym5YaWxmS3lOc0ZhTXBqRW45N1pxbDZjN3QvOFJlOHQvcFBhM1RXRlpSM2g5TVhSVlQvRnJWM0x2dHBjUTFkeVV3Y3BKK3dwLzRGUGhGV1ZTNVY5a0c1OVhQS2FacFlPS1dEVWZpTXFxWEFPVkJ5cDRlZG9YaVd2WkFqWGJPN0RkYWpKdHZ4MnhlSWFoREpZUjdoUVJIcUVVNW1Oa3NxVWJXRjYvamdWKzc0UkNqQ3pvanNtZllPdG9NZVhUWDV3SzNkRUpIaFAwL2FQR3NhT1MyeDZDVU05K1p1RnJXSGxHVTY4Mk1vM1BvRUJWM0ZOVkpRUGZzLyswdTArN044UFhZRElYNzRoeGwvOVJHeXZrVTZ0ejZoc1BYbGMwcVM5RWVER0srQkFvSUJBUURBenR3ekpuM1B3M2hFdURkem55WjBMZFM0YmlYWWg0aWl3N1M5eG5PaHlScEZ5c3FKeDE1c2k0Y3BxQlQxdE1TRm8zMFFlRThabnBCRnpLY3QvTzlqUVorcFVQNjlGeHhjQ3FrbU5FZkYxSDVlc3JlZlFOV3lod3VlOXlMUHFPTzBXM3hlbThBOUhISWkyZ0ErbDgrYzVySGZzamN6YUpMT1BzRFdpd3hIdGx4Vk1JUmNWbUNMMmdUZ2tpczFmcTJONnozcm1pR2ZoZ3F2cGFXblpqS3g5SjRXZ2xTVFVJQTVrb3lyTlI4YkpKVHZ0aWVqVHlJclNEKzdOZ0RNdnRJTzlwMlVudURoMzUzVFhwTDdHVVVNMjdBR0dHejlPQnp6eXFZUjJNU0RscSs4THFCL2JEaWR2MW0rZnJjMTMrSWFmbGU3Wmt3MXNudnkwZUlWNDBzOUFvSUJBUUR2WStwcjZtcWQwaUtrVjBWM1A5aGhZTjR0YjBucDlYaVBoT1dnUnlxd25adnpySXFHS0J4RkVGdDM1b2tJV291a1ZTMU1KOHBRc0NnelE3Q2pDTXRFbXF2dEhmUFdJV0RPVW9iOExVZzEyaVZLQkI0QzF4UjhiVWpEOXgzOThxbmhpdmZOUjFFTlZIazIxRTZDb2NPSzVKRlk3TmVyRzZKWSswRVo5M2F5L2tOV3gxdnNxVkt2SFNPYSs3M094dUdBNDN3QXNiNCswSUU0NW12M2diUmRwSGVPaVpsSU9zdlpKam1pUUd0VndYaTF6SGtWKzVQZnZRVEdFNUExR1BOUDlUVDZCZDNCRE1kR2s4V3NWRTdZSjRCanZTU2llTEQyRlRjSTdMMDhRMHJac0JUZE1jdzVYTG9GL2lTcVFKbzB3VXRRZU81WEFER0VYb3pOcUovQkFvSUJBQ01Ic21Rc3N5RURUNStVcEthQ0hOZHcyRHdsN3dSWEk1RUc0NWl6TEtFUlM0K3dsM25PMmkzNGI3YzJ6WkFTcHIzdEJUVHYxdGM5d3RLYnF5Z2swMDJDUjhMWWIxL2xpZ2FDL1ZadW16ZXJNc1o3eS9iSUxjdEEwL0N1MEFsUWt3WmF0TTd2bDA3REUwMlh0QUdyVFZJaGErSExuRkhmeHdSbnpGdHVhZTNCaVNjRktKY3FMbUphV3haK0dCR2hFV0UrZzBLQi8yZmZUNk80QWMvWE5wQzBjK0I5RDJhd2NvdURQOEYvWmtabE1CWVpUenhSalZDMTBMWnZ5bGRvdC90MS9RMWFqRnNkYUt4VmUzalpqMzBWa1BhYWkzcTZMakJ3K2hrMS9BWTRZM2RhTlZqUlRid0RYd2ZJTi9zMjBQcWxSOFZKZ2NFankzZERnTU1mUjdVQ2dnRUJBTFg2NG8yKzJlVzNoSlloc2JFQlcrQkszeHJ5NnVGcnRZYUVwSHEvSHZpOEYzMlp3SVJUb1ludThWbW9hcXRyQ1pTWEc2UTA2MXVEVGt3S1BSRHk4bkxva2FIamp5Vk1vbWExM2Q5K0hOS3pUbjJCdTc2MCtlSE13ZkFXdnpuNWFxTUdIWEp6c0czTnRZZTB4U29SQnJGaktBck5vUFYyUUdnY09GVWhCWjcwSXdTbzhIeHNDMnNMWDdIRmhYalhQejNYc01CbVhoVXFNOUdwZUpIaWk5WlQzSDhDb3YrQmtzMDBmY09WN1FKMzNPZDIxT1dkSmNDRDFFa3ZQZ1RmUHJlZDAvUHMyYktUb0RsS3hJNUlXTmVBejkwQ1FBTXlkSFBkbE1TNEV2TG94TkhQUlUwUk9ncXhMc2kzZGUvbXhGTXVUYTZTLzd3cmJYa08xMExQMlFFQ2dnRUFCV2F4WS80ODZpQTJYY0VldE1LS2pkSCtmak5FdkxXckZyR012Y1R2WlVJMjhlQ1ZlSmJBeEFFWjdmZ2R4VGNxNHdOS3RnMmdraGxYNzlBNUZJdXVyS3VyUkF1Z012VFNCVWY1V1ZDbHRlTHlKaTdsc0dETEd1VE5wSUV2UkF6OHJQZEZ5VVFTc0NDaGpsUDB1aVpaSlBJRGhSckI4Z3FyOFJDL2NvdkZlMzJOcjkzcHRtelZVaWJoSmtIMWVOeFA5YVFFR2ZkUE5uNlh1WWhyakZuTVdUM2xYUGZ6eWlQTG5OeUNKT3ZKSVR5Ylk1YVR0VDllSTBUazFsdmxJZExIVFMrdEZCRWtDM3RGcGo4Y1dQdjNsTVpVRzRNTVFkdHB1WDVtL1dMSGc0anlHY0h3RmZRQUlHV3QvM2trQ0toWDU4a1ZRc1ZCd3ZNVXhmMEZxM0dVVVE9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:18:09+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresConfig",
                    "stackgres.io/config-name": "stackgres-operator"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:MD5SUM": {},
                                "f:jwt-rsa.crt": {},
                                "f:jwt-rsa.key": {},
                                "f:jwt-rsa.pub": {},
                                "f:tls.crt": {},
                                "f:tls.key": {}
                            },
                            "f:metadata": {
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/config-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"917865c8-90f9-416e-af45-5e86379bc632\"}": {}
                                }
                            },
                            "f:type": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:18:09+00:00"
                    }
                ],
                "name": "stackgres-operator-web-certs",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGConfig",
                        "name": "stackgres-operator",
                        "uid": "917865c8-90f9-416e-af45-5e86379bc632"
                    }
                ],
                "resource_version": "1111",
                "self_link": null,
                "uid": "646a3aeb-b097-4994-87dc-ee264c4033bc"
            },
            "string_data": null,
            "type": "kubernetes.io/tls"
        },
        "stackgres-replicate": {
            "api_version": null,
            "data": {
                "MD5SUM": "RDQxRDhDRDk4RjAwQjIwNEU5ODAwOTk4RUNGODQyN0U="
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:MD5SUM": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:type": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-replicate",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1591",
                "self_link": null,
                "uid": "e35a666b-f35c-423c-af9e-3e583f0141b2"
            },
            "string_data": null,
            "type": "Opaque"
        },
        "stackgres-restapi-admin": {
            "api_version": null,
            "data": {
                "MD5SUM": "OENBNjgzQTg1ODk4NjQyOUExQzU5ODc0NzMyNEM5RDI=",
                "clearPassword": "NWMxOS1lMDU3LTQ0YTAtOWE2",
                "k8sUsername": "YWRtaW4=",
                "password": "YjgxMWY4NWExZTFiYTY5Zjc1ZGM4ZDQxZmVlNzczMDJiZDUyZmExMzNhYzc5OWRlNWVjOGNmNDM2ZDBjY2RhYw=="
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:18:09+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "api.stackgres.io/auth": "user",
                    "app": "StackGresConfig",
                    "stackgres.io/config-name": "stackgres-operator"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:MD5SUM": {},
                                "f:clearPassword": {},
                                "f:k8sUsername": {},
                                "f:password": {}
                            },
                            "f:metadata": {
                                "f:labels": {
                                    "f:api.stackgres.io/auth": {},
                                    "f:app": {},
                                    "f:stackgres.io/config-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"917865c8-90f9-416e-af45-5e86379bc632\"}": {}
                                }
                            },
                            "f:type": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:18:09+00:00"
                    }
                ],
                "name": "stackgres-restapi-admin",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGConfig",
                        "name": "stackgres-operator",
                        "uid": "917865c8-90f9-416e-af45-5e86379bc632"
                    }
                ],
                "resource_version": "1112",
                "self_link": null,
                "uid": "0602ff81-0d0c-4545-a390-43b6437eb097"
            },
            "string_data": null,
            "type": "Opaque"
        },
        "stackgres-ssl": {
            "api_version": null,
            "data": {
                "MD5SUM": "RDQxRDhDRDk4RjAwQjIwNEU5ODAwOTk4RUNGODQyN0U="
            },
            "immutable": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:data": {
                                "f:MD5SUM": {}
                            },
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:type": {}
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-ssl",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1593",
                "self_link": null,
                "uid": "3e68db7d-34e4-4178-9671-0e0e374c8dd8"
            },
            "string_data": null,
            "type": "Opaque"
        }
    },
    "service_account": {
        "default": {
            "api_version": null,
            "automount_service_account_token": null,
            "image_pull_secrets": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:14:01+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": null,
                "name": "default",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "391",
                "self_link": null,
                "uid": "38f6a4f8-0b73-4f3c-9a83-4765e8386c94"
            },
            "secrets": null
        },
        "stackgres-backup": {
            "api_version": null,
            "automount_service_account_token": null,
            "image_pull_secrets": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-backup",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1602",
                "self_link": null,
                "uid": "90d739df-3cd9-45b2-ba30-cc7454597329"
            },
            "secrets": null
        },
        "stackgres-operator": {
            "api_version": null,
            "automount_service_account_token": null,
            "image_pull_secrets": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            }
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    }
                ],
                "name": "stackgres-operator",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "996",
                "self_link": null,
                "uid": "f417ee3a-cc87-4d3b-8729-07460d3e8e38"
            },
            "secrets": null
        },
        "stackgres-patroni": {
            "api_version": null,
            "automount_service_account_token": null,
            "image_pull_secrets": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-patroni",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1601",
                "self_link": null,
                "uid": "c3abf758-1e2e-4b46-bfc2-417d68f498cd"
            },
            "secrets": null
        },
        "stackgres-restapi": {
            "api_version": null,
            "automount_service_account_token": null,
            "image_pull_secrets": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:18:09+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresConfig",
                    "stackgres.io/config-name": "stackgres-operator"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/config-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"917865c8-90f9-416e-af45-5e86379bc632\"}": {}
                                }
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:18:09+00:00"
                    }
                ],
                "name": "stackgres-restapi",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGConfig",
                        "name": "stackgres-operator",
                        "uid": "917865c8-90f9-416e-af45-5e86379bc632"
                    }
                ],
                "resource_version": "1115",
                "self_link": null,
                "uid": "dbb5fe89-f045-4b74-af4a-859aa4de87c7"
            },
            "secrets": null
        }
    },
    "service": {
        "kubernetes": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:13:46+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:labels": {
                                    ".": {},
                                    "f:component": {},
                                    "f:provider": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {},
                                "f:internalTrafficPolicy": {},
                                "f:ipFamilyPolicy": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        },
                        "manager": "kube-apiserver",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:46+00:00"
                    }
                ],
                "name": "kubernetes",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "230",
                "self_link": null,
                "uid": "b8966fa9-010a-4e42-9701-2a6fda398b85"
            },
            "spec": {
                "allocate_load_balancer_node_ports": null,
                "cluster_ip": "10.96.0.1",
                "cluster_i_ps": [
                    "10.96.0.1"
                ],
                "external_i_ps": null,
                "external_name": null,
                "external_traffic_policy": null,
                "health_check_node_port": null,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                    "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": null,
                "load_balancer_ip": null,
                "load_balancer_source_ranges": null,
                "ports": [
                    {
                        "app_protocol": null,
                        "name": "https",
                        "node_port": null,
                        "port": 443,
                        "protocol": "TCP",
                        "target_port": 6443
                    }
                ],
                "publish_not_ready_addresses": null,
                "selector": null,
                "session_affinity": "None",
                "session_affinity_config": null,
                "type": "ClusterIP"
            },
            "status": {
                "conditions": null,
                "load_balancer": {
                    "ingress": null
                }
            }
        },
        "stackgres": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:ports": {
                                    "k:{\"port\":5432,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    },
                                    "k:{\"port\":5433,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:type": {}
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1618",
                "self_link": null,
                "uid": "489788c7-40e7-4e42-92ae-d9c7e1e863df"
            },
            "spec": {
                "allocate_load_balancer_node_ports": null,
                "cluster_ip": "10.96.108.48",
                "cluster_i_ps": [
                    "10.96.108.48"
                ],
                "external_i_ps": null,
                "external_name": null,
                "external_traffic_policy": null,
                "health_check_node_port": null,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                    "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": null,
                "load_balancer_ip": null,
                "load_balancer_source_ranges": null,
                "ports": [
                    {
                        "app_protocol": null,
                        "name": "pgport",
                        "node_port": null,
                        "port": 5432,
                        "protocol": "TCP",
                        "target_port": "pgport"
                    },
                    {
                        "app_protocol": null,
                        "name": "pgreplication",
                        "node_port": null,
                        "port": 5433,
                        "protocol": "TCP",
                        "target_port": "pgreplication"
                    }
                ],
                "publish_not_ready_addresses": null,
                "selector": null,
                "session_affinity": "None",
                "session_affinity_config": null,
                "type": "ClusterIP"
            },
            "status": {
                "conditions": null,
                "load_balancer": {
                    "ingress": null
                }
            }
        },
        "stackgres-config": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:clusterIP": {}
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-config",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1612",
                "self_link": null,
                "uid": "c043d426-0dd2-44a0-be75-c2fa53c8ac28"
            },
            "spec": {
                "allocate_load_balancer_node_ports": null,
                "cluster_ip": "None",
                "cluster_i_ps": [
                    "None"
                ],
                "external_i_ps": null,
                "external_name": null,
                "external_traffic_policy": null,
                "health_check_node_port": null,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                    "IPv4",
                    "IPv6"
                ],
                "ip_family_policy": "RequireDualStack",
                "load_balancer_class": null,
                "load_balancer_ip": null,
                "load_balancer_source_ranges": null,
                "ports": null,
                "publish_not_ready_addresses": null,
                "selector": null,
                "session_affinity": "None",
                "session_affinity_config": null,
                "type": "ClusterIP"
            },
            "status": {
                "conditions": null,
                "load_balancer": {
                    "ingress": null
                }
            }
        },
        "stackgres-operator": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "meta.helm.sh/release-name": "stackgres-operator",
                    "meta.helm.sh/release-namespace": "default"
                },
                "creation_timestamp": "2024-02-06T19:17:39+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app.kubernetes.io/managed-by": "Helm"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:meta.helm.sh/release-name": {},
                                    "f:meta.helm.sh/release-namespace": {}
                                },
                                "f:labels": {
                                    ".": {},
                                    "f:app.kubernetes.io/managed-by": {}
                                }
                            },
                            "f:spec": {
                                "f:internalTrafficPolicy": {},
                                "f:ports": {
                                    ".": {},
                                    "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {},
                                "f:sessionAffinity": {},
                                "f:type": {}
                            }
                        },
                        "manager": "helm",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:17:39+00:00"
                    }
                ],
                "name": "stackgres-operator",
                "namespace": "default",
                "owner_references": null,
                "resource_version": "1006",
                "self_link": null,
                "uid": "bffded25-632e-4612-9f29-771e252996fd"
            },
            "spec": {
                "allocate_load_balancer_node_ports": null,
                "cluster_ip": "10.96.70.80",
                "cluster_i_ps": [
                    "10.96.70.80"
                ],
                "external_i_ps": null,
                "external_name": null,
                "external_traffic_policy": null,
                "health_check_node_port": null,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                    "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": null,
                "load_balancer_ip": null,
                "load_balancer_source_ranges": null,
                "ports": [
                    {
                        "app_protocol": null,
                        "name": "https",
                        "node_port": null,
                        "port": 443,
                        "protocol": "TCP",
                        "target_port": "https"
                    }
                ],
                "publish_not_ready_addresses": null,
                "selector": {
                    "app": "stackgres-operator"
                },
                "session_affinity": "None",
                "session_affinity_config": null,
                "type": "ClusterIP"
            },
            "status": {
                "conditions": null,
                "load_balancer": {
                    "ingress": null
                }
            }
        },
        "stackgres-primary": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:externalName": {},
                                "f:type": {}
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-primary",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1619",
                "self_link": null,
                "uid": "8835abc5-55e0-4f47-939d-ec1b95246029"
            },
            "spec": {
                "allocate_load_balancer_node_ports": null,
                "cluster_ip": null,
                "cluster_i_ps": null,
                "external_i_ps": null,
                "external_name": "stackgres.default.svc.cluster.local",
                "external_traffic_policy": null,
                "health_check_node_port": null,
                "internal_traffic_policy": null,
                "ip_families": null,
                "ip_family_policy": null,
                "load_balancer_class": null,
                "load_balancer_ip": null,
                "load_balancer_source_ranges": null,
                "ports": null,
                "publish_not_ready_addresses": null,
                "selector": null,
                "session_affinity": "None",
                "session_affinity_config": null,
                "type": "ExternalName"
            },
            "status": {
                "conditions": null,
                "load_balancer": {
                    "ingress": null
                }
            }
        },
        "stackgres-replicas": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:ports": {
                                    "k:{\"port\":5432,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    },
                                    "k:{\"port\":5433,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {},
                                "f:type": {}
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-replicas",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1621",
                "self_link": null,
                "uid": "7d311dc3-72db-4f24-b943-8e4bbcb1b429"
            },
            "spec": {
                "allocate_load_balancer_node_ports": null,
                "cluster_ip": "10.96.138.167",
                "cluster_i_ps": [
                    "10.96.138.167"
                ],
                "external_i_ps": null,
                "external_name": null,
                "external_traffic_policy": null,
                "health_check_node_port": null,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                    "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": null,
                "load_balancer_ip": null,
                "load_balancer_source_ranges": null,
                "ports": [
                    {
                        "app_protocol": null,
                        "name": "pgport",
                        "node_port": null,
                        "port": 5432,
                        "protocol": "TCP",
                        "target_port": "pgport"
                    },
                    {
                        "app_protocol": null,
                        "name": "pgreplication",
                        "node_port": null,
                        "port": 5433,
                        "protocol": "TCP",
                        "target_port": "pgreplication"
                    }
                ],
                "publish_not_ready_addresses": null,
                "selector": {
                    "app": "StackGresCluster",
                    "noloadbalance": "false",
                    "role": "replica",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                },
                "session_affinity": "None",
                "session_affinity_config": null,
                "type": "ClusterIP"
            },
            "status": {
                "conditions": null,
                "load_balancer": {
                    "ingress": null
                }
            }
        },
        "stackgres-rest": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:10+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster-name": "stackgres"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:ports": {
                                    "k:{\"port\":8008,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {},
                                "f:type": {}
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:10+00:00"
                    }
                ],
                "name": "stackgres-rest",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "1614",
                "self_link": null,
                "uid": "0214881c-1118-4d37-9bd0-64f0f51855f2"
            },
            "spec": {
                "allocate_load_balancer_node_ports": null,
                "cluster_ip": "10.96.145.25",
                "cluster_i_ps": [
                    "10.96.145.25"
                ],
                "external_i_ps": null,
                "external_name": null,
                "external_traffic_policy": null,
                "health_check_node_port": null,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                    "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": null,
                "load_balancer_ip": null,
                "load_balancer_source_ranges": null,
                "ports": [
                    {
                        "app_protocol": null,
                        "name": "patroniport",
                        "node_port": null,
                        "port": 8008,
                        "protocol": "TCP",
                        "target_port": "patroniport"
                    }
                ],
                "publish_not_ready_addresses": null,
                "selector": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                },
                "session_affinity": "None",
                "session_affinity_config": null,
                "type": "ClusterIP"
            },
            "status": {
                "conditions": null,
                "load_balancer": {
                    "ingress": null
                }
            }
        },
        "stackgres-restapi": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": null,
                "creation_timestamp": "2024-02-06T19:18:09+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": {
                    "app": "StackGresConfig",
                    "stackgres.io/config-name": "stackgres-operator"
                },
                "managed_fields": [
                    {
                        "api_version": "v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/config-name": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"917865c8-90f9-416e-af45-5e86379bc632\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:ports": {
                                    "k:{\"port\":443,\"protocol\":\"TCP\"}": {
                                        ".": {},
                                        "f:name": {},
                                        "f:port": {},
                                        "f:protocol": {},
                                        "f:targetPort": {}
                                    }
                                },
                                "f:selector": {},
                                "f:type": {}
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:18:09+00:00"
                    }
                ],
                "name": "stackgres-restapi",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGConfig",
                        "name": "stackgres-operator",
                        "uid": "917865c8-90f9-416e-af45-5e86379bc632"
                    }
                ],
                "resource_version": "1119",
                "self_link": null,
                "uid": "479ab91b-8a2a-4367-80c1-a91ec527a8f4"
            },
            "spec": {
                "allocate_load_balancer_node_ports": null,
                "cluster_ip": "10.96.59.151",
                "cluster_i_ps": [
                    "10.96.59.151"
                ],
                "external_i_ps": null,
                "external_name": null,
                "external_traffic_policy": null,
                "health_check_node_port": null,
                "internal_traffic_policy": "Cluster",
                "ip_families": [
                    "IPv4"
                ],
                "ip_family_policy": "SingleStack",
                "load_balancer_class": null,
                "load_balancer_ip": null,
                "load_balancer_source_ranges": null,
                "ports": [
                    {
                        "app_protocol": null,
                        "name": "https",
                        "node_port": null,
                        "port": 443,
                        "protocol": "TCP",
                        "target_port": "https"
                    }
                ],
                "publish_not_ready_addresses": null,
                "selector": {
                    "app": "StackGresConfig",
                    "stackgres.io/config-name": "stackgres-operator",
                    "stackgres.io/config-uid": "917865c8-90f9-416e-af45-5e86379bc632",
                    "stackgres.io/restapi": "true"
                },
                "session_affinity": "None",
                "session_affinity_config": null,
                "type": "ClusterIP"
            },
            "status": {
                "conditions": null,
                "load_balancer": {
                    "ingress": null
                }
            }
        }
    },
    "stateful_set": {
        "stackgres": {
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "stackgres.io/operatorVersion": "1.8.0"
                },
                "creation_timestamp": "2024-02-06T19:22:11+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": 1,
                "labels": {
                    "app": "StackGresCluster",
                    "stackgres.io/cluster": "true",
                    "stackgres.io/cluster-name": "stackgres",
                    "stackgres.io/cluster-scope": "stackgres",
                    "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                },
                "managed_fields": [
                    {
                        "api_version": "apps/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    "f:stackgres.io/operatorVersion": {}
                                },
                                "f:labels": {
                                    "f:app": {},
                                    "f:stackgres.io/cluster": {},
                                    "f:stackgres.io/cluster-name": {},
                                    "f:stackgres.io/cluster-scope": {},
                                    "f:stackgres.io/cluster-uid": {}
                                },
                                "f:ownerReferences": {
                                    "k:{\"uid\":\"db2870c5-0a49-4538-9762-fe167a6e691d\"}": {}
                                }
                            },
                            "f:spec": {
                                "f:podManagementPolicy": {},
                                "f:replicas": {},
                                "f:selector": {},
                                "f:serviceName": {},
                                "f:template": {
                                    "f:metadata": {
                                        "f:annotations": {
                                            "f:stackgres.io/cluster-controller-version": {},
                                            "f:stackgres.io/envoy-version": {},
                                            "f:stackgres.io/operatorVersion": {},
                                            "f:stackgres.io/patroni-version": {},
                                            "f:stackgres.io/pgbouncer-version": {},
                                            "f:stackgres.io/postgresql-version": {},
                                            "f:stackgres.io/prometheus-postgres-exporter-version": {}
                                        },
                                        "f:labels": {
                                            "f:app": {},
                                            "f:stackgres.io/cluster": {},
                                            "f:stackgres.io/cluster-name": {},
                                            "f:stackgres.io/cluster-scope": {},
                                            "f:stackgres.io/cluster-uid": {},
                                            "f:stackgres.io/disruptible": {}
                                        }
                                    },
                                    "f:spec": {
                                        "f:affinity": {
                                            "f:podAntiAffinity": {
                                                "f:requiredDuringSchedulingIgnoredDuringExecution": {}
                                            }
                                        },
                                        "f:containers": {
                                            "k:{\"name\":\"cluster-controller\"}": {
                                                ".": {},
                                                "f:env": {
                                                    "k:{\"name\":\"APP_OPTS\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_LOG_LEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PATRONI\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_SHOW_STACK_TRACES\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER_SUSPEND\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"JAVA_OPTS\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"MEMORY_REQUEST\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            "f:resourceFieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/etc/group\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/patroni\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/pgbouncer/auth\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/pgbouncer/updated\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/ssl-copy\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"envoy\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    "k:{\"containerPort\":7432,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":7433,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8001,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8008,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/etc/envoy\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/group\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"patroni\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    "k:{\"name\":\"BACKUP_ENV\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"BACKUP_ENV_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"BACKUP_SECRET_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"BASE_SECRET_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"HUGEPAGES_1G_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"HUGEPAGES_2M_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"INITDB_AUTH_HOST\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LD_LIBRARY_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PATRONI_CONFIG_FILE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PATRONI_CONFIG_MD5SUM\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PATRONI_CONFIG_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PATRONI_ENV\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PATRONI_ENV_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PATRONI_KUBERNETES_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"PATRONI_KUBERNETES_POD_IP\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"PATRONI_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"PATRONI_RESTAPI_CONNECT_ADDRESS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PATRONI_SECRET_ENV_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_BINARIES_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_BIN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_BASE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_BINARIES_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_BIN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_EXTENSION_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_LIB64_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_LIB_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_SHARE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSION_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTRA_BIN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTRA_LIB_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_LIB64_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_LIB_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_BASE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_BINARIES_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_BIN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_EXTENSION_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_LIB64_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_LIB_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_SHARE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_SHARE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_UPGRADE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"REPLICATE_ENV\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"REPLICATE_ENV_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"REPLICATE_SECRET_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"RESTORE_ENV\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"RESTORE_ENV_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"RESTORE_SECRET_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:envFrom": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:livenessProbe": {
                                                    "f:failureThreshold": {},
                                                    "f:httpGet": {
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {}
                                                },
                                                "f:name": {},
                                                "f:ports": {
                                                    "k:{\"containerPort\":7432,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":7433,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    },
                                                    "k:{\"containerPort\":8008,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:readinessProbe": {
                                                    "f:httpGet": {
                                                        "f:path": {},
                                                        "f:port": {},
                                                        "f:scheme": {}
                                                    },
                                                    "f:initialDelaySeconds": {},
                                                    "f:periodSeconds": {},
                                                    "f:timeoutSeconds": {}
                                                },
                                                "f:resources": {
                                                    "f:limits": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    },
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/dev/shm\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/env/.secret/backup\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/env/.secret/patroni\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/env/.secret/replicate\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/env/backup\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/env/patroni\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/env/replicate\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/group\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/patroni\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/bin\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/extra/bin\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/extra/lib\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/lib/postgresql/12.17/lib\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/lib64\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/local/bin\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/share/postgresql/12.17\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/share/postgresql/12.17/extension\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/log/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"pgbouncer\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    "k:{\"name\":\"PGBOUNCER_CONFIG_FILE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PGBOUNCER_CONFIG_UPDATED_FILE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/etc/group\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/pgbouncer/auth\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/templates\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"postgres-util\"}": {
                                                ".": {},
                                                "f:args": {},
                                                "f:command": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:stdin": {},
                                                "f:tty": {},
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/etc/group\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"prometheus-postgres-exporter\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    "k:{\"name\":\"DATA_SOURCE_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PGAPPNAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXPORTER_CONSTANT_LABELS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXPORTER_EXTEND_QUERY_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXPORTER_LOG_LEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_PORT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RUN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:ports": {
                                                    "k:{\"containerPort\":9187,\"protocol\":\"TCP\"}": {
                                                        ".": {},
                                                        "f:containerPort": {},
                                                        "f:name": {},
                                                        "f:protocol": {}
                                                    }
                                                },
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/etc/group\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/templates\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/opt/postgres-exporter/queries.yaml\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/run/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:initContainers": {
                                            "k:{\"name\":\"cluster-reconciliation-cycle\"}": {
                                                ".": {},
                                                "f:env": {
                                                    "k:{\"name\":\"APP_OPTS\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_LOG_LEVEL\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_POD_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            "f:fieldRef": {}
                                                        }
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PATRONI\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_SHOW_STACK_TRACES\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_NAME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"CLUSTER_NAMESPACE\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"COMMAND\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"DEBUG_CLUSTER_CONTROLLER_SUSPEND\"}": {
                                                        ".": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"name\":\"MEMORY_REQUEST\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:valueFrom": {
                                                            "f:resourceFieldRef": {}
                                                        }
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/etc/ssl\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/ssl-copy\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"pgbouncer-auth-file\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/etc/pgbouncer\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/pgbouncer/pgbouncer-admin-password\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/pgbouncer/pgbouncer-stats-password\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"relocate-binaries\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LD_LIBRARY_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_BINARIES_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_BIN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_BASE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_BINARIES_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_BIN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_EXTENSION_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_LIB64_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_LIB_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSIONS_SHARE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTENSION_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTRA_BIN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_EXTRA_LIB_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_LIB64_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_LIB_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_BASE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_BINARIES_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_BIN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_EXTENSION_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_LIB64_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_LIB_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_RELOCATED_SHARE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_SHARE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_UPGRADE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/templates\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/var/lib/postgresql\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"setup-arbitrary-user\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"HOME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_BASE_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"PG_DATA_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/local/etc\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/templates\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            },
                                            "k:{\"name\":\"setup-scripts\"}": {
                                                ".": {},
                                                "f:command": {},
                                                "f:env": {
                                                    "k:{\"name\":\"BASE_ENV_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"BASE_SECRET_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_GROUP_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_GSHADOW_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_PASSWD_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"ETC_SHADOW_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"HOME\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_CREATE_BACKUP_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_EXEC_WITH_ENV_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_PATRONICTL_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_POST_INIT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RELOCATE_BINARIES_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RESET_PATRONI_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_DBOPS_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_PGBENCH_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_REPACK_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_RESTART_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_RUN_VACUUM_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SETUP_SCRIPTS_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_SHELL_UTILS_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_FLUENTBIT_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_PATRONI_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_PGBOUNCER_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"POSTGRES_PORT\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    },
                                                    "k:{\"name\":\"TEMPLATES_PATH\"}": {
                                                        ".": {},
                                                        "f:name": {},
                                                        "f:value": {}
                                                    }
                                                },
                                                "f:image": {},
                                                "f:imagePullPolicy": {},
                                                "f:name": {},
                                                "f:resources": {
                                                    "f:requests": {
                                                        "f:cpu": {},
                                                        "f:memory": {}
                                                    }
                                                },
                                                "f:volumeMounts": {
                                                    "k:{\"mountPath\":\"/etc/group\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/gshadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/passwd\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/etc/shadow\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {},
                                                        "f:readOnly": {},
                                                        "f:subPath": {}
                                                    },
                                                    "k:{\"mountPath\":\"/templates\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    },
                                                    "k:{\"mountPath\":\"/usr/local/bin\"}": {
                                                        ".": {},
                                                        "f:mountPath": {},
                                                        "f:name": {}
                                                    }
                                                }
                                            }
                                        },
                                        "f:securityContext": {
                                            "f:fsGroup": {},
                                            "f:runAsGroup": {},
                                            "f:runAsNonRoot": {},
                                            "f:runAsUser": {}
                                        },
                                        "f:serviceAccountName": {},
                                        "f:shareProcessNamespace": {},
                                        "f:terminationGracePeriodSeconds": {},
                                        "f:volumes": {
                                            "k:{\"name\":\"backup-env\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"backup-secret\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"dshm\"}": {
                                                ".": {},
                                                "f:emptyDir": {
                                                    "f:medium": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"empty-base\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"envoy\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"local-bin\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"log\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"patroni-config\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"patroni-env\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"patroni-secret-env\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"pgbouncer\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"pgbouncer-dynamic-config\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"pgbouncer-secrets\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"queries\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"replicate-env\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"replicate-secret\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"socket\"}": {
                                                ".": {},
                                                "f:emptyDir": {
                                                    "f:medium": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"ssl\"}": {
                                                ".": {},
                                                "f:name": {},
                                                "f:secret": {
                                                    "f:defaultMode": {},
                                                    "f:secretName": {}
                                                }
                                            },
                                            "k:{\"name\":\"ssl-copy\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"templates\"}": {
                                                ".": {},
                                                "f:configMap": {
                                                    "f:defaultMode": {},
                                                    "f:name": {}
                                                },
                                                "f:name": {}
                                            },
                                            "k:{\"name\":\"user\"}": {
                                                ".": {},
                                                "f:emptyDir": {},
                                                "f:name": {}
                                            }
                                        }
                                    }
                                },
                                "f:updateStrategy": {
                                    "f:type": {}
                                },
                                "f:volumeClaimTemplates": {}
                            }
                        },
                        "manager": "StackGres",
                        "operation": "Apply",
                        "subresource": null,
                        "time": "2024-02-06T19:22:11+00:00"
                    },
                    {
                        "api_version": "apps/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:status": {
                                "f:availableReplicas": {},
                                "f:collisionCount": {},
                                "f:currentReplicas": {},
                                "f:currentRevision": {},
                                "f:observedGeneration": {},
                                "f:readyReplicas": {},
                                "f:replicas": {},
                                "f:updateRevision": {},
                                "f:updatedReplicas": {}
                            }
                        },
                        "manager": "kube-controller-manager",
                        "operation": "Update",
                        "subresource": "status",
                        "time": "2024-02-06T19:27:11+00:00"
                    }
                ],
                "name": "stackgres",
                "namespace": "default",
                "owner_references": [
                    {
                        "api_version": "stackgres.io/v1",
                        "block_owner_deletion": true,
                        "controller": true,
                        "kind": "SGCluster",
                        "name": "stackgres",
                        "uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                    }
                ],
                "resource_version": "2464",
                "self_link": null,
                "uid": "bf6aee0d-56cb-4c67-91fe-a8ed8b5c9c86"
            },
            "spec": {
                "min_ready_seconds": null,
                "ordinals": null,
                "persistent_volume_claim_retention_policy": {
                    "when_deleted": "Retain",
                    "when_scaled": "Retain"
                },
                "pod_management_policy": "OrderedReady",
                "replicas": 3,
                "revision_history_limit": 10,
                "selector": {
                    "match_expressions": null,
                    "match_labels": {
                        "app": "StackGresCluster",
                        "stackgres.io/cluster": "true",
                        "stackgres.io/cluster-name": "stackgres",
                        "stackgres.io/cluster-scope": "stackgres",
                        "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d",
                        "stackgres.io/disruptible": "true"
                    }
                },
                "service_name": "stackgres",
                "template": {
                    "metadata": {
                        "annotations": {
                            "stackgres.io/cluster-controller-version": "1.8.0",
                            "stackgres.io/envoy-version": "1.24.12",
                            "stackgres.io/operatorVersion": "1.8.0",
                            "stackgres.io/patroni-version": "3.2.0",
                            "stackgres.io/pgbouncer-version": "1.21.0",
                            "stackgres.io/postgresql-version": "12.17",
                            "stackgres.io/prometheus-postgres-exporter-version": "0.12.1"
                        },
                        "creation_timestamp": null,
                        "deletion_grace_period_seconds": null,
                        "deletion_timestamp": null,
                        "finalizers": null,
                        "generate_name": null,
                        "generation": null,
                        "labels": {
                            "app": "StackGresCluster",
                            "stackgres.io/cluster": "true",
                            "stackgres.io/cluster-name": "stackgres",
                            "stackgres.io/cluster-scope": "stackgres",
                            "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d",
                            "stackgres.io/disruptible": "true"
                        },
                        "managed_fields": null,
                        "name": null,
                        "namespace": null,
                        "owner_references": null,
                        "resource_version": null,
                        "self_link": null,
                        "uid": null
                    },
                    "spec": {
                        "active_deadline_seconds": null,
                        "affinity": {
                            "node_affinity": null,
                            "pod_affinity": null,
                            "pod_anti_affinity": {
                                "preferred_during_scheduling_ignored_during_execution": null,
                                "required_during_scheduling_ignored_during_execution": [
                                    {
                                        "label_selector": {
                                            "match_expressions": [
                                                {
                                                    "key": "app",
                                                    "operator": "In",
                                                    "values": [
                                                        "StackGresCluster"
                                                    ]
                                                },
                                                {
                                                    "key": "stackgres.io/cluster",
                                                    "operator": "In",
                                                    "values": [
                                                        "true"
                                                    ]
                                                }
                                            ],
                                            "match_labels": null
                                        },
                                        "namespace_selector": null,
                                        "namespaces": null,
                                        "topology_key": "kubernetes.io/hostname"
                                    }
                                ]
                            }
                        },
                        "automount_service_account_token": null,
                        "containers": [
                            {
                                "args": null,
                                "command": [
                                    "/bin/sh",
                                    "-ex",
                                    "/usr/local/bin/start-patroni.sh"
                                ],
                                "env": [
                                    {
                                        "name": "LOCAL_BIN_PATH",
                                        "value": "/usr/local/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_BASE_PATH",
                                        "value": "/var/lib/postgresql",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_DATA_PATH",
                                        "value": "/var/lib/postgresql/data",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_PASSWD_PATH",
                                        "value": "/etc/passwd",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_GROUP_PATH",
                                        "value": "/etc/group",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_SHADOW_PATH",
                                        "value": "/etc/shadow",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_GSHADOW_PATH",
                                        "value": "/etc/gshadow",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_BASE_PATH",
                                        "value": "/var/lib/postgresql/extensions",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_BINARIES_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_BIN_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_LIB_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/lib",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_SHARE_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_EXTENSION_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12/extension",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_LIB64_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/lib64",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_LIB64_PATH",
                                        "value": "/usr/lib64",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_BINARIES_PATH",
                                        "value": "/usr/lib/postgresql/12.17",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_BIN_PATH",
                                        "value": "/usr/lib/postgresql/12.17/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_LIB_PATH",
                                        "value": "/usr/lib/postgresql/12.17/lib",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTRA_BIN_PATH",
                                        "value": "/usr/lib/postgresql/12.17/extra/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTRA_LIB_PATH",
                                        "value": "/usr/lib/postgresql/12.17/extra/lib",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_SHARE_PATH",
                                        "value": "/usr/share/postgresql/12.17",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSION_PATH",
                                        "value": "/usr/share/postgresql/12.17/extension",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_BASE_PATH",
                                        "value": "/var/lib/postgresql/relocated",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_LIB64_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib64",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_BINARIES_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_BIN_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_LIB_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_SHARE_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_EXTENSION_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17/extension",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_UPGRADE_PATH",
                                        "value": "/var/lib/postgresql/upgrade",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/lib/postgresql/12.17/bin:/usr/lib/postgresql/12.17/extra/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LD_LIBRARY_PATH",
                                        "value": "/usr/lib/postgresql/12.17/extra/lib",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PATRONI_NAME",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "metadata.name"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "PATRONI_KUBERNETES_NAMESPACE",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "metadata.namespace"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "PATRONI_KUBERNETES_POD_IP",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "status.podIP"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "PATRONI_RESTAPI_CONNECT_ADDRESS",
                                        "value": "${PATRONI_KUBERNETES_POD_IP}:8009",
                                        "value_from": null
                                    },
                                    {
                                        "name": "INITDB_AUTH_HOST",
                                        "value": "scram-sha-256",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PATRONI_ENV",
                                        "value": "patroni",
                                        "value_from": null
                                    },
                                    {
                                        "name": "BASE_SECRET_PATH",
                                        "value": "/etc/env/.secret",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PATRONI_ENV_PATH",
                                        "value": "/etc/env/patroni",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PATRONI_SECRET_ENV_PATH",
                                        "value": "/etc/env/.secret/patroni",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PATRONI_CONFIG_PATH",
                                        "value": "/etc/patroni",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PATRONI_CONFIG_FILE_PATH",
                                        "value": "/etc/patroni/config.yml",
                                        "value_from": null
                                    },
                                    {
                                        "name": "BACKUP_ENV",
                                        "value": "backup",
                                        "value_from": null
                                    },
                                    {
                                        "name": "BACKUP_ENV_PATH",
                                        "value": "/etc/env/backup",
                                        "value_from": null
                                    },
                                    {
                                        "name": "BACKUP_SECRET_PATH",
                                        "value": "/etc/env/.secret/backup",
                                        "value_from": null
                                    },
                                    {
                                        "name": "REPLICATE_ENV",
                                        "value": "replicate",
                                        "value_from": null
                                    },
                                    {
                                        "name": "REPLICATE_ENV_PATH",
                                        "value": "/etc/env/replicate",
                                        "value_from": null
                                    },
                                    {
                                        "name": "REPLICATE_SECRET_PATH",
                                        "value": "/etc/env/.secret/replicate",
                                        "value_from": null
                                    },
                                    {
                                        "name": "RESTORE_ENV",
                                        "value": "restore",
                                        "value_from": null
                                    },
                                    {
                                        "name": "RESTORE_ENV_PATH",
                                        "value": "/etc/env/restore",
                                        "value_from": null
                                    },
                                    {
                                        "name": "RESTORE_SECRET_PATH",
                                        "value": "/etc/env/.secret/restore",
                                        "value_from": null
                                    },
                                    {
                                        "name": "HUGEPAGES_2M_PATH",
                                        "value": "/hugepages-2Mi",
                                        "value_from": null
                                    },
                                    {
                                        "name": "HUGEPAGES_1G_PATH",
                                        "value": "/hugepages-1Gi",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PATRONI_CONFIG_MD5SUM",
                                        "value": "FE2D4E880481C9786F5195115F883839",
                                        "value_from": null
                                    }
                                ],
                                "env_from": [
                                    {
                                        "config_map_ref": {
                                            "name": "stackgres",
                                            "optional": null
                                        },
                                        "prefix": null,
                                        "secret_ref": null
                                    }
                                ],
                                "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": {
                                    "_exec": null,
                                    "failure_threshold": 6,
                                    "grpc": null,
                                    "http_get": {
                                        "host": null,
                                        "http_headers": null,
                                        "path": "/liveness",
                                        "port": 8008,
                                        "scheme": "HTTP"
                                    },
                                    "initial_delay_seconds": 15,
                                    "period_seconds": 20,
                                    "success_threshold": 1,
                                    "tcp_socket": null,
                                    "termination_grace_period_seconds": null,
                                    "timeout_seconds": 1
                                },
                                "name": "patroni",
                                "ports": [
                                    {
                                        "container_port": 7432,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "pgport",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 7433,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "pgreplication",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 8008,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "patroniport",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readiness_probe": {
                                    "_exec": null,
                                    "failure_threshold": 3,
                                    "grpc": null,
                                    "http_get": {
                                        "host": null,
                                        "http_headers": null,
                                        "path": "/readiness",
                                        "port": 8008,
                                        "scheme": "HTTP"
                                    },
                                    "initial_delay_seconds": null,
                                    "period_seconds": 2,
                                    "success_threshold": 1,
                                    "tcp_socket": null,
                                    "termination_grace_period_seconds": null,
                                    "timeout_seconds": 1
                                },
                                "resources": {
                                    "claims": null,
                                    "limits": {
                                        "cpu": "2",
                                        "memory": "4Gi"
                                    },
                                    "requests": {
                                        "cpu": "750m",
                                        "memory": "3136Mi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/var/run/postgresql",
                                        "mount_propagation": null,
                                        "name": "socket",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/dev/shm",
                                        "mount_propagation": null,
                                        "name": "dshm",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/log/postgresql",
                                        "mount_propagation": null,
                                        "name": "log",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/local/bin",
                                        "mount_propagation": null,
                                        "name": "local-bin",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/env/patroni",
                                        "mount_propagation": null,
                                        "name": "patroni-env",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/env/.secret/patroni",
                                        "mount_propagation": null,
                                        "name": "patroni-secret-env",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/patroni",
                                        "mount_propagation": null,
                                        "name": "patroni-config",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/env/backup",
                                        "mount_propagation": null,
                                        "name": "backup-env",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/env/.secret/backup",
                                        "mount_propagation": null,
                                        "name": "backup-secret",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/env/replicate",
                                        "mount_propagation": null,
                                        "name": "replicate-env",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/env/.secret/replicate",
                                        "mount_propagation": null,
                                        "name": "replicate-secret",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/lib/postgresql",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/passwd",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/passwd",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/group",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/group",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/shadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/shadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/gshadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/gshadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/lib64",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": "relocated/12.17/6.29/usr/lib64",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/lib/postgresql/12.17/bin",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": "relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/lib/postgresql/12.17/lib",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": "relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/share/postgresql/12.17",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": "relocated/12.17/6.29/usr/share/postgresql/12.17",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/share/postgresql/12.17/extension",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": "extensions/12/6/usr/share/postgresql/12/extension",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/lib/postgresql/12.17/extra/bin",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": "extensions/12/6/usr/lib/postgresql/12/bin",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/lib/postgresql/12.17/extra/lib",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": "extensions/12/6/usr/lib64",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/ssl",
                                        "mount_propagation": null,
                                        "name": "ssl-copy",
                                        "read_only": true,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": [
                                    "-c",
                                    "/etc/envoy/envoy.json"
                                ],
                                "command": [
                                    "/usr/local/bin/envoy"
                                ],
                                "env": null,
                                "env_from": null,
                                "image": "quay.io/ongres/envoy:v1.24.12-build-6.29",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "envoy",
                                "ports": [
                                    {
                                        "container_port": 7432,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "pgport",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 7433,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "pgreplication",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 8001,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "envoy",
                                        "protocol": "TCP"
                                    },
                                    {
                                        "container_port": 8008,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "patroniport",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": {
                                        "cpu": "500m",
                                        "memory": "64Mi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/etc/envoy",
                                        "mount_propagation": null,
                                        "name": "envoy",
                                        "read_only": true,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/passwd",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/passwd",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/group",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/group",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/shadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/shadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/gshadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/gshadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/ssl",
                                        "mount_propagation": null,
                                        "name": "ssl",
                                        "read_only": true,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": null,
                                "command": [
                                    "/bin/sh",
                                    "-ex",
                                    "/templates/start-pgbouncer.sh"
                                ],
                                "env": [
                                    {
                                        "name": "PGBOUNCER_CONFIG_FILE_PATH",
                                        "value": "/etc/pgbouncer/pgbouncer.ini",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PGBOUNCER_CONFIG_UPDATED_FILE_PATH",
                                        "value": "/etc/pgbouncer/updated",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/ongres/pgbouncer:v1.21.0-build-6.29",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "pgbouncer",
                                "ports": null,
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": {
                                        "cpu": "250m",
                                        "memory": "64Mi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/var/run/postgresql",
                                        "mount_propagation": null,
                                        "name": "socket",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/passwd",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/passwd",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/group",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/group",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/shadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/shadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/gshadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/gshadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/templates",
                                        "mount_propagation": null,
                                        "name": "templates",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/pgbouncer",
                                        "mount_propagation": null,
                                        "name": "pgbouncer",
                                        "read_only": true,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/pgbouncer/auth",
                                        "mount_propagation": null,
                                        "name": "pgbouncer-dynamic-config",
                                        "read_only": true,
                                        "sub_path": "auth",
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": null,
                                "command": [
                                    "/bin/sh",
                                    "-ex",
                                    "/templates/start-postgres-exporter.sh"
                                ],
                                "env": [
                                    {
                                        "name": "PGAPPNAME",
                                        "value": "prometheus-postgres-exporter",
                                        "value_from": null
                                    },
                                    {
                                        "name": "DATA_SOURCE_NAME",
                                        "value": "postgresql://postgres@:5432/postgres?host=/var/run/postgresql&sslmode=disable",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXPORTER_EXTEND_QUERY_PATH",
                                        "value": "/var/opt/postgres-exporter/queries.yaml",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXPORTER_CONSTANT_LABELS",
                                        "value": "cluster_name=stackgres, namespace=default",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXPORTER_LOG_LEVEL",
                                        "value": "info",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_PORT",
                                        "value": "5432",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RUN_PATH",
                                        "value": "/var/run/postgresql",
                                        "value_from": null
                                    },
                                    {
                                        "name": "TEMPLATES_PATH",
                                        "value": "/templates",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                        "value": "/usr/local/bin/shell-utils",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                        "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                        "value": "/usr/local/bin/setup-scripts.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                        "value": "/usr/local/bin/relocate-binaries.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                        "value": "/usr/local/bin/start-patroni.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                        "value": "/usr/local/bin/start-pgbouncer.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_PATRONICTL_PATH",
                                        "value": "/usr/local/bin/patronictl",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                        "value": "/usr/local/bin/post-init.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                        "value": "/usr/local/bin/create-backup.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                        "value": "/usr/local/bin/exec-with-env",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_PASSWD_PATH",
                                        "value": "/etc/passwd",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_GROUP_PATH",
                                        "value": "/etc/group",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_SHADOW_PATH",
                                        "value": "/etc/shadow",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_GSHADOW_PATH",
                                        "value": "/etc/gshadow",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                        "value": "/usr/local/bin/set-dbops-running.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                        "value": "/usr/local/bin/run-dbops.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                        "value": "/usr/local/bin/set-dbops-result.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                        "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                        "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                        "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                        "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                        "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                        "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                        "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                        "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                        "value": "/usr/local/bin/start-fluentbit.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                        "value": "/usr/local/bin/start-postgres-exporter.sh",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/ongres/prometheus-postgres-exporter:v0.12.1-build-6.29",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "prometheus-postgres-exporter",
                                "ports": [
                                    {
                                        "container_port": 9187,
                                        "host_ip": null,
                                        "host_port": null,
                                        "name": "pgexporter",
                                        "protocol": "TCP"
                                    }
                                ],
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": {
                                        "cpu": "125m",
                                        "memory": "256Mi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/var/run/postgresql",
                                        "mount_propagation": null,
                                        "name": "socket",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/templates",
                                        "mount_propagation": null,
                                        "name": "templates",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/opt/postgres-exporter/queries.yaml",
                                        "mount_propagation": null,
                                        "name": "queries",
                                        "read_only": true,
                                        "sub_path": "queries.yaml",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/passwd",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/passwd",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/group",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/group",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/shadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/shadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/gshadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/gshadow",
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": [
                                    "-c",
                                    "while true; do sleep 10; done"
                                ],
                                "command": [
                                    "/bin/sh"
                                ],
                                "env": null,
                                "env_from": null,
                                "image": "quay.io/ongres/postgres-util:v12.17-build-6.29",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "postgres-util",
                                "ports": null,
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": {
                                        "cpu": "125m",
                                        "memory": "64Mi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": true,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": true,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/var/run/postgresql",
                                        "mount_propagation": null,
                                        "name": "socket",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/lib/postgresql",
                                        "mount_propagation": null,
                                        "name": "empty-base",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/passwd",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/passwd",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/group",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/group",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/shadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/shadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/gshadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/gshadow",
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": null,
                                "command": null,
                                "env": [
                                    {
                                        "name": "CLUSTER_NAME",
                                        "value": "stackgres",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_NAMESPACE",
                                        "value": "default",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_POD_NAME",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "metadata.name"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS",
                                        "value": "https://extensions.stackgres.io/postgres/repository",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_RECONCILE_PATRONI",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_LOG_LEVEL",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_SHOW_STACK_TRACES",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "APP_OPTS",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "JAVA_OPTS",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "DEBUG_CLUSTER_CONTROLLER",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "DEBUG_CLUSTER_CONTROLLER_SUSPEND",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "MEMORY_REQUEST",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": null,
                                            "resource_field_ref": {
                                                "container_name": "cluster-controller",
                                                "divisor": "1",
                                                "resource": "requests.memory"
                                            },
                                            "secret_key_ref": null
                                        }
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/stackgres/cluster-controller:1.8.0",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "cluster-controller",
                                "ports": null,
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": {
                                        "cpu": "250m",
                                        "memory": "512Mi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/etc/passwd",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/passwd",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/group",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/group",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/shadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/shadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/gshadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/gshadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/lib/postgresql",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/run/postgresql",
                                        "mount_propagation": null,
                                        "name": "socket",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/pgbouncer",
                                        "mount_propagation": null,
                                        "name": "pgbouncer",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/pgbouncer/updated",
                                        "mount_propagation": null,
                                        "name": "pgbouncer-dynamic-config",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/pgbouncer/auth",
                                        "mount_propagation": null,
                                        "name": "pgbouncer-dynamic-config",
                                        "read_only": null,
                                        "sub_path": "auth",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/patroni",
                                        "mount_propagation": null,
                                        "name": "patroni-config",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/ssl",
                                        "mount_propagation": null,
                                        "name": "ssl",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/ssl-copy",
                                        "mount_propagation": null,
                                        "name": "ssl-copy",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            }
                        ],
                        "dns_config": null,
                        "dns_policy": "ClusterFirst",
                        "enable_service_links": null,
                        "ephemeral_containers": null,
                        "host_aliases": null,
                        "host_ipc": null,
                        "host_network": null,
                        "host_pid": null,
                        "host_users": null,
                        "hostname": null,
                        "image_pull_secrets": null,
                        "init_containers": [
                            {
                                "args": null,
                                "command": [
                                    "/bin/sh",
                                    "-ex",
                                    "/templates/setup-arbitrary-user.sh"
                                ],
                                "env": [
                                    {
                                        "name": "TEMPLATES_PATH",
                                        "value": "/templates",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                        "value": "/usr/local/bin/shell-utils",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                        "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                        "value": "/usr/local/bin/setup-scripts.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                        "value": "/usr/local/bin/relocate-binaries.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                        "value": "/usr/local/bin/start-patroni.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                        "value": "/usr/local/bin/start-pgbouncer.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_PATRONICTL_PATH",
                                        "value": "/usr/local/bin/patronictl",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                        "value": "/usr/local/bin/post-init.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                        "value": "/usr/local/bin/create-backup.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                        "value": "/usr/local/bin/exec-with-env",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_PASSWD_PATH",
                                        "value": "/etc/passwd",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_GROUP_PATH",
                                        "value": "/etc/group",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_SHADOW_PATH",
                                        "value": "/etc/shadow",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_GSHADOW_PATH",
                                        "value": "/etc/gshadow",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                        "value": "/usr/local/bin/set-dbops-running.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                        "value": "/usr/local/bin/run-dbops.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                        "value": "/usr/local/bin/set-dbops-result.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                        "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                        "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                        "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                        "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                        "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                        "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                        "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                        "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                        "value": "/usr/local/bin/start-fluentbit.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                        "value": "/usr/local/bin/start-postgres-exporter.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_BASE_PATH",
                                        "value": "/var/lib/postgresql",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_DATA_PATH",
                                        "value": "/var/lib/postgresql/data",
                                        "value_from": null
                                    },
                                    {
                                        "name": "HOME",
                                        "value": "/tmp",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "setup-arbitrary-user",
                                "ports": null,
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": {
                                        "cpu": "2",
                                        "memory": "4Gi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/templates",
                                        "mount_propagation": null,
                                        "name": "templates",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/local/etc",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": null,
                                        "sub_path": "etc",
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": null,
                                "command": [
                                    "/bin/sh",
                                    "-ex",
                                    "/templates/setup-scripts.sh"
                                ],
                                "env": [
                                    {
                                        "name": "LOCAL_BIN_PATH",
                                        "value": "/usr/local/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "TEMPLATES_PATH",
                                        "value": "/templates",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SHELL_UTILS_PATH",
                                        "value": "/usr/local/bin/shell-utils",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SETUP_ARBITRARY_USER_SH_PATH",
                                        "value": "/usr/local/bin/setup-arbitrary-user.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SETUP_SCRIPTS_SH_PATH",
                                        "value": "/usr/local/bin/setup-scripts.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RELOCATE_BINARIES_SH_PATH",
                                        "value": "/usr/local/bin/relocate-binaries.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_PATRONI_SH_PATH",
                                        "value": "/usr/local/bin/start-patroni.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_PGBOUNCER_SH_PATH",
                                        "value": "/usr/local/bin/start-pgbouncer.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_PATRONICTL_PATH",
                                        "value": "/usr/local/bin/patronictl",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_POST_INIT_SH_PATH",
                                        "value": "/usr/local/bin/post-init.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_CREATE_BACKUP_SH_PATH",
                                        "value": "/usr/local/bin/create-backup.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_EXEC_WITH_ENV_PATH",
                                        "value": "/usr/local/bin/exec-with-env",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_PASSWD_PATH",
                                        "value": "/etc/passwd",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_GROUP_PATH",
                                        "value": "/etc/group",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_SHADOW_PATH",
                                        "value": "/etc/shadow",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_GSHADOW_PATH",
                                        "value": "/etc/gshadow",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SET_DBOPS_RUNNING_SH_PATH",
                                        "value": "/usr/local/bin/set-dbops-running.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_DBOPS_SH_PATH",
                                        "value": "/usr/local/bin/run-dbops.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SET_DBOPS_RESULT_SH_PATH",
                                        "value": "/usr/local/bin/set-dbops-result.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_PGBENCH_SH_PATH",
                                        "value": "/usr/local/bin/dbops/pgbench/run-pgbench.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_SET_PGBENCH_RESULT_SH_PATH",
                                        "value": "/usr/local/bin/dbops/pgbench/set-pgbench-result.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_VACUUM_SH_PATH",
                                        "value": "/usr/local/bin/dbops/vacuum/run-vacuum.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_REPACK_SH_PATH",
                                        "value": "/usr/local/bin/dbops/repack/run-repack.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                        "value": "/usr/local/bin/dbops/major-version-upgrade/run-major-version-upgrade.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RUN_RESTART_SH_PATH",
                                        "value": "/usr/local/bin/dbops/restart/run-restart.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_MAJOR_VERSION_UPGRADE_SH_PATH",
                                        "value": "/usr/local/bin/dbops/major-version-upgrade/major-version-upgrade.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_RESET_PATRONI_SH_PATH",
                                        "value": "/usr/local/bin/dbops/major-version-upgrade/reset-patroni.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_FLUENTBIT_SH_PATH",
                                        "value": "/usr/local/bin/start-fluentbit.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LOCAL_BIN_START_POSTGRES_EXPORTER_SH_PATH",
                                        "value": "/usr/local/bin/start-postgres-exporter.sh",
                                        "value_from": null
                                    },
                                    {
                                        "name": "BASE_ENV_PATH",
                                        "value": "/etc/env",
                                        "value_from": null
                                    },
                                    {
                                        "name": "POSTGRES_PORT",
                                        "value": "5432",
                                        "value_from": null
                                    },
                                    {
                                        "name": "BASE_SECRET_PATH",
                                        "value": "/etc/env/.secret",
                                        "value_from": null
                                    },
                                    {
                                        "name": "HOME",
                                        "value": "/tmp",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "setup-scripts",
                                "ports": null,
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": {
                                        "cpu": "2",
                                        "memory": "4Gi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/templates",
                                        "mount_propagation": null,
                                        "name": "templates",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/usr/local/bin",
                                        "mount_propagation": null,
                                        "name": "local-bin",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/passwd",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/passwd",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/group",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/group",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/shadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/shadow",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/gshadow",
                                        "mount_propagation": null,
                                        "name": "user",
                                        "read_only": true,
                                        "sub_path": "etc/gshadow",
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": null,
                                "command": [
                                    "/bin/sh",
                                    "-ex",
                                    "/templates/relocate-binaries.sh"
                                ],
                                "env": [
                                    {
                                        "name": "PG_BASE_PATH",
                                        "value": "/var/lib/postgresql",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_DATA_PATH",
                                        "value": "/var/lib/postgresql/data",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_PASSWD_PATH",
                                        "value": "/etc/passwd",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_GROUP_PATH",
                                        "value": "/etc/group",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_SHADOW_PATH",
                                        "value": "/etc/shadow",
                                        "value_from": null
                                    },
                                    {
                                        "name": "ETC_GSHADOW_PATH",
                                        "value": "/etc/gshadow",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_BASE_PATH",
                                        "value": "/var/lib/postgresql/extensions",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_BINARIES_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_BIN_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_LIB_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/lib/postgresql/12/lib",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_SHARE_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_EXTENSION_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/share/postgresql/12/extension",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSIONS_LIB64_PATH",
                                        "value": "/var/lib/postgresql/extensions/12/6/usr/lib64",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_LIB64_PATH",
                                        "value": "/usr/lib64",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_BINARIES_PATH",
                                        "value": "/usr/lib/postgresql/12.17",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_BIN_PATH",
                                        "value": "/usr/lib/postgresql/12.17/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_LIB_PATH",
                                        "value": "/usr/lib/postgresql/12.17/lib",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTRA_BIN_PATH",
                                        "value": "/usr/lib/postgresql/12.17/extra/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTRA_LIB_PATH",
                                        "value": "/usr/lib/postgresql/12.17/extra/lib",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_SHARE_PATH",
                                        "value": "/usr/share/postgresql/12.17",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_EXTENSION_PATH",
                                        "value": "/usr/share/postgresql/12.17/extension",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_BASE_PATH",
                                        "value": "/var/lib/postgresql/relocated",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_LIB64_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib64",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_BINARIES_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_BIN_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_LIB_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/lib/postgresql/12.17/lib",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_SHARE_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_RELOCATED_EXTENSION_PATH",
                                        "value": "/var/lib/postgresql/relocated/12.17/6.29/usr/share/postgresql/12.17/extension",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PG_UPGRADE_PATH",
                                        "value": "/var/lib/postgresql/upgrade",
                                        "value_from": null
                                    },
                                    {
                                        "name": "PATH",
                                        "value": "/usr/lib/postgresql/12.17/bin:/usr/lib/postgresql/12.17/extra/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
                                        "value_from": null
                                    },
                                    {
                                        "name": "LD_LIBRARY_PATH",
                                        "value": "/usr/lib/postgresql/12.17/extra/lib",
                                        "value_from": null
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/ongres/patroni:v3.2.0-pg12.17-build-6.29",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "relocate-binaries",
                                "ports": null,
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": {
                                        "cpu": "2",
                                        "memory": "4Gi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/templates",
                                        "mount_propagation": null,
                                        "name": "templates",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/var/lib/postgresql",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": null,
                                "command": [
                                    "/bin/sh",
                                    "-exc",
                                    "mkdir -p '/etc/pgbouncer/auth'\ntest -f '/etc/pgbouncer/pgbouncer-admin-password'\ntest -f '/etc/pgbouncer/pgbouncer-stats-password'\nPGBOUNCER_ADMIN_MD5=\"$({\n  cat '/etc/pgbouncer/pgbouncer-admin-password'\n  printf '%s' 'pgbouncer_admin'\n  } | md5sum | cut -d ' ' -f 1)\"\nPGBOUNCER_STATS_MD5=\"$({\n  cat '/etc/pgbouncer/pgbouncer-stats-password'\n  printf '%s' 'pgbouncer_stats'\n  } | md5sum | cut -d ' ' -f 1)\"\n(\nprintf '%s\\n' \"\\\"pgbouncer_admin\\\" \\\"md5$PGBOUNCER_ADMIN_MD5\\\"\"\nprintf '%s\\n' \"\\\"pgbouncer_stats\\\" \\\"md5$PGBOUNCER_STATS_MD5\\\"\"\n) > '/etc/pgbouncer/auth/users.txt'"
                                ],
                                "env": null,
                                "env_from": null,
                                "image": "quay.io/ongres/kubectl:v1.28.2-build-6.29",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "pgbouncer-auth-file",
                                "ports": null,
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": {
                                        "cpu": "2",
                                        "memory": "4Gi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/etc/pgbouncer",
                                        "mount_propagation": null,
                                        "name": "pgbouncer-dynamic-config",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/pgbouncer/pgbouncer-admin-password",
                                        "mount_propagation": null,
                                        "name": "pgbouncer-secrets",
                                        "read_only": true,
                                        "sub_path": "pgbouncer-admin-password",
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/pgbouncer/pgbouncer-stats-password",
                                        "mount_propagation": null,
                                        "name": "pgbouncer-secrets",
                                        "read_only": true,
                                        "sub_path": "pgbouncer-stats-password",
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            },
                            {
                                "args": null,
                                "command": null,
                                "env": [
                                    {
                                        "name": "COMMAND",
                                        "value": "run-reconciliation-cycle",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_NAME",
                                        "value": "stackgres",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_NAMESPACE",
                                        "value": "default",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_POD_NAME",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": {
                                                "api_version": "v1",
                                                "field_path": "metadata.name"
                                            },
                                            "resource_field_ref": null,
                                            "secret_key_ref": null
                                        }
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_EXTENSIONS_REPOSITORY_URLS",
                                        "value": "https://extensions.stackgres.io/postgres/repository",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_SKIP_OVERWRITE_SHARED_LIBRARIES",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_RECONCILE_PGBOUNCER",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_RECONCILE_PATRONI",
                                        "value": "false",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_RECONCILE_MANAGED_SQL",
                                        "value": "true",
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_LOG_LEVEL",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "CLUSTER_CONTROLLER_SHOW_STACK_TRACES",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "APP_OPTS",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "DEBUG_CLUSTER_CONTROLLER",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "DEBUG_CLUSTER_CONTROLLER_SUSPEND",
                                        "value": null,
                                        "value_from": null
                                    },
                                    {
                                        "name": "MEMORY_REQUEST",
                                        "value": null,
                                        "value_from": {
                                            "config_map_key_ref": null,
                                            "field_ref": null,
                                            "resource_field_ref": {
                                                "container_name": "cluster-reconciliation-cycle",
                                                "divisor": "1",
                                                "resource": "requests.memory"
                                            },
                                            "secret_key_ref": null
                                        }
                                    }
                                ],
                                "env_from": null,
                                "image": "quay.io/stackgres/cluster-controller:1.8.0",
                                "image_pull_policy": "IfNotPresent",
                                "lifecycle": null,
                                "liveness_probe": null,
                                "name": "cluster-reconciliation-cycle",
                                "ports": null,
                                "readiness_probe": null,
                                "resources": {
                                    "claims": null,
                                    "limits": null,
                                    "requests": {
                                        "cpu": "2",
                                        "memory": "4Gi"
                                    }
                                },
                                "security_context": null,
                                "startup_probe": null,
                                "stdin": null,
                                "stdin_once": null,
                                "termination_message_path": "/dev/termination-log",
                                "termination_message_policy": "File",
                                "tty": null,
                                "volume_devices": null,
                                "volume_mounts": [
                                    {
                                        "mount_path": "/var/lib/postgresql",
                                        "mount_propagation": null,
                                        "name": "stackgres-data",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/ssl",
                                        "mount_propagation": null,
                                        "name": "ssl",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    },
                                    {
                                        "mount_path": "/etc/ssl-copy",
                                        "mount_propagation": null,
                                        "name": "ssl-copy",
                                        "read_only": null,
                                        "sub_path": null,
                                        "sub_path_expr": null
                                    }
                                ],
                                "working_dir": null
                            }
                        ],
                        "node_name": null,
                        "node_selector": null,
                        "os": null,
                        "overhead": null,
                        "preemption_policy": null,
                        "priority": null,
                        "priority_class_name": null,
                        "readiness_gates": null,
                        "resource_claims": null,
                        "restart_policy": "Always",
                        "runtime_class_name": null,
                        "scheduler_name": "default-scheduler",
                        "scheduling_gates": null,
                        "security_context": {
                            "fs_group": 999,
                            "fs_group_change_policy": null,
                            "run_as_group": 999,
                            "run_as_non_root": true,
                            "run_as_user": 999,
                            "se_linux_options": null,
                            "seccomp_profile": null,
                            "supplemental_groups": null,
                            "sysctls": null,
                            "windows_options": null
                        },
                        "service_account": "stackgres-patroni",
                        "service_account_name": "stackgres-patroni",
                        "set_hostname_as_fqdn": null,
                        "share_process_namespace": true,
                        "subdomain": null,
                        "termination_grace_period_seconds": 60,
                        "tolerations": null,
                        "topology_spread_constraints": null,
                        "volumes": [
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": "Memory",
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "socket",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": "Memory",
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "dshm",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": null,
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "log",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": null,
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "local-bin",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": {
                                    "default_mode": 292,
                                    "items": null,
                                    "name": "stackgres",
                                    "optional": null
                                },
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "patroni-env",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "patroni-secret-env",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": {
                                    "default_mode": 256,
                                    "items": null,
                                    "optional": null,
                                    "secret_name": "stackgres"
                                },
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": null,
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "patroni-config",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": {
                                    "default_mode": 292,
                                    "items": null,
                                    "name": "stackgres-backup",
                                    "optional": null
                                },
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "backup-env",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "backup-secret",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": {
                                    "default_mode": 292,
                                    "items": null,
                                    "optional": null,
                                    "secret_name": "stackgres-backup"
                                },
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": {
                                    "default_mode": 420,
                                    "items": null,
                                    "name": "stackgres-replicate",
                                    "optional": null
                                },
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "replicate-env",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "replicate-secret",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": {
                                    "default_mode": 420,
                                    "items": null,
                                    "optional": null,
                                    "secret_name": "stackgres-replicate"
                                },
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": null,
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "user",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": null,
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "ssl-copy",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": {
                                    "default_mode": 288,
                                    "items": null,
                                    "name": "stackgres-envoy-config",
                                    "optional": null
                                },
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "envoy",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "ssl",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": {
                                    "default_mode": 256,
                                    "items": null,
                                    "optional": null,
                                    "secret_name": "stackgres-ssl"
                                },
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": {
                                    "default_mode": 292,
                                    "items": null,
                                    "name": "stackgres-templates",
                                    "optional": null
                                },
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "templates",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": {
                                    "default_mode": 288,
                                    "items": null,
                                    "name": "stackgres-connection-pooling-config",
                                    "optional": null
                                },
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "pgbouncer",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": null,
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "pgbouncer-dynamic-config",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": {
                                    "default_mode": 420,
                                    "items": null,
                                    "name": "stackgres-prometheus-postgres-exporter-config",
                                    "optional": null
                                },
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "queries",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": {
                                    "medium": null,
                                    "size_limit": null
                                },
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "empty-base",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": null,
                                "storageos": null,
                                "vsphere_volume": null
                            },
                            {
                                "aws_elastic_block_store": null,
                                "azure_disk": null,
                                "azure_file": null,
                                "cephfs": null,
                                "cinder": null,
                                "config_map": null,
                                "csi": null,
                                "downward_api": null,
                                "empty_dir": null,
                                "ephemeral": null,
                                "fc": null,
                                "flex_volume": null,
                                "flocker": null,
                                "gce_persistent_disk": null,
                                "git_repo": null,
                                "glusterfs": null,
                                "host_path": null,
                                "iscsi": null,
                                "name": "pgbouncer-secrets",
                                "nfs": null,
                                "persistent_volume_claim": null,
                                "photon_persistent_disk": null,
                                "portworx_volume": null,
                                "projected": null,
                                "quobyte": null,
                                "rbd": null,
                                "scale_io": null,
                                "secret": {
                                    "default_mode": 420,
                                    "items": null,
                                    "optional": null,
                                    "secret_name": "stackgres"
                                },
                                "storageos": null,
                                "vsphere_volume": null
                            }
                        ]
                    }
                },
                "update_strategy": {
                    "rolling_update": null,
                    "type": "OnDelete"
                },
                "volume_claim_templates": [
                    {
                        "api_version": "v1",
                        "kind": "PersistentVolumeClaim",
                        "metadata": {
                            "annotations": {
                                "stackgres.io/operatorVersion": "1.8.0"
                            },
                            "creation_timestamp": null,
                            "deletion_grace_period_seconds": null,
                            "deletion_timestamp": null,
                            "finalizers": null,
                            "generate_name": null,
                            "generation": null,
                            "labels": {
                                "app": "StackGresCluster",
                                "stackgres.io/cluster": "true",
                                "stackgres.io/cluster-name": "stackgres",
                                "stackgres.io/cluster-scope": "stackgres",
                                "stackgres.io/cluster-uid": "db2870c5-0a49-4538-9762-fe167a6e691d"
                            },
                            "managed_fields": null,
                            "name": "stackgres-data",
                            "namespace": "default",
                            "owner_references": null,
                            "resource_version": null,
                            "self_link": null,
                            "uid": null
                        },
                        "spec": {
                            "access_modes": [
                                "ReadWriteOnce"
                            ],
                            "data_source": null,
                            "data_source_ref": null,
                            "resources": {
                                "claims": null,
                                "limits": null,
                                "requests": {
                                    "storage": "10Gi"
                                }
                            },
                            "selector": null,
                            "storage_class_name": null,
                            "volume_mode": "Filesystem",
                            "volume_name": null
                        },
                        "status": {
                            "access_modes": null,
                            "allocated_resources": null,
                            "capacity": null,
                            "conditions": null,
                            "phase": "Pending",
                            "resize_status": null
                        }
                    }
                ]
            },
            "status": {
                "available_replicas": 3,
                "collision_count": 0,
                "conditions": null,
                "current_replicas": 3,
                "current_revision": "stackgres-56fbd68cdc",
                "observed_generation": 1,
                "ready_replicas": 3,
                "replicas": 3,
                "update_revision": "stackgres-56fbd68cdc",
                "updated_replicas": 3
            }
        }
    },
    "storage_class": {
        "standard": {
            "allow_volume_expansion": null,
            "allowed_topologies": null,
            "api_version": null,
            "kind": null,
            "metadata": {
                "annotations": {
                    "kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"storage.k8s.io/v1\",\"kind\":\"StorageClass\",\"metadata\":{\"annotations\":{\"storageclass.kubernetes.io/is-default-class\":\"true\"},\"name\":\"standard\"},\"provisioner\":\"rancher.io/local-path\",\"reclaimPolicy\":\"Delete\",\"volumeBindingMode\":\"WaitForFirstConsumer\"}\n",
                    "storageclass.kubernetes.io/is-default-class": "true"
                },
                "creation_timestamp": "2024-02-06T19:13:51+00:00",
                "deletion_grace_period_seconds": null,
                "deletion_timestamp": null,
                "finalizers": null,
                "generate_name": null,
                "generation": null,
                "labels": null,
                "managed_fields": [
                    {
                        "api_version": "storage.k8s.io/v1",
                        "fields_type": "FieldsV1",
                        "fields_v1": {
                            "f:metadata": {
                                "f:annotations": {
                                    ".": {},
                                    "f:kubectl.kubernetes.io/last-applied-configuration": {},
                                    "f:storageclass.kubernetes.io/is-default-class": {}
                                }
                            },
                            "f:provisioner": {},
                            "f:reclaimPolicy": {},
                            "f:volumeBindingMode": {}
                        },
                        "manager": "kubectl-client-side-apply",
                        "operation": "Update",
                        "subresource": null,
                        "time": "2024-02-06T19:13:51+00:00"
                    }
                ],
                "name": "standard",
                "namespace": null,
                "owner_references": null,
                "resource_version": "302",
                "self_link": null,
                "uid": "b5cfa8e8-06de-41cd-907a-3a54a92efb5c"
            },
            "mount_options": null,
            "parameters": null,
            "provisioner": "rancher.io/local-path",
            "reclaim_policy": "Delete",
            "volume_binding_mode": "WaitForFirstConsumer"
        }
    }
}